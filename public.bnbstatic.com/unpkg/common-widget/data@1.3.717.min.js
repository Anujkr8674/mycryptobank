/*! For license information please see data@1.3.717.min.js.LICENSE.txt */ ! function(t, e) {
    "object" == typeof exports && "object" == typeof module ? module.exports = e(require("React"), require("b2aSDK"), require("fetchPonyfill"), require("httpSDK"), require("themisSDK"), require("utilsUMD")) : "function" == typeof define && define.amd ? define("dataUMD", ["React", "b2aSDK", "fetchPonyfill", "httpSDK", "themisSDK", "utilsUMD"], e) : "object" == typeof exports ? exports.dataUMD = e(require("React"), require("b2aSDK"), require("fetchPonyfill"), require("httpSDK"), require("themisSDK"), require("utilsUMD")) : t.dataUMD = e(t.React, t.b2aSDK, t.fetchPonyfill, t.httpSDK, t.themisSDK, t.utilsUMD)
}(this, ((t, e, r, n, o, i) => (() => {
    "use strict";
    var a, c = {
            5932: (t, e, r) => {
                r.r(e), r.d(e, {
                    CONNTECT_TRIGGER_FROM_KEY: () => Ya,
                    CONNTECT_TRIGGER_FROM_KEY_REFER: () => qa,
                    ConnectTwitterTriggerForm: () => Va,
                    MICA_ENTITY: () => w,
                    PlatformSourceType: () => Ka,
                    TwitterBindResultStatus: () => za,
                    VALIDATE_FAIL: () => g,
                    VALIDATE_LOADING: () => d,
                    VALIDATE_PASS: () => m,
                    combineTradeTransferHandler: () => vl,
                    configInitial: () => Do,
                    connectTriggerFrom: () => Wa,
                    generateSenceValidateContext: () => En,
                    getInvestmentRecommend: () => Qi,
                    initWsForWallet: () => Eu,
                    mapWalletToBalanceName: () => al,
                    mapWalletToBalancequery: () => cl,
                    registerFundingWs: () => Lu,
                    registerSpotWs: () => xu,
                    requestAfterCheckLogin: () => v,
                    twitterBindCheck: () => Qa,
                    useAllConfig: () => pr,
                    useAlphaTokenList: () => Pa,
                    useApolloData: () => Jo,
                    useAssetWalletGroup: () => bl,
                    useAssets: () => uo,
                    useBasisTimeZone: () => Jn,
                    useBizChannel: () => yo,
                    useBncLocation: () => Pn,
                    useBncUserStatus: () => Uc,
                    useBusinessKeys: () => re,
                    useCombineTrade: () => yl,
                    useCommonEnv: () => xr,
                    useComplianceActionCheck: () => Gi,
                    useComplianceInfo: () => Vo,
                    useCplRegion: () => ic,
                    useCurrency: () => Fr,
                    useDepositRecommendation: () => Ga,
                    useDisabledDepositMethods: () => Hc,
                    useDownloadUrlConfig: () => ci,
                    useDownloadUrlConfigV2: () => Li,
                    useFiatCurrencyData: () => Je,
                    useFiatMenusData: () => ur,
                    useFiatPrice: () => $n,
                    useFutureCm: () => ya,
                    useFutureProduct: () => ao,
                    useFutureUm: () => va,
                    useFuturesFiatPrice: () => io,
                    useGetWalletGroup: () => xl,
                    useI18n: () => Ao,
                    useInvestmentRecommendData: () => Ji,
                    useIsSeo: () => ga,
                    useIsSubAccount: () => Bi,
                    useKycInfo: () => oc,
                    useLanguage: () => Wr,
                    useLanguageList: () => zr,
                    useMediaState: () => Ri,
                    useNavI18n: () => tn,
                    useOptionsProduct: () => ca,
                    usePageInfo: () => qo,
                    usePairPrice: () => Hn,
                    usePmAccountInfo: () => dc,
                    useProduct: () => qn,
                    useProductByTradeSdkData: () => Yn,
                    useProfile: () => Te,
                    useQuoteAssetList: () => Wi,
                    useRegion: () => rn,
                    useScreenType: () => ba,
                    useSearchExplore: () => ia,
                    useSpotOpenPrice: () => da,
                    useTheme: () => vo,
                    useThemis: () => gn,
                    useThemisFeaturesGateHelper: () => mn,
                    useTodoList: () => Tl,
                    useTokenPrices: () => Rn,
                    useTopBarAndCTA: () => Oo,
                    useTwitterInfo: () => Ja,
                    useUserBalance: () => ju,
                    useUserBaseDetail: () => ve,
                    useUserBaseInfo: () => be,
                    useUserComplianceStatus: () => Pl,
                    useUserDepositInfo: () => Fc,
                    useUserEntityTag: () => Xc,
                    useUserFiatPaymentData: () => uu,
                    useUserFuturesAccountInfo: () => je,
                    useUserInfo: () => Ye,
                    useUserKycStatusInfo: () => Tu,
                    useUserLoginStatus: () => y,
                    useUserProfile: () => De,
                    useUserQuoteAssets: () => Vc,
                    useUserTaskChallenges: () => Lc,
                    useUserTradeStatus: () => kc,
                    useValidateScences: () => Sn
                });
                var n = r(5285),
                    o = r(1996),
                    i = r(1024);

                function a(t) {
                    return a = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, a(t)
                }

                function c(t, e) {
                    return function(t) {
                        if (Array.isArray(t)) return t
                    }(t) || function(t, e) {
                        var r = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                        if (null != r) {
                            var n, o, i, a, c = [],
                                u = !0,
                                l = !1;
                            try {
                                if (i = (r = r.call(t)).next, 0 === e) {
                                    if (Object(r) !== r) return;
                                    u = !1
                                } else
                                    for (; !(u = (n = i.call(r)).done) && (c.push(n.value), c.length !== e); u = !0);
                            } catch (t) {
                                l = !0, o = t
                            } finally {
                                try {
                                    if (!u && null != r.return && (a = r.return(), Object(a) !== a)) return
                                } finally {
                                    if (l) throw o
                                }
                            }
                            return c
                        }
                    }(t, e) || l(t, e) || function() {
                        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                    }()
                }

                function u() {
                    u = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        c = o.asyncIterator || "@@asyncIterator",
                        l = o.toStringTag || "@@toStringTag";

                    function s(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        s({}, "")
                    } catch (t) {
                        s = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function f(t, e, r, o) {
                        var i = e && e.prototype instanceof v ? e : v,
                            a = Object.create(i.prototype),
                            c = new P(o || []);
                        return n(a, "_invoke", {
                            value: E(t, r, c)
                        }), a
                    }

                    function h(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = f;
                    var p = {};

                    function v() {}

                    function y() {}

                    function d() {}
                    var m = {};
                    s(m, i, (function() {
                        return this
                    }));
                    var g = Object.getPrototypeOf,
                        w = g && g(g(_([])));
                    w && w !== e && r.call(w, i) && (m = w);
                    var b = d.prototype = v.prototype = Object.create(m);

                    function x(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            s(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function L(t, e) {
                        function o(n, i, c, u) {
                            var l = h(t[n], t, i);
                            if ("throw" !== l.type) {
                                var s = l.arg,
                                    f = s.value;
                                return f && "object" == a(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, c, u)
                                }), (function(t) {
                                    o("throw", t, c, u)
                                })) : e.resolve(f).then((function(t) {
                                    s.value = t, c(s)
                                }), (function(t) {
                                    return o("throw", t, c, u)
                                }))
                            }
                            u(l.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function E(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = S(a, r);
                                    if (c) {
                                        if (c === p) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = h(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === p) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function S(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, S(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), p;
                        var o = h(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, p;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, p) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, p)
                    }

                    function O(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function j(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function P(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(O, this), this.reset(!0)
                    }

                    function _(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: k
                        }
                    }

                    function k() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return y.prototype = d, n(b, "constructor", {
                        value: d,
                        configurable: !0
                    }), n(d, "constructor", {
                        value: y,
                        configurable: !0
                    }), y.displayName = s(d, l, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === y || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, d) : (t.__proto__ = d, s(t, l, "GeneratorFunction")), t.prototype = Object.create(b), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, x(L.prototype), s(L.prototype, c, (function() {
                        return this
                    })), t.AsyncIterator = L, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new L(f(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, x(b), s(b, l, "Generator"), s(b, i, (function() {
                        return this
                    })), s(b, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = _, P.prototype = {
                        constructor: P,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(j), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, p) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), p
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), j(r), p
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        j(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: _(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), p
                        }
                    }, t
                }

                function l(t, e) {
                    if (t) {
                        if ("string" == typeof t) return s(t, e);
                        var r = Object.prototype.toString.call(t).slice(8, -1);
                        return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? s(t, e) : void 0
                    }
                }

                function s(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
                    return n
                }

                function f(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }

                function h(t) {
                    return function() {
                        var e = this,
                            r = arguments;
                        return new Promise((function(n, o) {
                            var i = t.apply(e, r);

                            function a(t) {
                                f(i, n, o, a, c, "next", t)
                            }

                            function c(t) {
                                f(i, n, o, a, c, "throw", t)
                            }
                            a(void 0)
                        }))
                    }
                }
                o.isClient ? void 0 === o.cachePromiseStore.getCache("loginIn-loading") && (o.cachePromiseStore.setState("loginIn-loading", !0), (0, n.g4)().then((function(t) {
                    o.cachePromiseStore.setState("loginIn", t), o.cachePromiseStore.setState("loginIn-loading", !1)
                }))) : (o.cachePromiseStore.setState("loginIn", !1), o.cachePromiseStore.setState("loginIn-loading", !0));
                var p = new Promise((function(t) {
                        o.cachePromiseStore.lisenerCacheData("loginIn-loading", (function(e) {
                            e || t(o.cachePromiseStore.getCache("loginIn"))
                        }))
                    })),
                    v = function(t) {
                        var e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
                        return h(u().mark((function r() {
                            var n, o, i, a, c = arguments;
                            return u().wrap((function(r) {
                                for (;;) switch (r.prev = r.next) {
                                    case 0:
                                        return r.next = 2, p;
                                    case 2:
                                        if (n = r.sent, !e || n) {
                                            r.next = 5;
                                            break
                                        }
                                        return r.abrupt("return", null);
                                    case 5:
                                        for (o = c.length, i = new Array(o), a = 0; a < o; a++) i[a] = c[a];
                                        return r.abrupt("return", t.apply(void 0, function(t) {
                                            if (Array.isArray(t)) return s(t)
                                        }(u = i) || function(t) {
                                            if ("undefined" != typeof Symbol && null != t[Symbol.iterator] || null != t["@@iterator"]) return Array.from(t)
                                        }(u) || l(u) || function() {
                                            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                                        }()));
                                    case 7:
                                    case "end":
                                        return r.stop()
                                }
                                var u
                            }), r)
                        })))
                    };
                const y = function() {
                    var t = c((0, o.useCacheState)("loginIn"), 1)[0],
                        e = c((0, o.useCacheState)("loginIn-loading"), 1)[0];
                    return (0, i.useMemo)((function() {
                        return {
                            value: t,
                            loading: e,
                            status: (0, o.getStatusRequestStatus)(e)
                        }
                    }), [t, e])
                };
                var d = -1,
                    m = 1,
                    g = 0,
                    w = ["AT", "BG", "HR", "CY", "CZ", "DK", "EE", "FI", "DE", "GR", "HU", "IS", "IE", "LV", "LI", "LT", "LU", "MT", "NL", "NO", "PT", "RO", "SK", "SI", "PL", "SE", "FR", "IT", "ES", "PL_BE"],
                    b = r(1458);

                function x(t) {
                    return x = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, x(t)
                }
                var L = ["name"];

                function E() {
                    E = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new P(o || []);
                        return n(a, "_invoke", {
                            value: L(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(_([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == x(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function L(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = S(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function S(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, S(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function O(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function j(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function P(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(O, this), this.reset(!0)
                    }

                    function _(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: k
                        }
                    }

                    function k() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = _, P.prototype = {
                        constructor: P,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(j), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), j(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        j(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: _(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function S(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(t);
                        e && (n = n.filter((function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable
                        }))), r.push.apply(r, n)
                    }
                    return r
                }

                function O(t) {
                    for (var e = 1; e < arguments.length; e++) {
                        var r = null != arguments[e] ? arguments[e] : {};
                        e % 2 ? S(Object(r), !0).forEach((function(e) {
                            j(t, e, r[e])
                        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : S(Object(r)).forEach((function(e) {
                            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e))
                        }))
                    }
                    return t
                }

                function j(t, e, r) {
                    return (e = function(t) {
                        var e = function(t, e) {
                            if ("object" !== x(t) || null === t) return t;
                            var r = t[Symbol.toPrimitive];
                            if (void 0 !== r) {
                                var n = r.call(t, "string");
                                if ("object" !== x(n)) return n;
                                throw new TypeError("@@toPrimitive must return a primitive value.")
                            }
                            return String(t)
                        }(t);
                        return "symbol" === x(e) ? e : String(e)
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t
                }

                function P(t, e) {
                    if (null == t) return {};
                    var r, n, o = function(t, e) {
                        if (null == t) return {};
                        var r, n, o = {},
                            i = Object.keys(t);
                        for (n = 0; n < i.length; n++) r = i[n], e.indexOf(r) >= 0 || (o[r] = t[r]);
                        return o
                    }(t, e);
                    if (Object.getOwnPropertySymbols) {
                        var i = Object.getOwnPropertySymbols(t);
                        for (n = 0; n < i.length; n++) r = i[n], e.indexOf(r) >= 0 || Object.prototype.propertyIsEnumerable.call(t, r) && (o[r] = t[r])
                    }
                    return o
                }

                function _(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
                    return n
                }

                function k(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }
                var N = function() {
                    var t, e = (t = E().mark((function t() {
                        var e, r, n;
                        return E().wrap((function(t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2, (0, b.get)("/bapi/asset/v1/public/asset-service/product/currency");
                                case 2:
                                    if ("000000" === (e = t.sent).code) {
                                        t.next = 5;
                                        break
                                    }
                                    return t.abrupt("return", null);
                                case 5:
                                    return r = e.data.map((function(t) {
                                        var e, r, n = (e = t.pair.split("_"), r = 1, function(t) {
                                            if (Array.isArray(t)) return t
                                        }(e) || function(t, e) {
                                            var r = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                                            if (null != r) {
                                                var n, o, i, a, c = [],
                                                    u = !0,
                                                    l = !1;
                                                try {
                                                    if (i = (r = r.call(t)).next, 0 === e) {
                                                        if (Object(r) !== r) return;
                                                        u = !1
                                                    } else
                                                        for (; !(u = (n = i.call(r)).done) && (c.push(n.value), c.length !== e); u = !0);
                                                } catch (t) {
                                                    l = !0, o = t
                                                } finally {
                                                    try {
                                                        if (!u && null != r.return && (a = r.return(), Object(a) !== a)) return
                                                    } finally {
                                                        if (l) throw o
                                                    }
                                                }
                                                return c
                                            }
                                        }(e, r) || function(t, e) {
                                            if (t) {
                                                if ("string" == typeof t) return _(t, e);
                                                var r = Object.prototype.toString.call(t).slice(8, -1);
                                                return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? _(t, e) : void 0
                                            }
                                        }(e, r) || function() {
                                            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                                        }())[0];
                                        return t.name, O(O({
                                            name: n
                                        }, P(t, L)), {}, {
                                            value: n
                                        })
                                    })).sort((function(t, e) {
                                        return t.value.localeCompare(e.value)
                                    })).filter((function(t) {
                                        return !t.pair.startsWith("USD")
                                    })), n = {
                                        name: "USD",
                                        pair: "USD_USD",
                                        rate: 1,
                                        symbol: "$",
                                        fullName: "US Dollar",
                                        value: "USD",
                                        imageUrl: "https://public.bnbstatic.com/image/currencies/USD.png"
                                    }, r.push(n), t.abrupt("return", r);
                                case 9:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    })), function() {
                        var e = this,
                            r = arguments;
                        return new Promise((function(n, o) {
                            var i = t.apply(e, r);

                            function a(t) {
                                k(i, n, o, a, c, "next", t)
                            }

                            function c(t) {
                                k(i, n, o, a, c, "throw", t)
                            }
                            a(void 0)
                        }))
                    });
                    return function() {
                        return e.apply(this, arguments)
                    }
                }();

                function A(t) {
                    return A = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, A(t)
                }

                function T() {
                    T = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == A(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function G(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }

                function I(t) {
                    return function() {
                        var e = this,
                            r = arguments;
                        return new Promise((function(n, o) {
                            var i = t.apply(e, r);

                            function a(t) {
                                G(i, n, o, a, c, "next", t)
                            }

                            function c(t) {
                                G(i, n, o, a, c, "throw", t)
                            }
                            a(void 0)
                        }))
                    }
                }
                var C = function() {
                        var t = I(T().mark((function t(e) {
                            var r, n;
                            return T().wrap((function(t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        return r = "/bapi/apex/v1/public/apex/marketing/web/querylangMappingByKey", e && (r += "?key=".concat(encodeURIComponent(e))), t.next = 4, (0, b.get)(r);
                                    case 4:
                                        if ("000000" !== (n = t.sent).code) {
                                            t.next = 7;
                                            break
                                        }
                                        return t.abrupt("return", Object.entries(n.data).sort((function(t, e) {
                                            return t[0].localeCompare(e[0])
                                        })));
                                    case 7:
                                        return t.abrupt("return", null);
                                    case 8:
                                    case "end":
                                        return t.stop()
                                }
                            }), t)
                        })));
                        return function(e) {
                            return t.apply(this, arguments)
                        }
                    }(),
                    F = function() {
                        var t = I(T().mark((function t(e) {
                            var r, n, o;
                            return T().wrap((function(t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        if (r = "/bapi/fe/cms/region/language", e && (r += "?bizKey=".concat(encodeURIComponent(e))), t.prev = 2, !e) {
                                            t.next = 5;
                                            break
                                        }
                                        throw new Error("bizKey is not supported in V2");
                                    case 5:
                                        return t.next = 7, (0, b.get)(r);
                                    case 7:
                                        if ("000000" !== (n = t.sent).code) {
                                            t.next = 12;
                                            break
                                        }
                                        return o = {}, n.data.match.forEach((function(t) {
                                            o[t.target] = t.name
                                        })), t.abrupt("return", Object.entries(o).sort((function(t, e) {
                                            return t[0].localeCompare(e[0])
                                        })));
                                    case 12:
                                        return t.abrupt("return", null);
                                    case 15:
                                        return t.prev = 15, t.t0 = t.catch(2), t.abrupt("return", C(e));
                                    case 18:
                                    case "end":
                                        return t.stop()
                                }
                            }), t, null, [
                                [2, 15]
                            ])
                        })));
                        return function(e) {
                            return t.apply(this, arguments)
                        }
                    }(),
                    D = r(6723);

                function U(t) {
                    return U = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, U(t)
                }

                function M() {
                    M = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == U(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function R(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }
                var B = function() {
                        var t, e = (t = M().mark((function t() {
                            var e;
                            return M().wrap((function(t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        return t.next = 2, (0, D.v)();
                                    case 2:
                                        return e = t.sent, t.abrupt("return", e);
                                    case 4:
                                    case "end":
                                        return t.stop()
                                }
                            }), t)
                        })), function() {
                            var e = this,
                                r = arguments;
                            return new Promise((function(n, o) {
                                var i = t.apply(e, r);

                                function a(t) {
                                    R(i, n, o, a, c, "next", t)
                                }

                                function c(t) {
                                    R(i, n, o, a, c, "throw", t)
                                }
                                a(void 0)
                            }))
                        });
                        return function() {
                            return e.apply(this, arguments)
                        }
                    }(),
                    Y = r(5212);

                function q(t) {
                    return q = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, q(t)
                }

                function K() {
                    K = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == q(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function V(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }
                var z = {
                        l: "low",
                        c: "close",
                        h: "high",
                        o: "open",
                        v: "volume",
                        qv: "quoteVolume",
                        s: "symbol",
                        ts: "tickSize",
                        i: "minQty",
                        q: "quoteAsset",
                        b: "baseAsset",
                        qn: "quoteName",
                        an: "baseAssetName",
                        pm: "parentMarket",
                        pn: "parentMarketName",
                        cs: "circulatingSupply",
                        hd: "hidden",
                        tags: "tags",
                        etf: "etf"
                    },
                    W = function(t) {
                        return Object.keys(z).reduce((function(e, r) {
                            return t[r] && (e[z[r] || r] = t[r]), e
                        }), {})
                    },
                    H = function() {
                        var t, e = (t = K().mark((function t(e) {
                            var r, n, o;
                            return K().wrap((function(t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        return t.next = 2, (0, Y.Sq)({
                                            includeEtf: !0
                                        }, e ? {
                                            "BNC-Location": e
                                        } : void 0);
                                    case 2:
                                        return r = t.sent, n = Array.isArray(r) ? r : [], o = n.filter((function(t) {
                                            return !1 === t.sd && t.q && t.pm
                                        })).reduce((function(t, e) {
                                            return e.s && (t[e.s] = W(e)), t
                                        }), {}), t.abrupt("return", o);
                                    case 6:
                                    case "end":
                                        return t.stop()
                                }
                            }), t)
                        })), function() {
                            var e = this,
                                r = arguments;
                            return new Promise((function(n, o) {
                                var i = t.apply(e, r);

                                function a(t) {
                                    V(i, n, o, a, c, "next", t)
                                }

                                function c(t) {
                                    V(i, n, o, a, c, "throw", t)
                                }
                                a(void 0)
                            }))
                        });
                        return function(t) {
                            return e.apply(this, arguments)
                        }
                    }(),
                    $ = r(9179),
                    Z = r(8568);

                function Q(t) {
                    return Q = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, Q(t)
                }

                function J(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(t);
                        e && (n = n.filter((function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable
                        }))), r.push.apply(r, n)
                    }
                    return r
                }

                function X(t) {
                    for (var e = 1; e < arguments.length; e++) {
                        var r = null != arguments[e] ? arguments[e] : {};
                        e % 2 ? J(Object(r), !0).forEach((function(e) {
                            tt(t, e, r[e])
                        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : J(Object(r)).forEach((function(e) {
                            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e))
                        }))
                    }
                    return t
                }

                function tt(t, e, r) {
                    return (e = function(t) {
                        var e = function(t, e) {
                            if ("object" !== Q(t) || null === t) return t;
                            var r = t[Symbol.toPrimitive];
                            if (void 0 !== r) {
                                var n = r.call(t, "string");
                                if ("object" !== Q(n)) return n;
                                throw new TypeError("@@toPrimitive must return a primitive value.")
                            }
                            return String(t)
                        }(t);
                        return "symbol" === Q(e) ? e : String(e)
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t
                }

                function et() {
                    et = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == Q(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function rt(t, e) {
                    return function(t) {
                        if (Array.isArray(t)) return t
                    }(t) || function(t, e) {
                        var r = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                        if (null != r) {
                            var n, o, i, a, c = [],
                                u = !0,
                                l = !1;
                            try {
                                if (i = (r = r.call(t)).next, 0 === e) {
                                    if (Object(r) !== r) return;
                                    u = !1
                                } else
                                    for (; !(u = (n = i.call(r)).done) && (c.push(n.value), c.length !== e); u = !0);
                            } catch (t) {
                                l = !0, o = t
                            } finally {
                                try {
                                    if (!u && null != r.return && (a = r.return(), Object(a) !== a)) return
                                } finally {
                                    if (l) throw o
                                }
                            }
                            return c
                        }
                    }(t, e) || function(t, e) {
                        if (t) {
                            if ("string" == typeof t) return nt(t, e);
                            var r = Object.prototype.toString.call(t).slice(8, -1);
                            return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? nt(t, e) : void 0
                        }
                    }(t, e) || function() {
                        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                    }()
                }

                function nt(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
                    return n
                }

                function ot(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }

                function it(t) {
                    return function() {
                        var e = this,
                            r = arguments;
                        return new Promise((function(n, o) {
                            var i = t.apply(e, r);

                            function a(t) {
                                ot(i, n, o, a, c, "next", t)
                            }

                            function c(t) {
                                ot(i, n, o, a, c, "throw", t)
                            }
                            a(void 0)
                        }))
                    }
                }
                var at = {
                    DELIVERING: "DELIVERING",
                    PRE_DELIVERING: "PRE_DELIVERING",
                    TRADING: "TRADING",
                    PRE_SETTLE: "PRE_SETTLE"
                };

                function ct(t) {
                    var e = t.contractStatus || t.cts;
                    return [at.TRADING, at.PRE_DELIVERING, at.PRE_SETTLE].includes(e)
                }
                var ut = {
                        l: "low",
                        c: "close",
                        h: "high",
                        o: "open",
                        v: "volume",
                        qv: "quoteVolume",
                        s: "symbol",
                        ts: "tickSize",
                        i: "minQty",
                        q: "quoteAsset",
                        b: "baseAsset",
                        m: "marginAsset",
                        qn: "quoteName",
                        an: "baseAssetName",
                        pm: "parentMarket",
                        pn: "parentMarketName",
                        cs: "circulatingSupply",
                        qp: "quantityPrecision",
                        pp: "pricePrecision",
                        f: "filters",
                        etf: "etf",
                        dd: "deliveryDate",
                        p: "pair",
                        ct: "contractType",
                        cv: "contractSize",
                        cts: "contractStatus",
                        eqp: "equalQtyPrecision",
                        bv: "baseVolume",
                        sp: "settlePlan",
                        pom: "delisted",
                        pomt: "delistedTime",
                        tp: "triggerProtect",
                        tags: "tags",
                        isDelivery: "isDelivery",
                        type: "",
                        lss: "limitStepSize",
                        mss: "marketStepSize",
                        st: "tradingStatus",
                        lf: "liquidationFee",
                        mtb: "marketTakeBound",
                        ml: "maxMoveOrderLimit",
                        obd: "onboardDate"
                    },
                    lt = Object.keys(ut),
                    st = function(t, e) {
                        return t && "0" !== t ? t : e
                    };

                function ft(t, e, r) {
                    var n, o, i = t.filters.find((function(t) {
                            return "LOT_SIZE" === (null == t ? void 0 : t.filterType)
                        })),
                        a = t.filters.find((function(t) {
                            return "MARKET_LOT_SIZE" === (null == t ? void 0 : t.filterType)
                        }));
                    return {
                        s: t.symbol,
                        ts: st(null === (n = t.filters[0]) || void 0 === n ? void 0 : n.tickSize, "0.01"),
                        i: st(null === (o = t.filters[1]) || void 0 === o ? void 0 : o.minQty, "0.001"),
                        lss: st(i && "stepSize" in i ? i.stepSize : void 0, "0.001"),
                        mss: st(a && "stepSize" in a ? a.stepSize : void 0, "0.001"),
                        q: t.quoteAsset,
                        b: t.baseAsset,
                        m: t.marginAsset,
                        o: null == e ? void 0 : e.openPrice,
                        c: null == e ? void 0 : e.lastPrice,
                        h: null == e ? void 0 : e.highPrice,
                        l: null == e ? void 0 : e.lowPrice,
                        qp: t.quantityPrecision,
                        pp: t.pricePrecision,
                        qv: e && "quoteVolume" in e ? e.quoteVolume : void 0,
                        f: t.filters,
                        p: t.pair,
                        cv: "contractSize" in t ? t.contractSize : void 0,
                        ct: null == t ? void 0 : t.contractType,
                        dd: null == t ? void 0 : t.deliveryDate,
                        cts: "contractStatus" in t ? null == t ? void 0 : t.contractStatus : null == t ? void 0 : t.status,
                        v: null == e ? void 0 : e.volume,
                        eqp: "equalQtyPrecision" in t ? null == t ? void 0 : t.equalQtyPrecision : void 0,
                        bv: e && "baseVolume" in e ? null == e ? void 0 : e.baseVolume : void 0,
                        sp: "settlePlan" in t ? t.settlePlan : void 0,
                        tags: t.underlyingSubType,
                        tp: t.triggerProtect,
                        lf: t.liquidationFee,
                        mtb: t.marketTakeBound,
                        isDelivery: r,
                        ml: t.maxMoveOrderLimit,
                        obd: t.onboardDate
                    }
                }
                var ht = function(t) {
                        return (Array.isArray(t) ? t : []).reduce((function(t, e) {
                            return e.s && (t[e.s] = function(t) {
                                return t ? lt.reduce((function(e, r) {
                                    "ts" === r && 0 === Number(t.ts) && (t.ts = "1");
                                    var n = ut[r];
                                    return n && (e[n] = t[r]), "isDelivery" === r && (e.isCM = t.isDelivery), e
                                }), {
                                    symbolDisplay: null != t && t.isDelivery ? [t.s].join("/") : [t.b, t.q].join("/")
                                }) : t
                            }(e)), t
                        }), {})
                    },
                    pt = function() {
                        var t = it(et().mark((function t(e) {
                            var r, n, i, a, c, u, l, s, f, h, p;
                            return et().wrap((function(t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        return r = e.isAll, t.prev = 1, t.next = 4, Promise.allSettled([(0, $.cz)({
                                            showall: r
                                        }), (0, Z.T8)()]);
                                    case 4:
                                        return n = t.sent, i = rt(n, 2), a = i[0], c = i[1], u = "fulfilled" === a.status ? a.value : {}, l = u.symbols, s = void 0 === l ? [] : l, f = u.assets, h = void 0 === f ? [] : f, p = "fulfilled" === c.status ? c.value : [], t.abrupt("return", {
                                            umProducts: s.map((function(t) {
                                                return ft(t, p.find((function(e) {
                                                    return e.symbol === t.symbol
                                                })), !1)
                                            })) || [],
                                            umAutoAssetExchangeInfo: (0, o.arrayToObject)(h, "asset") || {}
                                        });
                                    case 13:
                                        t.prev = 13, t.t0 = t.catch(1), console.error("BAD REQUEST:\n          fetchUMProducts\n           parse ERROR is ".concat(t.t0.message, "\n").concat(t.t0.stack));
                                    case 16:
                                        return t.abrupt("return", {});
                                    case 17:
                                    case "end":
                                        return t.stop()
                                }
                            }), t, null, [
                                [1, 13]
                            ])
                        })));
                        return function(e) {
                            return t.apply(this, arguments)
                        }
                    }(),
                    vt = function() {
                        var t = it(et().mark((function t(e) {
                            var r, n, o, i, a, c, u;
                            return et().wrap((function(t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        return r = e.isAll, t.prev = 1, t.next = 4, Promise.allSettled([(0, $.Hl)({
                                            showall: r
                                        }), (0, Z.Yl)()]);
                                    case 4:
                                        return n = t.sent, o = rt(n, 2), i = o[0], a = o[1], c = "fulfilled" === i.status ? i.value : [], u = "fulfilled" === a.status ? a.value : [], t.abrupt("return", c.map((function(t) {
                                            return ft(t, u.find((function(e) {
                                                return e.symbol === t.symbol
                                            })), !0)
                                        })) || []);
                                    case 13:
                                        t.prev = 13, t.t0 = t.catch(1), console.error("BAD REQUEST:\n        fetchCMProducts\n           parse ERROR is ".concat(t.t0.message, "\n").concat(t.t0.stack));
                                    case 16:
                                        return t.abrupt("return", []);
                                    case 17:
                                    case "end":
                                        return t.stop()
                                }
                            }), t, null, [
                                [1, 13]
                            ])
                        })));
                        return function(e) {
                            return t.apply(this, arguments)
                        }
                    }();

                function yt() {
                    return dt.apply(this, arguments)
                }

                function dt() {
                    return dt = it(et().mark((function t() {
                        var e, r, n, o, i, a, c, u, l, s, f, h, p = arguments;
                        return et().wrap((function(t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    return e = (p.length > 0 && void 0 !== p[0] ? p[0] : {}).isAll, r = void 0 !== e && e, t.next = 3, Promise.allSettled([pt({
                                        isAll: r
                                    }), vt({
                                        isAll: r
                                    })]);
                                case 3:
                                    return n = t.sent, o = rt(n, 2), i = o[0], a = o[1], c = "fulfilled" === i.status ? i.value : {}, u = c.umProducts, l = void 0 === u ? [] : u, s = c.umAutoAssetExchangeInfo, f = void 0 === s ? {} : s, h = "fulfilled" === a.status ? a.value : [], t.abrupt("return", {
                                        perpetual: l,
                                        delivery: h,
                                        umAutoAssetExchangeInfo: f
                                    });
                                case 10:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    }))), dt.apply(this, arguments)
                }
                var mt = function() {
                    var t = it(et().mark((function t(e) {
                        var r, n, o, i, a, c, u, l, s, f;
                        return et().wrap((function(t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2, yt({
                                        isAll: !0
                                    });
                                case 2:
                                    return r = t.sent, n = r.perpetual, o = r.delivery, i = n && n.length ? n : [], a = o && o.length ? o : [], c = i.filter(ct), u = a.filter(ct), l = ht(c), s = ht(u), f = X(X({}, l), s), Object.keys(e).forEach((function(t) {
                                        f[t] && (f[t] = X(X({}, f[t]), {}, {
                                            openPrice: e[t]
                                        }))
                                    })), t.abrupt("return", f);
                                case 14:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    })));
                    return function(e) {
                        return t.apply(this, arguments)
                    }
                }();

                function gt(t) {
                    return gt = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, gt(t)
                }

                function wt() {
                    wt = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == gt(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function bt(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }
                var xt = function() {
                    var t, e = (t = wt().mark((function t() {
                        var e;
                        return wt().wrap((function(t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    return t.prev = 0, t.next = 3, (0, b.get)("/bapi/apex/v1/friendly/apex/marketing/app/search/symbol/recommend");
                                case 3:
                                    if ("000000" !== (e = t.sent).code) {
                                        t.next = 6;
                                        break
                                    }
                                    return t.abrupt("return", e.data);
                                case 6:
                                    return t.abrupt("return", null);
                                case 9:
                                    return t.prev = 9, t.t0 = t.catch(0), t.abrupt("return", null);
                                case 12:
                                case "end":
                                    return t.stop()
                            }
                        }), t, null, [
                            [0, 9]
                        ])
                    })), function() {
                        var e = this,
                            r = arguments;
                        return new Promise((function(n, o) {
                            var i = t.apply(e, r);

                            function a(t) {
                                bt(i, n, o, a, c, "next", t)
                            }

                            function c(t) {
                                bt(i, n, o, a, c, "throw", t)
                            }
                            a(void 0)
                        }))
                    });
                    return function() {
                        return e.apply(this, arguments)
                    }
                }();

                function Lt(t) {
                    return Lt = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, Lt(t)
                }

                function Et() {
                    Et = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == Lt(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function St(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }
                var Ot = function() {
                    var t, e = (t = Et().mark((function t(e) {
                        var r, n;
                        return Et().wrap((function(t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    return r = e.currency, t.prev = 1, t.next = 4, (0, b.get)("/bapi/apex/v2/friendly/apex/marketing/app/search/earn/recommend", {
                                        headers: {
                                            "bnc-app-mode": "pro",
                                            "bnc-currency": r
                                        }
                                    });
                                case 4:
                                    if ("000000" !== (n = t.sent).code) {
                                        t.next = 7;
                                        break
                                    }
                                    return t.abrupt("return", n.data);
                                case 7:
                                    return t.abrupt("return", null);
                                case 10:
                                    return t.prev = 10, t.t0 = t.catch(1), t.abrupt("return", null);
                                case 13:
                                case "end":
                                    return t.stop()
                            }
                        }), t, null, [
                            [1, 10]
                        ])
                    })), function() {
                        var e = this,
                            r = arguments;
                        return new Promise((function(n, o) {
                            var i = t.apply(e, r);

                            function a(t) {
                                St(i, n, o, a, c, "next", t)
                            }

                            function c(t) {
                                St(i, n, o, a, c, "throw", t)
                            }
                            a(void 0)
                        }))
                    });
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }();

                function jt(t) {
                    return jt = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, jt(t)
                }

                function Pt() {
                    Pt = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == jt(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function _t(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }
                var kt = function() {
                    var t, e = (t = Pt().mark((function t() {
                        var e, r;
                        return Pt().wrap((function(t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    return t.prev = 0, t.next = 3, (0, b.get)("/bapi/eoptions/v1/public/eoptions/market/ticker");
                                case 3:
                                    if ("000000" !== (e = t.sent).code) {
                                        t.next = 7;
                                        break
                                    }
                                    return r = e.data.reduce((function(t, e) {
                                        return t[e.symbol] = e, t
                                    }), {}), t.abrupt("return", {
                                        productMap: r,
                                        productList: e.data
                                    });
                                case 7:
                                    return t.abrupt("return", {
                                        productMap: null,
                                        productList: []
                                    });
                                case 10:
                                    return t.prev = 10, t.t0 = t.catch(0), t.t0 instanceof Error && console.error("getOptionProducts error:", null === t.t0 || void 0 === t.t0 ? void 0 : t.t0.message), t.abrupt("return", {
                                        productMap: null,
                                        productList: []
                                    });
                                case 14:
                                case "end":
                                    return t.stop()
                            }
                        }), t, null, [
                            [0, 10]
                        ])
                    })), function() {
                        var e = this,
                            r = arguments;
                        return new Promise((function(n, o) {
                            var i = t.apply(e, r);

                            function a(t) {
                                _t(i, n, o, a, c, "next", t)
                            }

                            function c(t) {
                                _t(i, n, o, a, c, "throw", t)
                            }
                            a(void 0)
                        }))
                    });
                    return function() {
                        return e.apply(this, arguments)
                    }
                }();

                function Nt(t) {
                    return Nt = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, Nt(t)
                }

                function At() {
                    At = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == Nt(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function Tt(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }
                var Gt = function() {
                    var t, e = (t = At().mark((function t(e) {
                        var r, n, o, i, a, c;
                        return At().wrap((function(t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    return r = e.platform, n = e.currency, o = {
                                        platform: r
                                    }, i = {
                                        headers: {
                                            "bnc-currency": n
                                        }
                                    }, t.next = 5, (0, b.post)("/bapi/compliance/v1/friendly/compliance/businessCheckV2", o, i);
                                case 5:
                                    return a = t.sent, c = a.data, t.abrupt("return", c);
                                case 8:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    })), function() {
                        var e = this,
                            r = arguments;
                        return new Promise((function(n, o) {
                            var i = t.apply(e, r);

                            function a(t) {
                                Tt(i, n, o, a, c, "next", t)
                            }

                            function c(t) {
                                Tt(i, n, o, a, c, "throw", t)
                            }
                            a(void 0)
                        }))
                    });
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }();

                function It(t) {
                    return It = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, It(t)
                }

                function Ct() {
                    Ct = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == It(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function Ft(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }
                var Dt = function() {
                        var t, e = (t = Ct().mark((function t(e) {
                            var r, n, i, a, c;
                            return Ct().wrap((function(t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        return r = [], t.prev = 1, t.next = 4, (0, b.get)("/bapi/asset/v3/private/asset-service/wallet/wallet-group".concat((0, o.obj2query)(e)));
                                    case 4:
                                        n = t.sent, i = n.success, a = n.data, c = void 0 === a ? [] : a, i && (r = c || []), t.next = 14;
                                        break;
                                    case 11:
                                        t.prev = 11, t.t0 = t.catch(1), r = [];
                                    case 14:
                                        return t.abrupt("return", r);
                                    case 15:
                                    case "end":
                                        return t.stop()
                                }
                            }), t, null, [
                                [1, 11]
                            ])
                        })), function() {
                            var e = this,
                                r = arguments;
                            return new Promise((function(n, o) {
                                var i = t.apply(e, r);

                                function a(t) {
                                    Ft(i, n, o, a, c, "next", t)
                                }

                                function c(t) {
                                    Ft(i, n, o, a, c, "throw", t)
                                }
                                a(void 0)
                            }))
                        });
                        return function(t) {
                            return e.apply(this, arguments)
                        }
                    }(),
                    Ut = r(6868);

                function Mt(t) {
                    return Mt = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, Mt(t)
                }

                function Rt() {
                    Rt = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == Mt(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function Bt(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }
                var Yt = function() {
                    var t, e = (t = Rt().mark((function t(e) {
                        var r, n, o;
                        return Rt().wrap((function(t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    return t.prev = 0, t.next = 3, (0, b.get)("/bapi/asset/v2/private/asset-service/wallet/balance?".concat((0, Ut.DT)(e)));
                                case 3:
                                    o = t.sent, t.next = 9;
                                    break;
                                case 6:
                                    t.prev = 6, t.t0 = t.catch(0), o = {
                                        success: !1,
                                        data: []
                                    };
                                case 9:
                                    return t.abrupt("return", Array.isArray(null === (r = o) || void 0 === r ? void 0 : r.data) ? null === (n = o) || void 0 === n ? void 0 : n.data : []);
                                case 10:
                                case "end":
                                    return t.stop()
                            }
                        }), t, null, [
                            [0, 6]
                        ])
                    })), function() {
                        var e = this,
                            r = arguments;
                        return new Promise((function(n, o) {
                            var i = t.apply(e, r);

                            function a(t) {
                                Bt(i, n, o, a, c, "next", t)
                            }

                            function c(t) {
                                Bt(i, n, o, a, c, "throw", t)
                            }
                            a(void 0)
                        }))
                    });
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }();

                function qt(t) {
                    return qt = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, qt(t)
                }

                function Kt() {
                    Kt = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == qt(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function Vt(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }
                var zt = v(function() {
                    var t, e = (t = Kt().mark((function t(e) {
                        return Kt().wrap((function(t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    return t.abrupt("return", Gt({
                                        platform: "WEB",
                                        currency: e
                                    }));
                                case 1:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    })), function() {
                        var e = this,
                            r = arguments;
                        return new Promise((function(n, o) {
                            var i = t.apply(e, r);

                            function a(t) {
                                Vt(i, n, o, a, c, "next", t)
                            }

                            function c(t) {
                                Vt(i, n, o, a, c, "throw", t)
                            }
                            a(void 0)
                        }))
                    });
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(), !1);

                function Wt(t) {
                    return Wt = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, Wt(t)
                }

                function Ht(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(t);
                        e && (n = n.filter((function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable
                        }))), r.push.apply(r, n)
                    }
                    return r
                }

                function $t(t) {
                    for (var e = 1; e < arguments.length; e++) {
                        var r = null != arguments[e] ? arguments[e] : {};
                        e % 2 ? Ht(Object(r), !0).forEach((function(e) {
                            Zt(t, e, r[e])
                        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : Ht(Object(r)).forEach((function(e) {
                            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e))
                        }))
                    }
                    return t
                }

                function Zt(t, e, r) {
                    return (e = function(t) {
                        var e = function(t, e) {
                            if ("object" !== Wt(t) || null === t) return t;
                            var r = t[Symbol.toPrimitive];
                            if (void 0 !== r) {
                                var n = r.call(t, "string");
                                if ("object" !== Wt(n)) return n;
                                throw new TypeError("@@toPrimitive must return a primitive value.")
                            }
                            return String(t)
                        }(t);
                        return "symbol" === Wt(e) ? e : String(e)
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t
                }

                function Qt() {
                    Qt = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == Wt(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function Jt(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }
                var Xt = function() {
                        var t, e = (t = Qt().mark((function t(e) {
                            var r, n, o;
                            return Qt().wrap((function(t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        return t.next = 2, zt(e);
                                    case 2:
                                        if (!(r = t.sent) || !r.success) {
                                            t.next = 5;
                                            break
                                        }
                                        return t.abrupt("return", {
                                            keys: (null === (n = r.restriction) || void 0 === n ? void 0 : n.keys) || [],
                                            allowedKeys: (null === (o = r.restriction) || void 0 === o ? void 0 : o.allowedKeys) || []
                                        });
                                    case 5:
                                        return t.abrupt("return", {
                                            keys: [],
                                            allowedKeys: []
                                        });
                                    case 6:
                                    case "end":
                                        return t.stop()
                                }
                            }), t)
                        })), function() {
                            var e = this,
                                r = arguments;
                            return new Promise((function(n, o) {
                                var i = t.apply(e, r);

                                function a(t) {
                                    Jt(i, n, o, a, c, "next", t)
                                }

                                function c(t) {
                                    Jt(i, n, o, a, c, "throw", t)
                                }
                                a(void 0)
                            }))
                        });
                        return function(t) {
                            return e.apply(this, arguments)
                        }
                    }(),
                    te = function(t, e, r) {
                        var n = r ? null == t ? void 0 : t.allowedKeys : null == t ? void 0 : t.keys;
                        if (null == e || !e.length) return m;
                        if (!Array.isArray(n) || null == n || !n.length) return r ? g : m;
                        var i = (0, o.checkListFromOtherList)(n, e);
                        return (i = r ? i : !i) ? m : g
                    },
                    ee = (0, o.generateUseState)("businessKeys", Xt, ["currency"]);
                const re = function() {
                    var t, e, r = ee(),
                        n = (0, i.useCallback)((function(t, e) {
                            return te(r.value, t, e)
                        }), [r.value]);
                    return $t($t({}, r), {}, {
                        value: null === (t = r.value) || void 0 === t ? void 0 : t.keys,
                        allowedKeys: null === (e = r.value) || void 0 === e ? void 0 : e.allowedKeys,
                        validateBusinessKey: n
                    })
                };
                var ne = r(2394);

                function oe(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(t);
                        e && (n = n.filter((function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable
                        }))), r.push.apply(r, n)
                    }
                    return r
                }

                function ie(t) {
                    for (var e = 1; e < arguments.length; e++) {
                        var r = null != arguments[e] ? arguments[e] : {};
                        e % 2 ? oe(Object(r), !0).forEach((function(e) {
                            ae(t, e, r[e])
                        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : oe(Object(r)).forEach((function(e) {
                            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e))
                        }))
                    }
                    return t
                }

                function ae(t, e, r) {
                    return (e = function(t) {
                        var e = function(t, e) {
                            if ("object" !== ue(t) || null === t) return t;
                            var r = t[Symbol.toPrimitive];
                            if (void 0 !== r) {
                                var n = r.call(t, "string");
                                if ("object" !== ue(n)) return n;
                                throw new TypeError("@@toPrimitive must return a primitive value.")
                            }
                            return String(t)
                        }(t);
                        return "symbol" === ue(e) ? e : String(e)
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t
                }

                function ce() {
                    ce = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == ue(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function ue(t) {
                    return ue = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, ue(t)
                }

                function le(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
                    return n
                }

                function se(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }

                function fe(t) {
                    return function() {
                        var e = this,
                            r = arguments;
                        return new Promise((function(n, o) {
                            var i = t.apply(e, r);

                            function a(t) {
                                se(i, n, o, a, c, "next", t)
                            }

                            function c(t) {
                                se(i, n, o, a, c, "throw", t)
                            }
                            a(void 0)
                        }))
                    }
                }
                var he = v(fe(ce().mark((function t() {
                        var e, r, n, o, i, a, c;
                        return ce().wrap((function(t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    return n = {}, t.next = 3, Promise.all([(0, b.post)("/bapi/accounts/v1/private/account/user/base-detail", {}), (0, ne.Ri)()]);
                                case 3:
                                    return o = t.sent, l = 2, i = function(t) {
                                        if (Array.isArray(t)) return t
                                    }(u = o) || function(t, e) {
                                        var r = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                                        if (null != r) {
                                            var n, o, i, a, c = [],
                                                u = !0,
                                                l = !1;
                                            try {
                                                if (i = (r = r.call(t)).next, 0 === e) {
                                                    if (Object(r) !== r) return;
                                                    u = !1
                                                } else
                                                    for (; !(u = (n = i.call(r)).done) && (c.push(n.value), c.length !== e); u = !0);
                                            } catch (t) {
                                                l = !0, o = t
                                            } finally {
                                                try {
                                                    if (!u && null != r.return && (a = r.return(), Object(a) !== a)) return
                                                } finally {
                                                    if (l) throw o
                                                }
                                            }
                                            return c
                                        }
                                    }(u, l) || function(t, e) {
                                        if (t) {
                                            if ("string" == typeof t) return le(t, e);
                                            var r = Object.prototype.toString.call(t).slice(8, -1);
                                            return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? le(t, e) : void 0
                                        }
                                    }(u, l) || function() {
                                        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                                    }(), a = i[0], c = i[1], "000000" === a.code && Object.assign(n, a.data), "object" === ue(c.userComplianceStatus) && Object.assign(n, c.userComplianceStatus), "undefined" != typeof window && window.localStorage && null !== (null == a || null === (e = a.data) || void 0 === e ? void 0 : e.tradeLevel) && void 0 !== (null == a || null === (r = a.data) || void 0 === r ? void 0 : r.tradeLevel) && localStorage.setItem("BNC-Level", a.data.tradeLevel.toString()), t.abrupt("return", n);
                                case 11:
                                case "end":
                                    return t.stop()
                            }
                            var u, l
                        }), t)
                    })))),
                    pe = (0, o.generateUseState)("userBaseDetail", he);
                const ve = function() {
                    var t = pe();
                    return ie(ie({}, t), {}, {
                        refresh: t.update
                    })
                };

                function ye(t) {
                    return ye = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, ye(t)
                }

                function de() {
                    de = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == ye(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function me(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }

                function ge(t) {
                    return function() {
                        var e = this,
                            r = arguments;
                        return new Promise((function(n, o) {
                            var i = t.apply(e, r);

                            function a(t) {
                                me(i, n, o, a, c, "next", t)
                            }

                            function c(t) {
                                me(i, n, o, a, c, "throw", t)
                            }
                            a(void 0)
                        }))
                    }
                }
                var we = v(ge(de().mark((function t() {
                    var e;
                    return de().wrap((function(t) {
                        for (;;) switch (t.prev = t.next) {
                            case 0:
                                return t.next = 2, (0, b.get)("/bapi/accounts/v1/private/account/get-user-base-info");
                            case 2:
                                return e = t.sent, t.abrupt("return", e.data);
                            case 4:
                            case "end":
                                return t.stop()
                        }
                    }), t)
                }))));
                const be = (0, o.generateUseState)("userBaseInfo", we);

                function xe(t) {
                    return xe = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, xe(t)
                }

                function Le() {
                    Le = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == xe(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function Ee(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }

                function Se(t) {
                    return function() {
                        var e = this,
                            r = arguments;
                        return new Promise((function(n, o) {
                            var i = t.apply(e, r);

                            function a(t) {
                                Ee(i, n, o, a, c, "next", t)
                            }

                            function c(t) {
                                Ee(i, n, o, a, c, "throw", t)
                            }
                            a(void 0)
                        }))
                    }
                }
                var Oe = v(Se(Le().mark((function t() {
                    var e;
                    return Le().wrap((function(t) {
                        for (;;) switch (t.prev = t.next) {
                            case 0:
                                return t.next = 2, (0, b.get)("/bapi/accounts/v1/private/account/futures-account-exist", {});
                            case 2:
                                return e = t.sent, t.abrupt("return", e.data);
                            case 4:
                            case "end":
                                return t.stop()
                        }
                    }), t)
                }))));
                const je = (0, o.generateUseState)("useUserFuturesAccountInfo", Oe);
                var Pe = r(1170);

                function _e(t) {
                    return _e = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, _e(t)
                }

                function ke() {
                    ke = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == _e(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function Ne(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }

                function Ae(t) {
                    return function() {
                        var e = this,
                            r = arguments;
                        return new Promise((function(n, o) {
                            var i = t.apply(e, r);

                            function a(t) {
                                Ne(i, n, o, a, c, "next", t)
                            }

                            function c(t) {
                                Ne(i, n, o, a, c, "throw", t)
                            }
                            a(void 0)
                        }))
                    }
                }
                const Te = (0, o.generateUseState)("profile", v(Ae(ke().mark((function t() {
                    var e;
                    return ke().wrap((function(t) {
                        for (;;) switch (t.prev = t.next) {
                            case 0:
                                return t.next = 2, (0, Pe.DY)({
                                    nicknameQueryType: "NORMAL"
                                });
                            case 2:
                                if ("000000" !== (e = t.sent).code) {
                                    t.next = 5;
                                    break
                                }
                                return t.abrupt("return", e.data);
                            case 5:
                                return t.abrupt("return", {});
                            case 6:
                            case "end":
                                return t.stop()
                        }
                    }), t)
                })))));

                function Ge(t) {
                    return Ge = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, Ge(t)
                }

                function Ie() {
                    Ie = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == Ge(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function Ce(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }
                var Fe = function() {
                    var t, e = (t = Ie().mark((function t() {
                        var e;
                        return Ie().wrap((function(t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2, (0, b.get)("/bapi/apex/v2/private/apex/user/current/profile/query");
                                case 2:
                                    if ("000000" !== (e = t.sent).code) {
                                        t.next = 5;
                                        break
                                    }
                                    return t.abrupt("return", e.data);
                                case 5:
                                    return t.abrupt("return", {});
                                case 6:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    })), function() {
                        var e = this,
                            r = arguments;
                        return new Promise((function(n, o) {
                            var i = t.apply(e, r);

                            function a(t) {
                                Ce(i, n, o, a, c, "next", t)
                            }

                            function c(t) {
                                Ce(i, n, o, a, c, "throw", t)
                            }
                            a(void 0)
                        }))
                    });
                    return function() {
                        return e.apply(this, arguments)
                    }
                }();
                const De = (0, o.generateUseState)("userProfile", v(Fe));

                function Ue(t) {
                    return Ue = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, Ue(t)
                }

                function Me() {
                    Me = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == Ue(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function Re(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }
                var Be = function() {
                    var t, e = (t = Me().mark((function t() {
                        var e;
                        return Me().wrap((function(t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2, (0, b.get)("/bapi/accounts/v1/private/account/user/userInfo");
                                case 2:
                                    if ("000000" !== (e = t.sent).code) {
                                        t.next = 5;
                                        break
                                    }
                                    return t.abrupt("return", e.data);
                                case 5:
                                    return t.abrupt("return", {});
                                case 6:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    })), function() {
                        var e = this,
                            r = arguments;
                        return new Promise((function(n, o) {
                            var i = t.apply(e, r);

                            function a(t) {
                                Re(i, n, o, a, c, "next", t)
                            }

                            function c(t) {
                                Re(i, n, o, a, c, "throw", t)
                            }
                            a(void 0)
                        }))
                    });
                    return function() {
                        return e.apply(this, arguments)
                    }
                }();
                const Ye = (0, o.generateUseState)("userUserInfo", v(Be));
                var qe = r(4126);

                function Ke(t) {
                    return Ke = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, Ke(t)
                }

                function Ve(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
                    return n
                }

                function ze() {
                    ze = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == Ke(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function We(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }

                function He(t) {
                    return function() {
                        var e = this,
                            r = arguments;
                        return new Promise((function(n, o) {
                            var i = t.apply(e, r);

                            function a(t) {
                                We(i, n, o, a, c, "next", t)
                            }

                            function c(t) {
                                We(i, n, o, a, c, "throw", t)
                            }
                            a(void 0)
                        }))
                    }
                }
                var $e = "/bapi/fiat/v1/public/fiatpayment/menu/currency",
                    Ze = "/bapi/fiat/v1/private/fiatpayment/menu/currency",
                    Qe = "fiat-prefer-currency";
                o.isClient && (0, o.runAfterDocumentReady)((function() {
                    var t = o.cookies.read(Qe);
                    t && "EUR" !== t && o.cachePromiseStore.setState("fiatActiveCurrency", t)
                })), (0, o.initStoreEmptyKeyValue)("fiatActiveCurrency", "EUR");
                const Je = function() {
                    var t, e, r, n, a = (r = (0, o.useCacheState)("fiatActiveCurrency"), n = 2, function(t) {
                            if (Array.isArray(t)) return t
                        }(r) || function(t, e) {
                            var r = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                            if (null != r) {
                                var n, o, i, a, c = [],
                                    u = !0,
                                    l = !1;
                                try {
                                    if (i = (r = r.call(t)).next, 0 === e) {
                                        if (Object(r) !== r) return;
                                        u = !1
                                    } else
                                        for (; !(u = (n = i.call(r)).done) && (c.push(n.value), c.length !== e); u = !0);
                                } catch (t) {
                                    l = !0, o = t
                                } finally {
                                    try {
                                        if (!u && null != r.return && (a = r.return(), Object(a) !== a)) return
                                    } finally {
                                        if (l) throw o
                                    }
                                }
                                return c
                            }
                        }(r, n) || function(t, e) {
                            if (t) {
                                if ("string" == typeof t) return Ve(t, e);
                                var r = Object.prototype.toString.call(t).slice(8, -1);
                                return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? Ve(t, e) : void 0
                            }
                        }(r, n) || function() {
                            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                        }()),
                        c = a[0],
                        u = a[1],
                        l = y(),
                        s = l.value,
                        f = l.loading,
                        h = (0, o.useAsync)((function() {
                            return f ? {
                                currencyList: []
                            } : function(t) {
                                return o.cachePromiseStore.checkCacheBeforeRequest(t ? Ze : $e, He(ze().mark((function e() {
                                    var r, n;
                                    return ze().wrap((function(e) {
                                        for (;;) switch (e.prev = e.next) {
                                            case 0:
                                                return e.next = 2, (0, b.get)(t ? Ze : $e, {
                                                    headers: {
                                                        "BNC-Location": o.cookies.read("BNC-Location")
                                                    }
                                                });
                                            case 2:
                                                if ("000000" !== (r = e.sent).code) {
                                                    e.next = 5;
                                                    break
                                                }
                                                return e.abrupt("return", {
                                                    currencyList: null === (n = r.data) || void 0 === n ? void 0 : n.currencyList
                                                });
                                            case 5:
                                                if (null != r && r.success || "100001010" !== String(null == r ? void 0 : r.code)) {
                                                    e.next = 7;
                                                    break
                                                }
                                                return e.abrupt("return", {
                                                    currencyList: [],
                                                    fiatMaintenance: !0
                                                });
                                            case 7:
                                                return e.abrupt("return", {
                                                    currencyList: []
                                                });
                                            case 8:
                                            case "end":
                                                return e.stop()
                                        }
                                    }), e)
                                }))))
                            }(s)()
                        }), [s]),
                        p = (0, i.useMemo)((function() {
                            var t, e, r, n, o, i;
                            return h.loading || null === (t = h.value) || void 0 === t || !t.currencyList || 0 === (null === (e = h.value) || void 0 === e || null === (r = e.currencyList) || void 0 === r ? void 0 : r.length) ? {
                                name: "",
                                icon: ""
                            } : (null === (n = h.value) || void 0 === n || null === (o = n.currencyList) || void 0 === o ? void 0 : o.find((function(t) {
                                return t.name === c
                            }))) || (null === (i = h.value) || void 0 === i ? void 0 : i.currencyList[0])
                        }), [h, c]);
                    return {
                        currencyList: null === (t = h.value) || void 0 === t ? void 0 : t.currencyList,
                        fiatMaintenance: null === (e = h.value) || void 0 === e ? void 0 : e.fiatMaintenance,
                        activeCurrency: p,
                        setActiveCurrency: function(t) {
                            o.cookies.writeCookieWithDomainLevelV2(Qe, null == t ? void 0 : t.name, 365, !0, "High"), u(t.name)
                        }
                    }
                };

                function Xe(t) {
                    return Xe = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, Xe(t)
                }

                function tr() {
                    tr = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == Xe(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function er(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(t);
                        e && (n = n.filter((function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable
                        }))), r.push.apply(r, n)
                    }
                    return r
                }

                function rr(t) {
                    for (var e = 1; e < arguments.length; e++) {
                        var r = null != arguments[e] ? arguments[e] : {};
                        e % 2 ? er(Object(r), !0).forEach((function(e) {
                            nr(t, e, r[e])
                        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : er(Object(r)).forEach((function(e) {
                            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e))
                        }))
                    }
                    return t
                }

                function nr(t, e, r) {
                    return (e = function(t) {
                        var e = function(t, e) {
                            if ("object" !== Xe(t) || null === t) return t;
                            var r = t[Symbol.toPrimitive];
                            if (void 0 !== r) {
                                var n = r.call(t, "string");
                                if ("object" !== Xe(n)) return n;
                                throw new TypeError("@@toPrimitive must return a primitive value.")
                            }
                            return String(t)
                        }(t);
                        return "symbol" === Xe(e) ? e : String(e)
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t
                }

                function or(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }

                function ir(t) {
                    return function() {
                        var e = this,
                            r = arguments;
                        return new Promise((function(n, o) {
                            var i = t.apply(e, r);

                            function a(t) {
                                or(i, n, o, a, c, "next", t)
                            }

                            function c(t) {
                                or(i, n, o, a, c, "throw", t)
                            }
                            a(void 0)
                        }))
                    }
                }
                var ar = "/bapi/fiat/v1/public/fiatpayment/menu",
                    cr = "/bapi/fiat/v1/private/fiatpayment/menu";
                const ur = function() {
                    var t, e = y(),
                        r = e.value,
                        n = (e.loading, Je()),
                        a = n.activeCurrency,
                        c = n.fiatMaintenance,
                        u = (0, i.useMemo)((function() {
                            return o.cachePromiseStore.checkCacheBeforeRequest(r ? "".concat(cr, "_").concat(null == a ? void 0 : a.name) : "".concat(ar, "_").concat(null == a ? void 0 : a.name), ir(tr().mark((function t() {
                                var e, n, o, i, u;
                                return tr().wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            if (e = {
                                                    currency: null == a ? void 0 : a.name
                                                }, !c) {
                                                t.next = 3;
                                                break
                                            }
                                            return t.abrupt("return", {
                                                menus: [],
                                                fiatMaintenance: !0
                                            });
                                        case 3:
                                            if (null != a && a.name) {
                                                t.next = 5;
                                                break
                                            }
                                            return t.abrupt("return", {
                                                menus: []
                                            });
                                        case 5:
                                            return r && (e.lang = window.navigator.language, e.userAssign = void 0 !== (null == a ? void 0 : a.name)), n = qe.stringifyUrl({
                                                url: r ? cr : ar,
                                                query: e
                                            }), t.next = 9, (0, b.get)(n);
                                        case 9:
                                            if ("000000" !== (o = t.sent).code) {
                                                t.next = 12;
                                                break
                                            }
                                            return t.abrupt("return", {
                                                menus: null === (i = o.data) || void 0 === i || null === (u = i.children) || void 0 === u ? void 0 : u.map((function(t) {
                                                    var e;
                                                    return rr(rr({}, t), {}, {
                                                        value: null == t || null === (e = t.pair) || void 0 === e ? void 0 : e.split("_")[0]
                                                    })
                                                }))
                                            });
                                        case 12:
                                            if (null != o && o.success || "100001010" !== String(null == o ? void 0 : o.code)) {
                                                t.next = 14;
                                                break
                                            }
                                            return t.abrupt("return", {
                                                menus: [],
                                                fiatMaintenance: !0
                                            });
                                        case 14:
                                            return t.abrupt("return", {
                                                menus: []
                                            });
                                        case 15:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t)
                            }))))
                        }), [r, null == a ? void 0 : a.name, c]);
                    return (null === (t = (0, o.useAsync)(u, [null == a ? void 0 : a.name, r])) || void 0 === t ? void 0 : t.value) || {
                        menus: [],
                        fiatMaintenance: !1
                    }
                };
                var lr, sr = r(6450);

                function fr(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
                    return n
                }
                if (o.isClient && !o.cachePromiseStore.getCache("allConfig")) try {
                    var hr = document.querySelector("script#__COMMON_WIDGET_CONFIG_DATA");
                    hr && (lr = JSON.parse(hr.innerHTML), o.cachePromiseStore.setState("allConfig", lr))
                } catch (t) {
                    console.error(t)
                }(0, o.initStoreEmptyKeyValue)("allConfig", {});
                const pr = function() {
                    var t, e, r = (t = (0, o.useCacheState)("allConfig"), e = 2, function(t) {
                        if (Array.isArray(t)) return t
                    }(t) || function(t, e) {
                        var r = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                        if (null != r) {
                            var n, o, i, a, c = [],
                                u = !0,
                                l = !1;
                            try {
                                if (i = (r = r.call(t)).next, 0 === e) {
                                    if (Object(r) !== r) return;
                                    u = !1
                                } else
                                    for (; !(u = (n = i.call(r)).done) && (c.push(n.value), c.length !== e); u = !0);
                            } catch (t) {
                                l = !0, o = t
                            } finally {
                                try {
                                    if (!u && null != r.return && (a = r.return(), Object(a) !== a)) return
                                } finally {
                                    if (l) throw o
                                }
                            }
                            return c
                        }
                    }(t, e) || function(t, e) {
                        if (t) {
                            if ("string" == typeof t) return fr(t, e);
                            var r = Object.prototype.toString.call(t).slice(8, -1);
                            return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? fr(t, e) : void 0
                        }
                    }(t, e) || function() {
                        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                    }());
                    return {
                        config: r[0],
                        setConfig: r[1]
                    }
                };

                function vr(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(t);
                        e && (n = n.filter((function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable
                        }))), r.push.apply(r, n)
                    }
                    return r
                }

                function yr(t) {
                    for (var e = 1; e < arguments.length; e++) {
                        var r = null != arguments[e] ? arguments[e] : {};
                        e % 2 ? vr(Object(r), !0).forEach((function(e) {
                            dr(t, e, r[e])
                        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : vr(Object(r)).forEach((function(e) {
                            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e))
                        }))
                    }
                    return t
                }

                function dr(t, e, r) {
                    return (e = function(t) {
                        var e = function(t, e) {
                            if ("object" !== mr(t) || null === t) return t;
                            var r = t[Symbol.toPrimitive];
                            if (void 0 !== r) {
                                var n = r.call(t, "string");
                                if ("object" !== mr(n)) return n;
                                throw new TypeError("@@toPrimitive must return a primitive value.")
                            }
                            return String(t)
                        }(t);
                        return "symbol" === mr(e) ? e : String(e)
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t
                }

                function mr(t) {
                    return mr = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, mr(t)
                }

                function gr(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
                    return n
                }
                var wr = {};
                if (o.isClient)
                    if (o.cachePromiseStore.getCache("commonEnv")) wr = o.cachePromiseStore.getCache("commonEnv");
                    else try {
                        var br = document.querySelector("script#__COMMON_WIDGET_ENV_DATA");
                        br && (wr = JSON.parse(br.innerHTML), o.cachePromiseStore.setState("commonEnv", wr))
                    } catch (t) {
                        console.error(t)
                    }(0, o.initStoreEmptyKeyValue)("commonEnv", wr);
                var xr = function() {
                        var t, e, r = (t = (0, o.useCacheState)("commonEnv"), e = 2, function(t) {
                                if (Array.isArray(t)) return t
                            }(t) || function(t, e) {
                                var r = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                                if (null != r) {
                                    var n, o, i, a, c = [],
                                        u = !0,
                                        l = !1;
                                    try {
                                        if (i = (r = r.call(t)).next, 0 === e) {
                                            if (Object(r) !== r) return;
                                            u = !1
                                        } else
                                            for (; !(u = (n = i.call(r)).done) && (c.push(n.value), c.length !== e); u = !0);
                                    } catch (t) {
                                        l = !0, o = t
                                    } finally {
                                        try {
                                            if (!u && null != r.return && (a = r.return(), Object(a) !== a)) return
                                        } finally {
                                            if (l) throw o
                                        }
                                    }
                                    return c
                                }
                            }(t, e) || function(t, e) {
                                if (t) {
                                    if ("string" == typeof t) return gr(t, e);
                                    var r = Object.prototype.toString.call(t).slice(8, -1);
                                    return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? gr(t, e) : void 0
                                }
                            }(t, e) || function() {
                                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                            }()),
                            n = r[0],
                            a = r[1];
                        return {
                            envs: n,
                            setEnvs: (0, i.useCallback)((function(t) {
                                "function" == typeof t ? a(t) : "object" === mr(t) && a((function(e) {
                                    return yr(yr({}, e), t)
                                }))
                            }), [a])
                        }
                    },
                    Lr = r(1854);

                function Er(t) {
                    return Er = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, Er(t)
                }

                function Sr() {
                    Sr = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == Er(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function Or(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }

                function jr(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
                    return n
                }
                v(Lr.EI)().then((function(t) {
                    if (t) {
                        o.cachePromiseStore.setState("prefreUserConfig", t);
                        var e = o.cachePromiseStore.getCache("currency");
                        null == t || t.forEach((function(t) {
                            "nativeCurrency" === t.configType && t.configName !== "".concat(e, "_USD") && o.cachePromiseStore.setState("currency", t.configName.split("_")[0])
                        }))
                    }
                })), (0, o.initStoreEmptyKeyValue)("prefreUserConfig", []);
                const Pr = function() {
                    var t, e, r = (t = (0, o.useCacheState)("prefreUserConfig"), e = 2, function(t) {
                            if (Array.isArray(t)) return t
                        }(t) || function(t, e) {
                            var r = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                            if (null != r) {
                                var n, o, i, a, c = [],
                                    u = !0,
                                    l = !1;
                                try {
                                    if (i = (r = r.call(t)).next, 0 === e) {
                                        if (Object(r) !== r) return;
                                        u = !1
                                    } else
                                        for (; !(u = (n = i.call(r)).done) && (c.push(n.value), c.length !== e); u = !0);
                                } catch (t) {
                                    l = !0, o = t
                                } finally {
                                    try {
                                        if (!u && null != r.return && (a = r.return(), Object(a) !== a)) return
                                    } finally {
                                        if (l) throw o
                                    }
                                }
                                return c
                            }
                        }(t, e) || function(t, e) {
                            if (t) {
                                if ("string" == typeof t) return jr(t, e);
                                var r = Object.prototype.toString.call(t).slice(8, -1);
                                return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? jr(t, e) : void 0
                            }
                        }(t, e) || function() {
                            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                        }()),
                        n = r[0],
                        a = r[1],
                        c = (0, i.useRef)(n);
                    c.current = n;
                    var u = (0, i.useCallback)(function() {
                        var t, e = (t = Sr().mark((function t(e) {
                            var r;
                            return Sr().wrap((function(t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        if (!((null == c || null === (r = c.current) || void 0 === r ? void 0 : r.length) > 0)) {
                                            t.next = 4;
                                            break
                                        }
                                        return t.next = 3, (0, Lr.A8)(e);
                                    case 3:
                                        a((function(t) {
                                            return t.map((function(t) {
                                                return t.configType === e.configType ? e : t
                                            }))
                                        }));
                                    case 4:
                                    case "end":
                                        return t.stop()
                                }
                            }), t)
                        })), function() {
                            var e = this,
                                r = arguments;
                            return new Promise((function(n, o) {
                                var i = t.apply(e, r);

                                function a(t) {
                                    Or(i, n, o, a, c, "next", t)
                                }

                                function c(t) {
                                    Or(i, n, o, a, c, "throw", t)
                                }
                                a(void 0)
                            }))
                        });
                        return function(t) {
                            return e.apply(this, arguments)
                        }
                    }(), [a, c]);
                    return {
                        prefreUserConfig: n,
                        setPrefreUserConfig: u
                    }
                };

                function _r(t) {
                    return _r = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, _r(t)
                }

                function kr() {
                    kr = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == _r(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function Nr(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }

                function Ar(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
                    return n
                }
                var Tr = "USD";
                if (o.isClient) {
                    var Gr, Ir = (null !== (Gr = o.cookies.read("userPreferredCurrency")) && void 0 !== Gr ? Gr : "USD_USD").split("_")[0];
                    Ir && Ir !== Tr && o.cachePromiseStore.setState("currency", Ir)
                }
                var Cr = (0, o.generateUseState)("currencyList", N, [], (function(t) {
                    if (!t) return null;
                    if (!Array.isArray(t)) return t;
                    var e = {};
                    return t.forEach((function(t) {
                        e[t.value] = t
                    })), {
                        currencyList: t,
                        currencyMap: e
                    }
                }));
                (0, o.initStoreEmptyKeyValue)("currency", Tr);
                const Fr = o.cachePromiseStore.listenerActiveFunction(["currencyList", "currency"], (function() {
                    var t, e, r = (t = (0, o.useCacheState)("currency", Tr), e = 2, function(t) {
                            if (Array.isArray(t)) return t
                        }(t) || function(t, e) {
                            var r = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                            if (null != r) {
                                var n, o, i, a, c = [],
                                    u = !0,
                                    l = !1;
                                try {
                                    if (i = (r = r.call(t)).next, 0 === e) {
                                        if (Object(r) !== r) return;
                                        u = !1
                                    } else
                                        for (; !(u = (n = i.call(r)).done) && (c.push(n.value), c.length !== e); u = !0);
                                } catch (t) {
                                    l = !0, o = t
                                } finally {
                                    try {
                                        if (!u && null != r.return && (a = r.return(), Object(a) !== a)) return
                                    } finally {
                                        if (l) throw o
                                    }
                                }
                                return c
                            }
                        }(t, e) || function(t, e) {
                            if (t) {
                                if ("string" == typeof t) return Ar(t, e);
                                var r = Object.prototype.toString.call(t).slice(8, -1);
                                return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? Ar(t, e) : void 0
                            }
                        }(t, e) || function() {
                            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                        }()),
                        n = r[0],
                        a = r[1],
                        c = Pr().setPrefreUserConfig,
                        u = (0, i.useRef)({}),
                        l = (0, i.useCallback)(function() {
                            var t, e = (t = kr().mark((function t(e) {
                                var r, n;
                                return kr().wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            if (!(n = null === (r = u.current[e]) || void 0 === r ? void 0 : r.pair)) {
                                                t.next = 4;
                                                break
                                            }
                                            return t.next = 4, c({
                                                configName: n,
                                                configType: "nativeCurrency"
                                            });
                                        case 4:
                                            a(e), o.cookies.writeCookieWithDomainLevelV2("userPreferredCurrency", n, 365, !0, "High");
                                        case 6:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t)
                            })), function() {
                                var e = this,
                                    r = arguments;
                                return new Promise((function(n, o) {
                                    var i = t.apply(e, r);

                                    function a(t) {
                                        Nr(i, n, o, a, c, "next", t)
                                    }

                                    function c(t) {
                                        Nr(i, n, o, a, c, "throw", t)
                                    }
                                    a(void 0)
                                }))
                            });
                            return function(t) {
                                return e.apply(this, arguments)
                            }
                        }(), [a]),
                        s = Cr().value,
                        f = (0, i.useMemo)((function() {
                            return s || {
                                currencyMap: {},
                                currencyList: []
                            }
                        }), [s]),
                        h = f.currencyMap,
                        p = f.currencyList;
                    return u.current = null != h ? h : {}, {
                        currency: n,
                        setCurrency: l,
                        currencyList: p,
                        currencyMap: h
                    }
                }));
                var Dr = r(2344),
                    Ur = r(2639);

                function Mr(t) {
                    return Mr = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, Mr(t)
                }

                function Rr() {
                    Rr = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == Mr(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function Br(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }

                function Yr(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
                    return n
                }
                var qr = "en";
                o.isClient && (o.cachePromiseStore.getCache("lang") || (qr = (0, Dr.G)(), o.cachePromiseStore.setState("lang", qr))), (0, o.initStoreEmptyKeyValue)("lang", qr);
                var Kr, Vr = (0, o.generateUseStateByParams)("useLanguageList", (function(t) {
                        return F(t)
                    })),
                    zr = function() {
                        return Vr(arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "")
                    },
                    Wr = o.cachePromiseStore.listenerActiveFunction("lang", (function() {
                        var t, e, r = (t = (0, o.useCacheState)("lang"), e = 2, function(t) {
                                if (Array.isArray(t)) return t
                            }(t) || function(t, e) {
                                var r = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                                if (null != r) {
                                    var n, o, i, a, c = [],
                                        u = !0,
                                        l = !1;
                                    try {
                                        if (i = (r = r.call(t)).next, 0 === e) {
                                            if (Object(r) !== r) return;
                                            u = !1
                                        } else
                                            for (; !(u = (n = i.call(r)).done) && (c.push(n.value), c.length !== e); u = !0);
                                    } catch (t) {
                                        l = !0, o = t
                                    } finally {
                                        try {
                                            if (!u && null != r.return && (a = r.return(), Object(a) !== a)) return
                                        } finally {
                                            if (l) throw o
                                        }
                                    }
                                    return c
                                }
                            }(t, e) || function(t, e) {
                                if (t) {
                                    if ("string" == typeof t) return Yr(t, e);
                                    var r = Object.prototype.toString.call(t).slice(8, -1);
                                    return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? Yr(t, e) : void 0
                                }
                            }(t, e) || function() {
                                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                            }()),
                            n = r[0],
                            a = r[1],
                            c = Pr().setPrefreUserConfig,
                            u = (0, i.useCallback)(function() {
                                var t, e = (t = Rr().mark((function t(e) {
                                    return Rr().wrap((function(t) {
                                        for (;;) switch (t.prev = t.next) {
                                            case 0:
                                                return t.next = 2, c({
                                                    configName: e,
                                                    configType: "preferLang"
                                                });
                                            case 2:
                                                (0, Ur.m)(e);
                                            case 3:
                                            case "end":
                                                return t.stop()
                                        }
                                    }), t)
                                })), function() {
                                    var e = this,
                                        r = arguments;
                                    return new Promise((function(n, o) {
                                        var i = t.apply(e, r);

                                        function a(t) {
                                            Br(i, n, o, a, c, "next", t)
                                        }

                                        function c(t) {
                                            Br(i, n, o, a, c, "throw", t)
                                        }
                                        a(void 0)
                                    }))
                                });
                                return function(t) {
                                    return e.apply(this, arguments)
                                }
                            }(), [a]);
                        return {
                            language: n,
                            setLanguage: u
                        }
                    }));

                function Hr(t) {
                    return Hr = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, Hr(t)
                }

                function $r(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(t);
                        e && (n = n.filter((function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable
                        }))), r.push.apply(r, n)
                    }
                    return r
                }

                function Zr(t) {
                    for (var e = 1; e < arguments.length; e++) {
                        var r = null != arguments[e] ? arguments[e] : {};
                        e % 2 ? $r(Object(r), !0).forEach((function(e) {
                            Qr(t, e, r[e])
                        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : $r(Object(r)).forEach((function(e) {
                            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e))
                        }))
                    }
                    return t
                }

                function Qr(t, e, r) {
                    return (e = function(t) {
                        var e = function(t, e) {
                            if ("object" !== Hr(t) || null === t) return t;
                            var r = t[Symbol.toPrimitive];
                            if (void 0 !== r) {
                                var n = r.call(t, "string");
                                if ("object" !== Hr(n)) return n;
                                throw new TypeError("@@toPrimitive must return a primitive value.")
                            }
                            return String(t)
                        }(t);
                        return "symbol" === Hr(e) ? e : String(e)
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t
                }

                function Jr(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
                    return n
                }
                if (o.isClient && !o.cachePromiseStore.getCache("navI18n")) try {
                    var Xr = document.querySelector("script#__COMMON_WIDGET_I18N_DATA");
                    Xr && (Kr = JSON.parse(Xr.innerHTML), o.cachePromiseStore.setState("navI18n", Kr), (0, o.initStoreEmptyKeyValue)("navI18n", Kr))
                } catch (t) {
                    console.error(t)
                }
                const tn = function() {
                    var t, e, r = (t = (0, o.useCacheState)("navI18n"), e = 2, function(t) {
                            if (Array.isArray(t)) return t
                        }(t) || function(t, e) {
                            var r = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                            if (null != r) {
                                var n, o, i, a, c = [],
                                    u = !0,
                                    l = !1;
                                try {
                                    if (i = (r = r.call(t)).next, 0 === e) {
                                        if (Object(r) !== r) return;
                                        u = !1
                                    } else
                                        for (; !(u = (n = i.call(r)).done) && (c.push(n.value), c.length !== e); u = !0);
                                } catch (t) {
                                    l = !0, o = t
                                } finally {
                                    try {
                                        if (!u && null != r.return && (a = r.return(), Object(a) !== a)) return
                                    } finally {
                                        if (l) throw o
                                    }
                                }
                                return c
                            }
                        }(t, e) || function(t, e) {
                            if (t) {
                                if ("string" == typeof t) return Jr(t, e);
                                var r = Object.prototype.toString.call(t).slice(8, -1);
                                return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? Jr(t, e) : void 0
                            }
                        }(t, e) || function() {
                            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                        }()),
                        n = r[0],
                        a = r[1],
                        c = (0, i.useCallback)((function(t) {
                            a((function(e) {
                                return Zr(Zr({}, e), t)
                            }))
                        }), []),
                        u = (0, i.useCallback)((function(t) {
                            return (null == n ? void 0 : n[t]) || t
                        }), [n]);
                    return {
                        i18n: n,
                        setI18n: c,
                        getI18nTxt: u
                    }
                };
                var en = r(4610);
                const rn = (0, o.generateUseState)("region", en.gc);
                var nn = r(8820),
                    on = r.n(nn);

                function an(t) {
                    return an = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, an(t)
                }

                function cn(t) {
                    return function(t) {
                        if (Array.isArray(t)) return sn(t)
                    }(t) || function(t) {
                        if ("undefined" != typeof Symbol && null != t[Symbol.iterator] || null != t["@@iterator"]) return Array.from(t)
                    }(t) || ln(t) || function() {
                        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                    }()
                }

                function un() {
                    un = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == an(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function ln(t, e) {
                    if (t) {
                        if ("string" == typeof t) return sn(t, e);
                        var r = Object.prototype.toString.call(t).slice(8, -1);
                        return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? sn(t, e) : void 0
                    }
                }

                function sn(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
                    return n
                }

                function fn(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }

                function hn(t) {
                    return function() {
                        var e = this,
                            r = arguments;
                        return new Promise((function(n, o) {
                            var i = t.apply(e, r);

                            function a(t) {
                                fn(i, n, o, a, c, "next", t)
                            }

                            function c(t) {
                                fn(i, n, o, a, c, "throw", t)
                            }
                            a(void 0)
                        }))
                    }
                }
                var pn = on().initExpAndFg || on().init,
                    vn = function(t) {
                        return o.cachePromiseStore.checkCacheBeforeRequest("themis-".concat(t, "-sdk"), hn(un().mark((function e() {
                            var r, n, i, a, c, u, l, s;
                            return un().wrap((function(e) {
                                for (;;) switch (e.prev = e.next) {
                                    case 0:
                                        return r = o.cachePromiseStore.getCache("lang"), n = o.cachePromiseStore.getCache("commonEnv"), i = n.THEMIS_ADDRESS, a = n.THEMIS_ENV, e.next = 4, Promise.all([o.cachePromiseStore.lisenerCacheDataAvaliable("region"), o.cachePromiseStore.lisenerCacheDataAvaliable("userBaseDetail")]);
                                    case 4:
                                        return c = e.sent, h = 2, u = function(t) {
                                            if (Array.isArray(t)) return t
                                        }(f = c) || function(t, e) {
                                            var r = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                                            if (null != r) {
                                                var n, o, i, a, c = [],
                                                    u = !0,
                                                    l = !1;
                                                try {
                                                    if (i = (r = r.call(t)).next, 0 === e) {
                                                        if (Object(r) !== r) return;
                                                        u = !1
                                                    } else
                                                        for (; !(u = (n = i.call(r)).done) && (c.push(n.value), c.length !== e); u = !0);
                                                } catch (t) {
                                                    l = !0, o = t
                                                } finally {
                                                    try {
                                                        if (!u && null != r.return && (a = r.return(), Object(a) !== a)) return
                                                    } finally {
                                                        if (l) throw o
                                                    }
                                                }
                                                return c
                                            }
                                        }(f, h) || ln(f, h) || function() {
                                            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                                        }(), l = u[0].country, s = u[1], e.prev = 8, e.abrupt("return", pn({
                                            platform: 3,
                                            device_id: "some-pc",
                                            os_version: "1.2",
                                            app_version: "1.0.0",
                                            trace_id: o.cookies.read("bnc-uuid"),
                                            uid: (null == s ? void 0 : s.userId) || "",
                                            region: l,
                                            language: r,
                                            env: (null == a ? void 0 : a.toUpperCase()) || "PROD"
                                        }, {
                                            baseUrl: i,
                                            authHeader: t
                                        }, (function(e) {
                                            console.log("config.universals ".concat(t), t, e, e.universals)
                                        })));
                                    case 12:
                                        e.prev = 12, e.t0 = e.catch(8), console.error(e.t0);
                                    case 15:
                                        return e.abrupt("return", {});
                                    case 16:
                                    case "end":
                                        return e.stop()
                                }
                                var f, h
                            }), e, null, [
                                [8, 12]
                            ])
                        }))))
                    },
                    yn = function(t) {
                        return o.cachePromiseStore.checkCacheBeforeRequest("themis-".concat(t), hn(un().mark((function e() {
                            var r, n;
                            return un().wrap((function(e) {
                                for (;;) switch (e.prev = e.next) {
                                    case 0:
                                        return e.next = 2, vn(t)();
                                    case 2:
                                        return n = e.sent, e.abrupt("return", (null == n || null === (r = n.getStrategiesConfig()) || void 0 === r ? void 0 : r.universals) || {});
                                    case 4:
                                    case "end":
                                        return e.stop()
                                }
                            }), e)
                        }))))
                    },
                    dn = function(t) {
                        return o.cachePromiseStore.checkCacheBeforeRequest("themisFeaturesGate-".concat(t), hn(un().mark((function e() {
                            var r;
                            return un().wrap((function(e) {
                                for (;;) switch (e.prev = e.next) {
                                    case 0:
                                        return e.next = 2, vn(t)();
                                    case 2:
                                        return r = e.sent, e.abrupt("return", (null == r ? void 0 : r.getFeatureGateResults()) || {});
                                    case 4:
                                    case "end":
                                        return e.stop()
                                }
                            }), e)
                        }))))
                    },
                    mn = function() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
                        return (0, o.useAsync)(hn(un().mark((function e() {
                            var r;
                            return un().wrap((function(e) {
                                for (;;) switch (e.prev = e.next) {
                                    case 0:
                                        if (Array.isArray(t) && 0 !== t.length) {
                                            e.next = 2;
                                            break
                                        }
                                        return e.abrupt("return", Promise.resolve({}));
                                    case 2:
                                        return e.next = 4, Promise.all(t.map((function(t) {
                                            return dn(t)()
                                        })));
                                    case 4:
                                        return r = e.sent, e.abrupt("return", r.reduce((function(e, r, n) {
                                            return e[t[n]] = r, e
                                        }), {}));
                                    case 6:
                                    case "end":
                                        return e.stop()
                                }
                            }), e)
                        }))), cn(t))
                    };
                const gn = function() {
                    var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
                    return (0, o.useAsync)(hn(un().mark((function e() {
                        var r;
                        return un().wrap((function(e) {
                            for (;;) switch (e.prev = e.next) {
                                case 0:
                                    if (Array.isArray(t) && 0 !== t.length) {
                                        e.next = 2;
                                        break
                                    }
                                    return e.abrupt("return", Promise.resolve({}));
                                case 2:
                                    return e.next = 4, Promise.all(t.map((function(t) {
                                        return yn(t)()
                                    })));
                                case 4:
                                    return r = e.sent, e.abrupt("return", r.reduce((function(e, r, n) {
                                        return e[t[n]] = r, e
                                    }), {}));
                                case 6:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), cn(t))
                };

                function wn(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
                    return n
                }
                var bn = function(t) {
                        return t.ALL = "all", t.LOGIN = "login", t.NOLOGIN = "nologin", t
                    }(bn || {}),
                    xn = function(t, e, r) {
                        return !(r.length && r.includes(t) || e.length && !e.includes(t))
                    },
                    Ln = function() {
                        var t = Fr().currency,
                            e = Wr().language,
                            r = y(),
                            n = r.value,
                            a = r.loading,
                            c = re(),
                            u = c.loading,
                            l = c.validateBusinessKey,
                            s = rn(),
                            f = s.value,
                            h = s.loading,
                            p = pr().config,
                            v = be().value,
                            d = (0, i.useMemo)((function() {
                                var t;
                                return null == p || null === (t = p.scenes) || void 0 === t ? void 0 : t.reduce((function(t, e) {
                                    return e.themisInfo.authHeader && t.push(e.themisInfo.authHeader), t
                                }), [])
                            }), [p]),
                            m = gn(d),
                            g = m.value,
                            w = m.loading,
                            b = mn(d),
                            x = b.value,
                            L = b.loading,
                            E = (0, i.useMemo)((function() {
                                var r;
                                if (a || u || h || w || L) return null;
                                var i = function(r) {
                                    var i, a, c, u;
                                    return !(! function() {
                                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : bn.ALL,
                                            e = arguments.length > 1 ? arguments[1] : void 0;
                                        return !(t === bn.LOGIN && !e || t === bn.NOLOGIN && e)
                                    }(r.visibleType, n) || !xn(e, (0, o.splitToArray)(r.includeLang), (0, o.splitToArray)(r.excludeLang)) || !xn((null == f ? void 0 : f.country) || "", (0, o.splitToArray)(r.includeRegion), (0, o.splitToArray)(r.excludeRegion)) || !xn(t, (0, o.splitToArray)(r.includeFiat), (0, o.splitToArray)(r.excludeFiat)) || !l((0, o.splitToArray)(r.businessKeys), r.businessKeysIsWhite) || v && r.validate && ! function(t, e) {
                                        return "!" === e[0] ? !t[e.slice(1)] : !!t[e]
                                    }(v, r.validate) || g && ! function(t, e) {
                                        if (!e || !t) return !0;
                                        var r, n, o = (r = e.split("="), n = 2, function(t) {
                                                if (Array.isArray(t)) return t
                                            }(r) || function(t, e) {
                                                var r = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                                                if (null != r) {
                                                    var n, o, i, a, c = [],
                                                        u = !0,
                                                        l = !1;
                                                    try {
                                                        if (i = (r = r.call(t)).next, 0 === e) {
                                                            if (Object(r) !== r) return;
                                                            u = !1
                                                        } else
                                                            for (; !(u = (n = i.call(r)).done) && (c.push(n.value), c.length !== e); u = !0);
                                                    } catch (t) {
                                                        l = !0, o = t
                                                    } finally {
                                                        try {
                                                            if (!u && null != r.return && (a = r.return(), Object(a) !== a)) return
                                                        } finally {
                                                            if (l) throw o
                                                        }
                                                    }
                                                    return c
                                                }
                                            }(r, n) || function(t, e) {
                                                if (t) {
                                                    if ("string" == typeof t) return wn(t, e);
                                                    var r = Object.prototype.toString.call(t).slice(8, -1);
                                                    return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? wn(t, e) : void 0
                                                }
                                            }(r, n) || function() {
                                                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                                            }()),
                                            i = o[0],
                                            a = o[1];
                                        return "!" === i[0] ? !t[i = i.slice(1)] : t[i] === a
                                    }(g[null == r || null === (i = r.themisInfo) || void 0 === i ? void 0 : i.authHeader], null == r || null === (a = r.themisInfo) || void 0 === a ? void 0 : a.expression) || x && ! function(t, e) {
                                        var r, n;
                                        return !(e && t && (null === (r = t[e]) || void 0 === r || !r.pass)) || (null === (n = t[e]) || void 0 === n ? void 0 : n.pass)
                                    }(x[null == r || null === (c = r.themisInfo) || void 0 === c ? void 0 : c.authHeader], null == r || null === (u = r.themisInfo) || void 0 === u ? void 0 : u.featureName))
                                };
                                return (null !== (r = null == p ? void 0 : p.scenes) && void 0 !== r ? r : []).reduce((function(t, e) {
                                    return t[e.sceneName] = i(e), t
                                }), {})
                            }), [a, u, h, w, L, null == p ? void 0 : p.scenes, n, e, f, t, l, v, g, x]);
                        return E
                    },
                    En = function() {
                        var t = (0, i.createContext)(null),
                            e = t.Provider,
                            r = function() {
                                return (0, i.useContext)(t)
                            },
                            n = function() {
                                var t = r(),
                                    e = re(),
                                    n = e.validateBusinessKey,
                                    o = e.loading;
                                return (0, i.useCallback)((function(e) {
                                    var r = function() {
                                        if (!t || !e.sceneNames) return e.sceneNames ? d : m;
                                        var r = e.sceneNames.split(",").filter((function(e) {
                                            return void 0 !== t[e]
                                        }));
                                        return r.length > 0 && r.findIndex((function(e) {
                                            return t[e]
                                        })) ? g : m
                                    }();
                                    return r !== m ? r : "string" != typeof e.businessKeys || o ? m : n(e.businessKeys.split(/,|\s/), e.businessKeysIsWhite)
                                }), [o, t, n])
                            };
                        return {
                            ValidateSencesProvider: function(t) {
                                var r = t.children,
                                    n = Ln();
                                return React.createElement(e, {
                                    value: n
                                }, r)
                            },
                            useValidateSencesByContext: r,
                            useCheckResult: function(t) {
                                var e = n();
                                return (0, i.useMemo)((function() {
                                    return e(t)
                                }), [e, t])
                            },
                            useCheckHandler: n
                        }
                    };
                const Sn = Ln;

                function On(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
                    return n
                }
                var jn = "";
                o.isClient && (0, o.runAfterDocumentReady)((function() {
                    (jn = o.cookies.read("BNC-Location") || "") && o.cachePromiseStore.setState("bncLocation", jn)
                })), (0, o.initStoreEmptyKeyValue)("bncLocation", "");
                const Pn = o.cachePromiseStore.listenerActiveFunction("bncLocation", (function() {
                    var t, e, r = (t = (0, o.useCacheState)("bncLocation"), e = 2, function(t) {
                            if (Array.isArray(t)) return t
                        }(t) || function(t, e) {
                            var r = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                            if (null != r) {
                                var n, o, i, a, c = [],
                                    u = !0,
                                    l = !1;
                                try {
                                    if (i = (r = r.call(t)).next, 0 === e) {
                                        if (Object(r) !== r) return;
                                        u = !1
                                    } else
                                        for (; !(u = (n = i.call(r)).done) && (c.push(n.value), c.length !== e); u = !0);
                                } catch (t) {
                                    l = !0, o = t
                                } finally {
                                    try {
                                        if (!u && null != r.return && (a = r.return(), Object(a) !== a)) return
                                    } finally {
                                        if (l) throw o
                                    }
                                }
                                return c
                            }
                        }(t, e) || function(t, e) {
                            if (t) {
                                if ("string" == typeof t) return On(t, e);
                                var r = Object.prototype.toString.call(t).slice(8, -1);
                                return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? On(t, e) : void 0
                            }
                        }(t, e) || function() {
                            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                        }()),
                        n = r[0],
                        a = r[1],
                        c = (0, i.useCallback)((function(t) {
                            a(t), o.cookies.writeCookieWithDomainLevelV2("BNC-Location", t, 365, !0, "High")
                        }), []);
                    return (0, i.useMemo)((function() {
                        return {
                            bncLocation: n,
                            setBncLocation: c
                        }
                    }), [n])
                }));

                function _n(t) {
                    return _n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, _n(t)
                }

                function kn(t, e) {
                    return function(t) {
                        if (Array.isArray(t)) return t
                    }(t) || function(t, e) {
                        var r = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                        if (null != r) {
                            var n, o, i, a, c = [],
                                u = !0,
                                l = !1;
                            try {
                                if (i = (r = r.call(t)).next, 0 === e) {
                                    if (Object(r) !== r) return;
                                    u = !1
                                } else
                                    for (; !(u = (n = i.call(r)).done) && (c.push(n.value), c.length !== e); u = !0);
                            } catch (t) {
                                l = !0, o = t
                            } finally {
                                try {
                                    if (!u && null != r.return && (a = r.return(), Object(a) !== a)) return
                                } finally {
                                    if (l) throw o
                                }
                            }
                            return c
                        }
                    }(t, e) || function(t, e) {
                        if (t) {
                            if ("string" == typeof t) return Nn(t, e);
                            var r = Object.prototype.toString.call(t).slice(8, -1);
                            return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? Nn(t, e) : void 0
                        }
                    }(t, e) || function() {
                        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                    }()
                }

                function Nn(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
                    return n
                }

                function An(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(t);
                        e && (n = n.filter((function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable
                        }))), r.push.apply(r, n)
                    }
                    return r
                }

                function Tn(t) {
                    for (var e = 1; e < arguments.length; e++) {
                        var r = null != arguments[e] ? arguments[e] : {};
                        e % 2 ? An(Object(r), !0).forEach((function(e) {
                            Gn(t, e, r[e])
                        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : An(Object(r)).forEach((function(e) {
                            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e))
                        }))
                    }
                    return t
                }

                function Gn(t, e, r) {
                    return (e = function(t) {
                        var e = function(t, e) {
                            if ("object" !== _n(t) || null === t) return t;
                            var r = t[Symbol.toPrimitive];
                            if (void 0 !== r) {
                                var n = r.call(t, "string");
                                if ("object" !== _n(n)) return n;
                                throw new TypeError("@@toPrimitive must return a primitive value.")
                            }
                            return String(t)
                        }(t);
                        return "symbol" === _n(e) ? e : String(e)
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t
                }
                var In, Cn, Fn, Dn = (0, o.generateUseState)("product", H, ["bncLocation"]),
                    Un = (new Date).getTime(),
                    Mn = {
                        "1h": {
                            key: "tradeSDKData1H",
                            handler: function(t) {
                                return (0, o.initTradeSDK)("tradeSDKData1H", t.getStreamTickersWithWindowSize("1h"))
                            }
                        },
                        "4h": {
                            key: "tradeSDKData4H",
                            handler: function(t) {
                                return (0, o.initTradeSDK)("tradeSDKData4H", t.getStreamTickersWithWindowSize("4h"))
                            }
                        },
                        "24h": {
                            key: "tradeSDKData",
                            handler: function(t) {
                                return (0, o.initTradeSDK)("tradeSDKData", t.getStreamTickers())
                            }
                        }
                    },
                    Rn = function(t, e) {
                        var r = kn((0, i.useState)({}), 2),
                            n = r[0],
                            a = r[1];
                        return (0, i.useEffect)((function() {
                            var r = Mn[t];
                            if (r) {
                                var n, i = r.handler(e);
                                return a((null === (n = o.cachePromiseStore.getCache(r.key)) || void 0 === n ? void 0 : n.tickers) || {}), o.cachePromiseStore.lisenerCacheData(r.key, (function(t) {
                                        a((null == t ? void 0 : t.tickers) || {})
                                    })),
                                    function() {
                                        i()
                                    }
                            }
                            console.error("windowSize not support")
                        }), [t]), n
                    },
                    Bn = o.isClient ? (In = "tradeSDKData", Cn = "productByTradeSdkData", Fn = function() {
                        var t = o.cachePromiseStore.getCache("product"),
                            e = o.cachePromiseStore.getCache(Cn),
                            r = o.cachePromiseStore.getCache(In) || {
                                update: Un,
                                tickers: {}
                            };
                        if (t && Object.keys(null == r ? void 0 : r.tickers).length && (null == e || !e.update || (null == e ? void 0 : e.update) < (null == r ? void 0 : r.update))) {
                            var n = e ? Tn({}, e.tickers) : (0, o.deepClone)(t);
                            Object.keys(r.tickers).forEach((function(t) {
                                n[t] && (n[t] = function(t, e) {
                                    return Tn(Tn({}, t || {}), e || {})
                                }(n[t], r.tickers[t]))
                            })), o.cachePromiseStore.setState(Cn, {
                                update: r.update,
                                tickers: n
                            })
                        }
                    }, (0, o.generateDataRegister)((function() {
                        o.cachePromiseStore.lisenerCacheData(In, Fn), o.cachePromiseStore.lisenerCacheData("product", Fn)
                    }), (function() {
                        o.cachePromiseStore.removeLisenerCacheData(In, Fn), o.cachePromiseStore.removeLisenerCacheData("product", Fn)
                    }))) : null,
                    Yn = function() {
                        var t = Dn().value,
                            e = kn((0, o.useCacheState)("productByTradeSdkData"), 1)[0];
                        return (0, i.useEffect)((function() {
                            return Bn()
                        }), []), e ? e.tickers : t
                    };
                const qn = o.cachePromiseStore.listenerActiveFunction(["product", "bncLocation"], Dn);
                var Kn = function(t, e) {
                        return (0, o.formatNumber)(t, void 0 !== e ? e : t >= 1 ? 2 : 8)
                    },
                    Vn = o.cachePromiseStore.listenerActiveFunction("BTCToUSDT", (0, o.generateUseState)("BTCToUSDT", (function(t) {
                        return "JP" !== t ? Promise.resolve(0) : (0, b.get)("/bapi/asset/v1/public/asset-service/product/price-convert?from=BTC&to=USDT&amount=1").then((function(t) {
                            var e;
                            return null == t || null === (e = t.data) || void 0 === e ? void 0 : e.price
                        }))
                    }), ["bncLocation"])),
                    zn = o.cachePromiseStore.listenerActiveFunction("USDCToUSDT", (0, o.generateUseState)("USDCToUSDT", (function(t) {
                        return w.includes(t) ? (0, b.get)("/bapi/asset/v1/public/asset-service/product/price-convert?from=USDC&to=USDT&amount=1").then((function(t) {
                            var e;
                            return null == t || null === (e = t.data) || void 0 === e ? void 0 : e.price
                        })) : Promise.resolve(0)
                    }), ["bncLocation"])),
                    Wn = o.cachePromiseStore.listenerActiveFunction("BNBToUSDT", (0, o.generateUseState)("BNBToUSDT", (function(t) {
                        return w.includes(t) ? (0, b.get)("/bapi/asset/v1/public/asset-service/product/price-convert?from=BNB&to=USDT&amount=1").then((function(t) {
                            var e;
                            return null == t || null === (e = t.data) || void 0 === e ? void 0 : e.price
                        })) : Promise.resolve(0)
                    }), ["bncLocation"])),
                    Hn = o.cachePromiseStore.listenerActiveFunction(["product", "bncLocation"], (function() {
                        var t = Yn();
                        return (0, i.useCallback)((function(e, r, n) {
                            return t && n ? t["".concat(e).concat(r)] ? t["".concat(e).concat(r)].close * (n || 0) : t["".concat(r).concat(e)] ? 1 / t["".concat(r).concat(e)].close * (n || 0) : 0 : 0
                        }), [t])
                    }));
                const $n = o.cachePromiseStore.listenerActiveFunction(["BTCToUSDT", "product", "bncLocation", "currency"], (function() {
                    var t = Vn().value,
                        e = zn().value,
                        r = Wn().value,
                        n = Pn().bncLocation,
                        o = Fr(),
                        a = o.currency,
                        c = o.currencyMap,
                        u = Hn();
                    return (0, i.useCallback)((function(o) {
                        var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "USDT",
                            l = arguments.length > 2 ? arguments[2] : void 0,
                            s = "number" == typeof l ? l : null == l ? void 0 : l.precision,
                            f = "number" != typeof l && null != l && l.targetCurrency ? l.targetCurrency : a;
                        if (c[f]) {
                            var h;
                            if (c[i]) {
                                var p, v = 1 / c[i].rate * c[f].rate;
                                return {
                                    symbol: c[f].symbol,
                                    unit: c[i].unit,
                                    fiatPrice: Kn(o * v, s),
                                    userFiat: null === (p = c[i]) || void 0 === p ? void 0 : p.pair,
                                    fiatPriceNumber: o * v,
                                    code: c[f].name
                                }
                            }
                            var y = o * ("USDT" === i || "BUSD" === i ? 1 : "JP" === n ? "BTC" === i ? t || 0 : u(i, "BTC", t || 0) : w.includes(n) ? "USDC" === i ? e || 0 : "BNB" === i ? r || 0 : u(i, "USDC", e || 0) || u(i, "BNB", r || 0) || 0 : u(i, "USDT", 1)) * c[f].rate;
                            return {
                                symbol: c[f].symbol,
                                unit: c[f].unit,
                                code: c[f].name,
                                fiatPrice: Kn(y, s),
                                userFiat: null === (h = c[f]) || void 0 === h ? void 0 : h.pair,
                                fiatPriceNumber: y
                            }
                        }
                        return {
                            symbol: "",
                            unit: "",
                            code: "",
                            fiatPrice: 0,
                            userFiat: "",
                            fiatPriceNumber: 0
                        }
                    }), [a, c, u, t, n, e, r])
                }));

                function Zn(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
                    return n
                }
                var Qn = "";
                o.isClient && (0, o.runAfterDocumentReady)((function() {
                    var t;
                    Qn = (null !== (t = o.cookies.read("changeBasisTimeZone")) && void 0 !== t ? t : "").split("_")[0]
                })), (0, o.initStoreEmptyKeyValue)("changeBasisTimeZone", Qn);
                const Jn = function() {
                    var t, e, r = (t = (0, o.useCacheState)("changeBasisTimeZone"), e = 2, function(t) {
                            if (Array.isArray(t)) return t
                        }(t) || function(t, e) {
                            var r = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                            if (null != r) {
                                var n, o, i, a, c = [],
                                    u = !0,
                                    l = !1;
                                try {
                                    if (i = (r = r.call(t)).next, 0 === e) {
                                        if (Object(r) !== r) return;
                                        u = !1
                                    } else
                                        for (; !(u = (n = i.call(r)).done) && (c.push(n.value), c.length !== e); u = !0);
                                } catch (t) {
                                    l = !0, o = t
                                } finally {
                                    try {
                                        if (!u && null != r.return && (a = r.return(), Object(a) !== a)) return
                                    } finally {
                                        if (l) throw o
                                    }
                                }
                                return c
                            }
                        }(t, e) || function(t, e) {
                            if (t) {
                                if ("string" == typeof t) return Zn(t, e);
                                var r = Object.prototype.toString.call(t).slice(8, -1);
                                return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? Zn(t, e) : void 0
                            }
                        }(t, e) || function() {
                            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                        }()),
                        n = r[0],
                        a = r[1];
                    return {
                        basisTimeZone: n,
                        setBasisTimeZone: (0, i.useCallback)((function(t) {
                            a(t), (0, o.writeCookieHighPriority)("changeBasisTimeZone", t)
                        }), [a])
                    }
                };

                function Xn(t) {
                    return Xn = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, Xn(t)
                }

                function to(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(t);
                        e && (n = n.filter((function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable
                        }))), r.push.apply(r, n)
                    }
                    return r
                }

                function eo(t) {
                    for (var e = 1; e < arguments.length; e++) {
                        var r = null != arguments[e] ? arguments[e] : {};
                        e % 2 ? to(Object(r), !0).forEach((function(e) {
                            ro(t, e, r[e])
                        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : to(Object(r)).forEach((function(e) {
                            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e))
                        }))
                    }
                    return t
                }

                function ro(t, e, r) {
                    return (e = function(t) {
                        var e = function(t, e) {
                            if ("object" !== Xn(t) || null === t) return t;
                            var r = t[Symbol.toPrimitive];
                            if (void 0 !== r) {
                                var n = r.call(t, "string");
                                if ("object" !== Xn(n)) return n;
                                throw new TypeError("@@toPrimitive must return a primitive value.")
                            }
                            return String(t)
                        }(t);
                        return "symbol" === Xn(e) ? e : String(e)
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t
                }
                var no = (0, o.generateUseState)("futureProduct", (function(t, e, r, n) {
                        if (r || n) return null;
                        var o = eo(eo({}, t), e),
                            i = Object.keys(o).reduce((function(t, e) {
                                var r, n = e && (null == o || null === (r = o[e]) || void 0 === r ? void 0 : r.openToday);
                                return n ? eo(eo({}, t), {}, ro({}, e, n)) : t
                            }), {});
                        return mt(i)
                    }), ["futures_um", "futures_cm", "futures_um-loading", "futures_cm-loading"]),
                    oo = function(t) {
                        return (0, o.formatNumber)(t, t > 1 ? 2 : 6)
                    },
                    io = function() {
                        var t = no().value,
                            e = Fr(),
                            r = e.currency,
                            n = e.currencyMap;
                        return (0, i.useCallback)((function(e, i) {
                            if (n[i]) {
                                var a = n[r] || {},
                                    c = a.rate,
                                    u = a.symbol,
                                    l = 1 / n[i].rate;
                                return {
                                    symbol: u,
                                    fiatPrice: oo((c || 0) * (e || 0) * l),
                                    usdPrice: oo((e || 0) * l)
                                }
                            }
                            if (r && n[r]) {
                                var s = n[r] || {},
                                    f = s.rate,
                                    h = s.symbol,
                                    p = /USDT|BUSD/i.test(i) ? 1 : (t || {})[(0, o.toUpper)(i)] || 0;
                                return {
                                    symbol: h,
                                    fiatPrice: oo((f || 0) * (e || 0) * p),
                                    usdPrice: oo((e || 0) * p)
                                }
                            }
                            return {
                                fiatPrice: "0",
                                usdPrice: "0",
                                symbol: ""
                            }
                        }), [r, n, t])
                    };
                const ao = function() {
                    var t = no();
                    return eo(eo({}, t), {}, {
                        productMap: t.value
                    })
                };
                var co = (0, o.generateUseState)("assets", B, [], (function(t) {
                    if (!t) return null;
                    if (!Array.isArray(t)) return {
                        assetList: Object.values(t),
                        assetMap: t
                    };
                    var e = t.reduce((function(t, e) {
                        return t[e.assetCode] = e, t
                    }), {});
                    return {
                        assetList: t,
                        assetMap: e
                    }
                }));
                const uo = o.cachePromiseStore.listenerActiveFunction("assets", (function() {
                    var t = co(),
                        e = t.value,
                        r = t.loading,
                        n = (0, i.useMemo)((function() {
                            return e || {
                                assetList: [],
                                assetMap: {}
                            }
                        }), [e]),
                        o = n.assetList,
                        a = n.assetMap;
                    return {
                        getAssetInfo: (0, i.useCallback)((function(t) {
                            return r ? null : null == a ? void 0 : a[t]
                        }), [r, a]),
                        value: o,
                        assetMap: a
                    }
                }));
                var lo = r(7428),
                    so = r(9023);

                function fo(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
                    return n
                }
                var ho = "light";
                o.isClient && (ho = (0, lo.g)(), console.log("themeFromCookie===>", o.cachePromiseStore.getCache("commonEnv").theme, ho), o.cachePromiseStore.setState("theme", o.cachePromiseStore.getCache("commonEnv").theme || ho));
                var po = function() {
                    o.isClient && localStorage.setItem("themeChangedTime", "".concat((new Date).getTime()))
                };
                const vo = o.cachePromiseStore.listenerActiveFunction("theme", (function() {
                        var t, e, r = (t = (0, o.useCacheState)("theme", ho), e = 2, function(t) {
                                if (Array.isArray(t)) return t
                            }(t) || function(t, e) {
                                var r = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                                if (null != r) {
                                    var n, o, i, a, c = [],
                                        u = !0,
                                        l = !1;
                                    try {
                                        if (i = (r = r.call(t)).next, 0 === e) {
                                            if (Object(r) !== r) return;
                                            u = !1
                                        } else
                                            for (; !(u = (n = i.call(r)).done) && (c.push(n.value), c.length !== e); u = !0);
                                    } catch (t) {
                                        l = !0, o = t
                                    } finally {
                                        try {
                                            if (!u && null != r.return && (a = r.return(), Object(a) !== a)) return
                                        } finally {
                                            if (l) throw o
                                        }
                                    }
                                    return c
                                }
                            }(t, e) || function(t, e) {
                                if (t) {
                                    if ("string" == typeof t) return fo(t, e);
                                    var r = Object.prototype.toString.call(t).slice(8, -1);
                                    return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? fo(t, e) : void 0
                                }
                            }(t, e) || function() {
                                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                            }()),
                            n = r[0],
                            a = r[1],
                            c = (0, i.useCallback)((function() {
                                a((function(t) {
                                    var e = "light" === t ? "dark" : "light";
                                    return void 0 === (0, so.D)(e) ? t : (po(), e)
                                }))
                            }), []),
                            u = (0, i.useCallback)((function(t) {
                                var e = (0, so.D)(t);
                                e && (a(e), po())
                            }), [a]);
                        return {
                            isLight: "dark" !== n,
                            theme: n,
                            setTheme: u,
                            toggleTheme: c
                        }
                    })),
                    yo = o.cachePromiseStore.listenerActiveFunction("bizChannel", (function() {
                        return (0, o.useCacheState)("bizChannel")
                    }));
                var mo = r(7228);

                function go(t) {
                    return go = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, go(t)
                }

                function wo() {
                    wo = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == go(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function bo(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(t);
                        e && (n = n.filter((function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable
                        }))), r.push.apply(r, n)
                    }
                    return r
                }

                function xo(t) {
                    for (var e = 1; e < arguments.length; e++) {
                        var r = null != arguments[e] ? arguments[e] : {};
                        e % 2 ? bo(Object(r), !0).forEach((function(e) {
                            Lo(t, e, r[e])
                        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : bo(Object(r)).forEach((function(e) {
                            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e))
                        }))
                    }
                    return t
                }

                function Lo(t, e, r) {
                    return (e = function(t) {
                        var e = function(t, e) {
                            if ("object" !== go(t) || null === t) return t;
                            var r = t[Symbol.toPrimitive];
                            if (void 0 !== r) {
                                var n = r.call(t, "string");
                                if ("object" !== go(n)) return n;
                                throw new TypeError("@@toPrimitive must return a primitive value.")
                            }
                            return String(t)
                        }(t);
                        return "symbol" === go(e) ? e : String(e)
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t
                }

                function Eo(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }
                var So = function() {
                    var t, e = (t = wo().mark((function t(e, r, n, o) {
                        var i, a, c;
                        return wo().wrap((function(t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    if (!n && !o) {
                                        t.next = 2;
                                        break
                                    }
                                    return t.abrupt("return", null);
                                case 2:
                                    return t.next = 4, (0, mo.CZ)();
                                case 4:
                                    return i = t.sent, a = (null == i ? void 0 : i.data) || {}, c = "https://accounts.".concat(e, "/").concat(r, "/").concat(a.registerLink), t.abrupt("return", xo(xo({}, a), {}, {
                                        registerLink: c
                                    }));
                                case 8:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    })), function() {
                        var e = this,
                            r = arguments;
                        return new Promise((function(n, o) {
                            var i = t.apply(e, r);

                            function a(t) {
                                Eo(i, n, o, a, c, "next", t)
                            }

                            function c(t) {
                                Eo(i, n, o, a, c, "throw", t)
                            }
                            a(void 0)
                        }))
                    });
                    return function(t, r, n, o) {
                        return e.apply(this, arguments)
                    }
                }();
                const Oo = (0, o.generateUseState)("topBarAndCTA", So, ["commonEnv", "language", "loginIn", "loginIn-loading"]);
                var jo = r(5570);

                function Po(t) {
                    return Po = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, Po(t)
                }

                function _o() {
                    _o = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == Po(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function ko(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }
                var No = {};
                const Ao = function(t) {
                    var e = function(t) {
                            if (!No[t]) {
                                var e = function() {
                                    var e, r = (e = _o().mark((function e(r, n) {
                                        var o, i;
                                        return _o().wrap((function(e) {
                                            for (;;) switch (e.prev = e.next) {
                                                case 0:
                                                    if ((o = (r || {}).STATIC_HOST) && n) {
                                                        e.next = 3;
                                                        break
                                                    }
                                                    return e.abrupt("return", null);
                                                case 3:
                                                    return e.next = 5, (0, jo.Ux)({
                                                        basePath: "".concat(o, "/api/i18n/-/web/cms"),
                                                        namespace: t,
                                                        locale: n
                                                    });
                                                case 5:
                                                    if (!((i = e.sent) && Object.keys(i).length > 0)) {
                                                        e.next = 8;
                                                        break
                                                    }
                                                    return e.abrupt("return", i);
                                                case 8:
                                                    return e.abrupt("return", null);
                                                case 9:
                                                case "end":
                                                    return e.stop()
                                            }
                                        }), e)
                                    })), function() {
                                        var t = this,
                                            r = arguments;
                                        return new Promise((function(n, o) {
                                            var i = e.apply(t, r);

                                            function a(t) {
                                                ko(i, n, o, a, c, "next", t)
                                            }

                                            function c(t) {
                                                ko(i, n, o, a, c, "throw", t)
                                            }
                                            a(void 0)
                                        }))
                                    });
                                    return function(t, e) {
                                        return r.apply(this, arguments)
                                    }
                                }();
                                No[t] = (0, o.generateUseState)("".concat(t, "-i18n"), e, ["commonEnv", "lang"])
                            }
                            return No[t]
                        }(t)(),
                        r = e.value,
                        n = e.loading,
                        a = (0, i.useCallback)((function(t, e) {
                            var n = r && r[t] || t;
                            return e && Object.keys(e).forEach((function(t) {
                                var r = new RegExp("{{".concat(t, "}}"), "g");
                                n = n.replace(r, e[t])
                            })), n
                        }), [r]);
                    return {
                        i18n: r,
                        getI18nText: a,
                        loading: n
                    }
                };

                function To(t) {
                    return To = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, To(t)
                }

                function Go() {
                    Go = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == To(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function Io(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }
                var Co = (0, b.fetchOrigin)().fetch,
                    Fo = function() {
                        var t, e = (t = Go().mark((function t() {
                            var e, r, n, i, a, c, u, l, s, f, h, p, v, y, d = arguments;
                            return Go().wrap((function(t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        return r = (e = d.length > 0 && void 0 !== d[0] ? d[0] : {}).url, n = e.onWidgetConfig, i = e.onI18n, a = e.onCommonEnv, c = e.team, u = void 0 === c ? "com" : c, l = o.cachePromiseStore.getCache("lang"), s = o.cachePromiseStore.getCache("theme"), f = (0, o.getLevelDomain)(2), h = /localhost/.test(f) ? r : "https://www.".concat(f), t.next = 7, Co("".concat(h, "/").concat(l, "/common-widget/configs/").concat(u, "/").concat(s, "/").concat(window.btoa(window.location.hostname)), {
                                            method: "GET",
                                            mode: "cors"
                                        });
                                    case 7:
                                        return p = t.sent, t.next = 10, p.json();
                                    case 10:
                                        v = t.sent, y = v.data, o.cachePromiseStore.setState("allConfig", n ? n(y.widgetConfig) : y.widgetConfig), o.cachePromiseStore.setState("navI18n", i ? i(y.i18nData) : y.i18nData), o.cachePromiseStore.setState("commonEnv", a ? a(y.commonEnvs) : y.commonEnvs);
                                    case 15:
                                    case "end":
                                        return t.stop()
                                }
                            }), t)
                        })), function() {
                            var e = this,
                                r = arguments;
                            return new Promise((function(n, o) {
                                var i = t.apply(e, r);

                                function a(t) {
                                    Io(i, n, o, a, c, "next", t)
                                }

                                function c(t) {
                                    Io(i, n, o, a, c, "throw", t)
                                }
                                a(void 0)
                            }))
                        });
                        return function() {
                            return e.apply(this, arguments)
                        }
                    }();
                const Do = Fo;

                function Uo(t) {
                    return Uo = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, Uo(t)
                }

                function Mo(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(t);
                        e && (n = n.filter((function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable
                        }))), r.push.apply(r, n)
                    }
                    return r
                }

                function Ro(t) {
                    for (var e = 1; e < arguments.length; e++) {
                        var r = null != arguments[e] ? arguments[e] : {};
                        e % 2 ? Mo(Object(r), !0).forEach((function(e) {
                            Bo(t, e, r[e])
                        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : Mo(Object(r)).forEach((function(e) {
                            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e))
                        }))
                    }
                    return t
                }

                function Bo(t, e, r) {
                    return (e = function(t) {
                        var e = function(t, e) {
                            if ("object" !== Uo(t) || null === t) return t;
                            var r = t[Symbol.toPrimitive];
                            if (void 0 !== r) {
                                var n = r.call(t, "string");
                                if ("object" !== Uo(n)) return n;
                                throw new TypeError("@@toPrimitive must return a primitive value.")
                            }
                            return String(t)
                        }(t);
                        return "symbol" === Uo(e) ? e : String(e)
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t
                }

                function Yo(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
                    return n
                }(0, o.initStoreEmptyKeyValue)("pageInfo", {
                    pageName: ""
                });
                const qo = function(t) {
                    var e, r, n = (e = (0, o.useCacheState)("pageInfo", t || {
                            pageName: ""
                        }), r = 2, function(t) {
                            if (Array.isArray(t)) return t
                        }(e) || function(t, e) {
                            var r = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                            if (null != r) {
                                var n, o, i, a, c = [],
                                    u = !0,
                                    l = !1;
                                try {
                                    if (i = (r = r.call(t)).next, 0 === e) {
                                        if (Object(r) !== r) return;
                                        u = !1
                                    } else
                                        for (; !(u = (n = i.call(r)).done) && (c.push(n.value), c.length !== e); u = !0);
                                } catch (t) {
                                    l = !0, o = t
                                } finally {
                                    try {
                                        if (!u && null != r.return && (a = r.return(), Object(a) !== a)) return
                                    } finally {
                                        if (l) throw o
                                    }
                                }
                                return c
                            }
                        }(e, r) || function(t, e) {
                            if (t) {
                                if ("string" == typeof t) return Yo(t, e);
                                var r = Object.prototype.toString.call(t).slice(8, -1);
                                return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? Yo(t, e) : void 0
                            }
                        }(e, r) || function() {
                            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                        }()),
                        a = n[0],
                        c = n[1],
                        u = (0, i.useCallback)((function(t) {
                            c(Ro(Ro({}, a), t))
                        }), [c]);
                    return {
                        pageInfo: a,
                        updatePageInfo: u
                    }
                };

                function Ko(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
                    return n
                }
                const Vo = function() {
                    var t, e, r = (t = (0, i.useState)("default"), e = 2, function(t) {
                            if (Array.isArray(t)) return t
                        }(t) || function(t, e) {
                            var r = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                            if (null != r) {
                                var n, o, i, a, c = [],
                                    u = !0,
                                    l = !1;
                                try {
                                    if (i = (r = r.call(t)).next, 0 === e) {
                                        if (Object(r) !== r) return;
                                        u = !1
                                    } else
                                        for (; !(u = (n = i.call(r)).done) && (c.push(n.value), c.length !== e); u = !0);
                                } catch (t) {
                                    l = !0, o = t
                                } finally {
                                    try {
                                        if (!u && null != r.return && (a = r.return(), Object(a) !== a)) return
                                    } finally {
                                        if (l) throw o
                                    }
                                }
                                return c
                            }
                        }(t, e) || function(t, e) {
                            if (t) {
                                if ("string" == typeof t) return Ko(t, e);
                                var r = Object.prototype.toString.call(t).slice(8, -1);
                                return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? Ko(t, e) : void 0
                            }
                        }(t, e) || function() {
                            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                        }()),
                        n = r[0],
                        a = r[1],
                        c = y(),
                        u = c.value,
                        l = c.loading,
                        s = rn().value,
                        f = s || {},
                        h = f.subDivision,
                        p = f.country;
                    return (0, i.useEffect)((function() {
                        var t = function(t, e, r, n) {
                            return function(t, e, r) {
                                return !e && (r ? "AE" === o.cookies.read("BNC-Location") : "dubai" === (null == t ? void 0 : t.toLowerCase()))
                            }(t, e, r) ? "AE" : function(t, e) {
                                return !t && !!e && "KZ" === o.cookies.read("BNC-Location")
                            }(e, r) ? "KZ" : function(t) {
                                return "de" === (null == t ? void 0 : t.toLowerCase())
                            }(n) ? "DE" : function(t, e, r) {
                                return !t && !e && "hk" === (null == r ? void 0 : r.toLowerCase())
                            }(e, r, n) ? "HK_NON_LOGIN" : function(t, e, r) {
                                return !t && !!e && "hk" === (null == r ? void 0 : r.toLowerCase())
                            }(e, r, n) ? "HK_LOGIN" : "default"
                        }(h || "", l, !!u, p || "");
                        a(t)
                    }), [u, l, s]), {
                        userComplianceEntity: n
                    }
                };

                function zo(t) {
                    return zo = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, zo(t)
                }

                function Wo() {
                    Wo = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == zo(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function Ho(t, e) {
                    return function(t) {
                        if (Array.isArray(t)) return t
                    }(t) || function(t, e) {
                        var r = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                        if (null != r) {
                            var n, o, i, a, c = [],
                                u = !0,
                                l = !1;
                            try {
                                if (i = (r = r.call(t)).next, 0 === e) {
                                    if (Object(r) !== r) return;
                                    u = !1
                                } else
                                    for (; !(u = (n = i.call(r)).done) && (c.push(n.value), c.length !== e); u = !0);
                            } catch (t) {
                                l = !0, o = t
                            } finally {
                                try {
                                    if (!u && null != r.return && (a = r.return(), Object(a) !== a)) return
                                } finally {
                                    if (l) throw o
                                }
                            }
                            return c
                        }
                    }(t, e) || function(t, e) {
                        if (t) {
                            if ("string" == typeof t) return $o(t, e);
                            var r = Object.prototype.toString.call(t).slice(8, -1);
                            return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? $o(t, e) : void 0
                        }
                    }(t, e) || function() {
                        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                    }()
                }

                function $o(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
                    return n
                }

                function Zo(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }
                var Qo = function() {
                    var t, e = (t = Wo().mark((function t() {
                        var e, r, n, i, a, c, u, l, s, f, h, p, v = arguments;
                        return Wo().wrap((function(t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    for (r = v.length, n = new Array(r), i = 0; i < r; i++) n[i] = v[i];
                                    return a = n.reduce((function(t, e) {
                                        var r = o.cachePromiseStore.getCache("apollo-value-".concat(e)),
                                            n = o.cachePromiseStore.getCache("apollo-value-".concat(e, "-loading"));
                                        return void 0 !== r ? t.fullFilled.push([e, r]) : !0 === n ? t.loading.push([e, o.cachePromiseStore.lisenerCacheDataAvaliable("apollo-value-".concat(e))]) : t.waiting.push(e), t
                                    }), {
                                        loading: [],
                                        fullFilled: [],
                                        waiting: []
                                    }), c = {}, a.fullFilled.forEach((function(t) {
                                        var e = Ho(t, 2),
                                            r = e[0],
                                            n = e[1];
                                        c[r] = n
                                    })), u = a.loading.length ? Promise.all(a.loading.map((function(t) {
                                        var e = Ho(t, 2);
                                        return e[0], e[1]
                                    }))) : [], l = a.waiting.length ? (0, b.post)("/bapi/apex/v1/public/apex/marketing/web/commonConfig", {
                                        keys: a.waiting
                                    }) : null, a.waiting.forEach((function(t) {
                                        o.cachePromiseStore.setState("apollo-value-".concat(t, "-loading"), !0)
                                    })), t.next = 9, Promise.all([u, l]);
                                case 9:
                                    return s = t.sent, f = Ho(s, 2), h = f[0], p = f[1], a.waiting.forEach((function(t) {
                                        o.cachePromiseStore.setState("apollo-value-".concat(t, "-loading"), !1)
                                    })), null != p && null !== (e = p.data) && void 0 !== e && e.res && Object.keys(p.data.res).forEach((function(t) {
                                        o.cachePromiseStore.setState("apollo-value-".concat(t), p.data.res[t]), c[t] = p.data.res[t]
                                    })), a.loading.forEach((function(t, e) {
                                        var r = Ho(t, 1)[0];
                                        c[r] = h[e]
                                    })), t.abrupt("return", c);
                                case 17:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    })), function() {
                        var e = this,
                            r = arguments;
                        return new Promise((function(n, o) {
                            var i = t.apply(e, r);

                            function a(t) {
                                Zo(i, n, o, a, c, "next", t)
                            }

                            function c(t) {
                                Zo(i, n, o, a, c, "throw", t)
                            }
                            a(void 0)
                        }))
                    });
                    return function() {
                        return e.apply(this, arguments)
                    }
                }();
                const Jo = (0, o.generateUseStateByParams)("useApolloData", Qo);

                function Xo(t) {
                    return Xo = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, Xo(t)
                }

                function ti(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(t);
                        e && (n = n.filter((function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable
                        }))), r.push.apply(r, n)
                    }
                    return r
                }

                function ei(t) {
                    for (var e = 1; e < arguments.length; e++) {
                        var r = null != arguments[e] ? arguments[e] : {};
                        e % 2 ? ti(Object(r), !0).forEach((function(e) {
                            ri(t, e, r[e])
                        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : ti(Object(r)).forEach((function(e) {
                            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e))
                        }))
                    }
                    return t
                }

                function ri(t, e, r) {
                    return (e = function(t) {
                        var e = function(t, e) {
                            if ("object" !== Xo(t) || null === t) return t;
                            var r = t[Symbol.toPrimitive];
                            if (void 0 !== r) {
                                var n = r.call(t, "string");
                                if ("object" !== Xo(n)) return n;
                                throw new TypeError("@@toPrimitive must return a primitive value.")
                            }
                            return String(t)
                        }(t);
                        return "symbol" === Xo(e) ? e : String(e)
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t
                }
                var ni = "com.available.download.domain",
                    oi = "com.download.app.link",
                    ii = "com.download.app.resetricted.link",
                    ai = [ni, oi, ii];
                const ci = function() {
                    var t = Jo.apply(void 0, ai),
                        e = t.value,
                        r = t.loading,
                        n = Wr().language,
                        a = rn().value,
                        c = (0, i.useMemo)((function() {
                            var t, r, i, c, u, l, s;
                            if (!n || !a || !e) return {
                                value: {},
                                downloadUrlConfig: {},
                                downloadDomainConfig: null,
                                downloadAppResetrictedLinks: null
                            };
                            var f = (null == a ? void 0 : a.country.toLowerCase()) || "",
                                h = null === (t = e[ni]) || void 0 === t ? void 0 : t[n],
                                p = null == e ? void 0 : e[ii],
                                v = (null == n || null === (r = n.split) || void 0 === r || null === (i = r.call(n, "-")) || void 0 === i ? void 0 : i[1]) || "",
                                y = (null == p ? void 0 : p[(null == a || null === (c = a.country) || void 0 === c ? void 0 : c.toUpperCase()) || ""]) || (null == p ? void 0 : p[null == v ? void 0 : v.toUpperCase()]),
                                d = y ? {
                                    ios: null != y && y.ios ? (0, o.replaceUrlTemplateStr)(y.ios, n) : "",
                                    android: null != y && y.android ? (0, o.replaceUrlTemplateStr)(y.android, n) : ""
                                } : null,
                                m = (null == e || null === (u = e[oi]) || void 0 === u || null === (l = u.restrictedRegionDownloadUrl) || void 0 === l ? void 0 : l[f]) || {},
                                g = ei(ei({}, null == e || null === (s = e[oi]) || void 0 === s ? void 0 : s.defaultDownloadUrl), m);
                            return {
                                value: e,
                                downloadUrlConfig: g,
                                downloadDomainConfig: h,
                                downloadAppResetrictedLinks: d
                            }
                        }), [n, a, e]);
                    return {
                        value: c,
                        loading: r
                    }
                };
                var ui = r(7285);

                function li(t) {
                    return li = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, li(t)
                }

                function si() {
                    si = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == li(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function fi(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }

                function hi(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(t);
                        e && (n = n.filter((function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable
                        }))), r.push.apply(r, n)
                    }
                    return r
                }

                function pi(t) {
                    for (var e = 1; e < arguments.length; e++) {
                        var r = null != arguments[e] ? arguments[e] : {};
                        e % 2 ? hi(Object(r), !0).forEach((function(e) {
                            vi(t, e, r[e])
                        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : hi(Object(r)).forEach((function(e) {
                            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e))
                        }))
                    }
                    return t
                }

                function vi(t, e, r) {
                    return (e = function(t) {
                        var e = function(t, e) {
                            if ("object" !== li(t) || null === t) return t;
                            var r = t[Symbol.toPrimitive];
                            if (void 0 !== r) {
                                var n = r.call(t, "string");
                                if ("object" !== li(n)) return n;
                                throw new TypeError("@@toPrimitive must return a primitive value.")
                            }
                            return String(t)
                        }(t);
                        return "symbol" === li(e) ? e : String(e)
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t
                }

                function yi(t, e) {
                    return function(t) {
                        if (Array.isArray(t)) return t
                    }(t) || function(t, e) {
                        var r = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                        if (null != r) {
                            var n, o, i, a, c = [],
                                u = !0,
                                l = !1;
                            try {
                                if (i = (r = r.call(t)).next, 0 === e) {
                                    if (Object(r) !== r) return;
                                    u = !1
                                } else
                                    for (; !(u = (n = i.call(r)).done) && (c.push(n.value), c.length !== e); u = !0);
                            } catch (t) {
                                l = !0, o = t
                            } finally {
                                try {
                                    if (!u && null != r.return && (a = r.return(), Object(a) !== a)) return
                                } finally {
                                    if (l) throw o
                                }
                            }
                            return c
                        }
                    }(t, e) || di(t, e) || function() {
                        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                    }()
                }

                function di(t, e) {
                    if (t) {
                        if ("string" == typeof t) return mi(t, e);
                        var r = Object.prototype.toString.call(t).slice(8, -1);
                        return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? mi(t, e) : void 0
                    }
                }

                function mi(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
                    return n
                }
                var gi = {
                        oneLinkURL: {
                            iOS: "https://binance.onelink.me/mL1z",
                            Android: "https://binance.onelink.me/kDFj"
                        },
                        webReferrer: "af_sub1",
                        defaultParams: {
                            mediaSource: {
                                keys: ["utm_source"],
                                defaultValue: "header"
                            },
                            campaign: {
                                keys: ["utm_campaign"],
                                defaultValue: "not-mapped"
                            },
                            channel: {
                                keys: ["w2a_placement"],
                                defaultValue: "header"
                            },
                            utm_content: {
                                paramKey: "utm_content",
                                keys: ["utm_content"],
                                defaultValue: "not-mapped"
                            },
                            utm_medium: {
                                paramKey: "utm_medium",
                                keys: ["utm_medium"],
                                defaultValue: "not-mapped"
                            },
                            dl_content: {
                                paramKey: "dl_content",
                                keys: ["dl_content"],
                                defaultValue: "not-mapped"
                            },
                            utm_source: {
                                paramKey: "utm_source",
                                keys: ["utm_source"],
                                defaultValue: "header"
                            },
                            utm_campaign: {
                                paramKey: "utm_campaign",
                                keys: ["utm_campaign"],
                                defaultValue: "not-mapped"
                            },
                            custom_ss_ui: {
                                paramKey: "af_ss_ui",
                                defaultValue: "true"
                            }
                        }
                    },
                    wi = function(t, e) {
                        var r, n = yi((0, i.useState)(""), 2),
                            a = n[0],
                            c = n[1],
                            u = (0, o.useScript)("https://public.bnbstatic.com/static/js/onelink-smart-script/web/onelink-smart-script@2.7.3.js");
                        return (0, i.useEffect)((function() {
                            if ("ready" === u) {
                                var e = gi,
                                    r = window.AF_SMART_SCRIPT.generateOneLinkURL({
                                        oneLinkURL: e.oneLinkURL[t],
                                        webReferrer: e.webReferrer,
                                        afParameters: pi(pi({}, e.defaultParams), {}, {
                                            mediaSource: pi(pi({}, e.defaultParams.mediaSource), {}, {
                                                defaultValue: "download-page-".concat(t.toLowerCase())
                                            }),
                                            channel: pi(pi({}, e.defaultParams.channel), {}, {
                                                defaultValue: "download-page-".concat(t.toLowerCase())
                                            })
                                        })
                                    });
                                c((null == r ? void 0 : r.clickURL) || "")
                            }
                        }), [u].concat(function(t) {
                            if (Array.isArray(t)) return mi(t)
                        }(r = e) || function(t) {
                            if ("undefined" != typeof Symbol && null != t[Symbol.iterator] || null != t["@@iterator"]) return Array.from(t)
                        }(r) || di(r) || function() {
                            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                        }())), a
                    },
                    bi = function() {
                        var t, e = (t = si().mark((function t() {
                            var e, r, n;
                            return si().wrap((function(t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        return e = (0, o.getLevelDomain)(2), r = /localhost/.test(e) ? "" : "https://www.".concat(e), t.next = 4, (0, b.get)("/bapi/apex/v2/public/apex/marketing/web/commonConfig", {
                                            headers: {
                                                "x-host": r
                                            }
                                        });
                                    case 4:
                                        if (!(n = t.sent).success) {
                                            t.next = 7;
                                            break
                                        }
                                        return t.abrupt("return", n.data.res);
                                    case 7:
                                    case "end":
                                        return t.stop()
                                }
                            }), t)
                        })), function() {
                            var e = this,
                                r = arguments;
                            return new Promise((function(n, o) {
                                var i = t.apply(e, r);

                                function a(t) {
                                    fi(i, n, o, a, c, "next", t)
                                }

                                function c(t) {
                                    fi(i, n, o, a, c, "throw", t)
                                }
                                a(void 0)
                            }))
                        });
                        return function() {
                            return e.apply(this, arguments)
                        }
                    }(),
                    xi = o.cachePromiseStore.checkCacheBeforeRequest("useDownloadUrlConfigV2", (function() {
                        return bi()
                    }));
                const Li = function() {
                    var t = (0, o.useAsync)(xi, []),
                        e = t.value,
                        r = t.loading,
                        n = Wr().language,
                        a = rn().value,
                        c = (0, ui.y)(),
                        u = c.utm_content,
                        l = c.utm_medium,
                        s = c.utm_source,
                        f = c.utm_campaign,
                        h = wi("iOS", [u, l, s, f]),
                        p = wi("Android", [u, l, s, f]),
                        v = (0, i.useMemo)((function() {
                            return a ? null == a ? void 0 : a.country : null
                        }), [a]),
                        y = yi((0, i.useState)("https://download.binance.com"), 2),
                        d = y[0],
                        m = y[1];
                    return (0, i.useMemo)((function() {
                        var t;
                        if (e) {
                            var r, o = null !== (t = null == e ? void 0 : e["com.available.download.domain"]) && void 0 !== t ? t : {};
                            r = "CN" === v || "zh-CN" === n ? o["zh-CN"].downloadDomain : o.global.downloadDomain, m(r)
                        }
                    }), [e, n, v]), {
                        value: (0, i.useMemo)((function() {
                            var t;
                            if (e) {
                                var r = (null === (t = e["com.download.app.link"]) || void 0 === t ? void 0 : t.defaultDownloadUrl) || {},
                                    n = r.androidApk,
                                    o = void 0 === n ? "/pack/BNApp64.apk" : n,
                                    i = r.androidVersion,
                                    a = void 0 === i ? "" : i,
                                    c = r.iosVersion,
                                    u = void 0 === c ? "" : c,
                                    l = r.authAndroid,
                                    s = void 0 === l ? "/authenticator/binance-authenticator.apk" : l,
                                    f = r.authIOS,
                                    v = void 0 === f ? "https://apps.apple.com/hk/app/bauthenticator/id1575861279" : f,
                                    y = r.downloadApi,
                                    m = void 0 === y ? "https://binance-docs.github.io/apidocs/spot/en" : y,
                                    g = r.linuxDeb,
                                    w = void 0 === g ? "/electron-desktop/linux/production/binance-amd64-linux.deb" : g,
                                    b = r.linuxDebSha,
                                    x = void 0 === b ? "/electron-desktop/linux/production/binance-amd64-linux-deb-sha256.txt" : b,
                                    L = r.linuxRpm,
                                    E = void 0 === L ? "/electron-desktop/linux/production/binance-x86_64-linux.rpm" : L,
                                    S = r.linuxRpmSha,
                                    O = void 0 === S ? "/electron-desktop/linux/production/binance-x86_64-linux-rpm-sha256.txt" : S,
                                    j = r.macOSIntel,
                                    P = void 0 === j ? "/electron-desktop/mac/production/binance.dmg" : j,
                                    _ = r.macOSM1,
                                    k = void 0 === _ ? "/electron-desktop/mac/production/binance-arm64.dmg" : _,
                                    N = r.windows;
                                return {
                                    androidApk: d + o,
                                    authAndroid: d + s,
                                    authIOS: v,
                                    downloadApi: m,
                                    iosVersion: u,
                                    androidVersion: a,
                                    linuxDeb: d + w,
                                    linuxDebSha: d + x,
                                    linuxRpm: d + E,
                                    linuxRpmSha: d + O,
                                    macOSIntel: d + P,
                                    macOSM1: d + k,
                                    windowsOS: d + (void 0 === N ? "/electron-desktop/windows/production/binance-setup.exe" : N),
                                    androidSmartLink: p,
                                    iosSmartLink: h
                                }
                            }
                        }), [e, d, h, p]),
                        loading: r
                    }
                };
                var Ei, Si = r(6765),
                    Oi = r.n(Si),
                    ji = r(3649);

                function Pi(t, e) {
                    return function(t) {
                        if (Array.isArray(t)) return t
                    }(t) || function(t, e) {
                        var r = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                        if (null != r) {
                            var n, o, i, a, c = [],
                                u = !0,
                                l = !1;
                            try {
                                if (i = (r = r.call(t)).next, 0 === e) {
                                    if (Object(r) !== r) return;
                                    u = !1
                                } else
                                    for (; !(u = (n = i.call(r)).done) && (c.push(n.value), c.length !== e); u = !0);
                            } catch (t) {
                                l = !0, o = t
                            } finally {
                                try {
                                    if (!u && null != r.return && (a = r.return(), Object(a) !== a)) return
                                } finally {
                                    if (l) throw o
                                }
                            }
                            return c
                        }
                    }(t, e) || function(t, e) {
                        if (t) {
                            if ("string" == typeof t) return _i(t, e);
                            var r = Object.prototype.toString.call(t).slice(8, -1);
                            return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? _i(t, e) : void 0
                        }
                    }(t, e) || function() {
                        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                    }()
                }

                function _i(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
                    return n
                }

                function ki(t) {
                    t = t || {};
                    var e = {};
                    return Object.keys(t).forEach((function(r) {
                        if (["bannerInfo", "popupInfo"].includes(r)) {
                            try {
                                e[r] = JSON.parse(t[r])
                            } catch (t) {
                                console.error("[parseActionInfo], parse actionInfo error: ", t), e[r] = void 0
                            }
                            "bannerInfo" === r && e[r] && !Array.isArray(e[r]) && (e[r] = [e[r]]), "popupInfo" === r && Array.isArray(e[r]) && (e[r] = e[r][0] || {})
                        }
                        "actionUrl" === r && (e[r] = t[r])
                    })), e
                }
                var Ni = "",
                    Ai = "onCustomHrefChange";

                function Ti() {
                    return Ei || (console.log("[useComplianceActionCheck] initHrefChangeListenerSingleton"), (Ei = new MutationObserver((function(t) {
                        if (Ni !== document.location.href) {
                            Ni = document.location.href;
                            var e = new Event(Ai);
                            e.currentHref = Ni, document.body.dispatchEvent(e)
                        }
                    }))).observe(document.body, {
                        childList: !0,
                        subtree: !0
                    }), Ei)
                }
                const Gi = function() {
                    var t, e = Pi((0, i.useState)(window.location.href), 2),
                        r = e[0],
                        n = e[1];
                    (0, i.useEffect)((function() {
                        var t = Ti(),
                            e = function(t) {
                                var e = t.currentHref;
                                console.log("[useComplianceActionCheck] href change event", e), n(e)
                            };
                        return document.body.addEventListener(Ai, e),
                            function() {
                                console.log("hrefChangeListener unmount"), t.disconnect(), document.body.removeEventListener(Ai, e)
                            }
                    }), []);
                    var a = (0, ji.ZP)(["/bapi/apex/v1/friendly/apex/marketing/complianceActionCheck", {
                            requestLink: r
                        }], (function(t) {
                            var e = Pi(t, 2),
                                r = e[0],
                                n = e[1];
                            return (0, b.post)(r, n)
                        }), {
                            dedupingInterval: 3e5
                        }),
                        c = a.data,
                        u = a.error,
                        l = a.isLoading,
                        s = (0, i.useMemo)((function() {
                            var t;
                            if (l || u) return null;
                            var e = (0, o.deepClone)(c || {});
                            null != e && e.data || Oi()(e, "data", {}), null != e && null !== (t = e.data) && void 0 !== t && t.userCheckResult || Oi()(e, "data.userCheckResult", {});
                            var r = e.data,
                                n = r.actionInfo,
                                i = r.userCheckResult;
                            e.data.actionInfo = ki(n), e.data.userCheckResult.actionInfo = ki(i.actionInfo);
                            var a = function(t) {
                                if (!t) return null;
                                var e = Object.keys(t);
                                if (!e.length) return null;
                                for (var r = 0, n = e; r < n.length; r++) {
                                    var o, i, a, c = t[n[r]];
                                    return Array.isArray(c) ? null === (i = c[0]) || void 0 === i || null === (a = i.extraInfo) || void 0 === a ? void 0 : a.errorCode : null == c || null === (o = c.extraInfo) || void 0 === o ? void 0 : o.errorCode
                                }
                            }(e.data.actionInfo);
                            return a === e.data.userCheckResult.errorCode && (console.log("duplicate errorCode, clear userCheckResult.actionInfo"), e.data.userCheckResult.actionInfo = {}), e
                        }), [c, u, l]),
                        f = (0, i.useMemo)((function() {
                            var t, e = ((null == s || null === (t = s.data) || void 0 === t ? void 0 : t.actionInfo) || {}).bannerInfo;
                            return void 0 === e ? [] : e
                        }), [null == s || null === (t = s.data) || void 0 === t ? void 0 : t.actionInfo]);
                    return {
                        value: s,
                        loading: l,
                        bannerInfo: f
                    }
                };

                function Ii(t) {
                    return Ii = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, Ii(t)
                }

                function Ci(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(t);
                        e && (n = n.filter((function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable
                        }))), r.push.apply(r, n)
                    }
                    return r
                }

                function Fi(t) {
                    for (var e = 1; e < arguments.length; e++) {
                        var r = null != arguments[e] ? arguments[e] : {};
                        e % 2 ? Ci(Object(r), !0).forEach((function(e) {
                            Di(t, e, r[e])
                        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : Ci(Object(r)).forEach((function(e) {
                            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e))
                        }))
                    }
                    return t
                }

                function Di(t, e, r) {
                    return (e = function(t) {
                        var e = function(t, e) {
                            if ("object" !== Ii(t) || null === t) return t;
                            var r = t[Symbol.toPrimitive];
                            if (void 0 !== r) {
                                var n = r.call(t, "string");
                                if ("object" !== Ii(n)) return n;
                                throw new TypeError("@@toPrimitive must return a primitive value.")
                            }
                            return String(t)
                        }(t);
                        return "symbol" === Ii(e) ? e : String(e)
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t
                }

                function Ui(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
                    return n
                }
                var Mi = function() {
                    if (o.isClient) {
                        var t = o.cachePromiseStore.getCache("mediaState") || {};
                        window.innerWidth < 768 ? t.isMobile || o.cachePromiseStore.setState("mediaState", {
                            isMobile: !0,
                            isTablet: !1,
                            isDesktop: !1
                        }) : window.innerWidth < 1024 ? t.isTablet || o.cachePromiseStore.setState("mediaState", {
                            isMobile: !1,
                            isTablet: !0,
                            isDesktop: !1
                        }) : t.isDesktop || o.cachePromiseStore.setState("mediaState", {
                            isMobile: !1,
                            isTablet: !1,
                            isDesktop: !0
                        }), window.matchMedia("(max-width: 767px)").addEventListener("change", (function(t) {
                            t.matches && o.cachePromiseStore.setState("mediaState", {
                                isMobile: !0,
                                isTablet: !1,
                                isDesktop: !1
                            })
                        })), window.matchMedia("(min-width: 768px) and (max-width: 1023px)").addEventListener("change", (function(t) {
                            t.matches && o.cachePromiseStore.setState("mediaState", {
                                isMobile: !1,
                                isTablet: !0,
                                isDesktop: !1
                            })
                        })), window.matchMedia("(min-width: 1024px)").addEventListener("change", (function(t) {
                            t.matches && o.cachePromiseStore.setState("mediaState", {
                                isMobile: !1,
                                isTablet: !1,
                                isDesktop: !0
                            })
                        }))
                    }
                };
                const Ri = o.cachePromiseStore.listenerActiveFunction("mediaState", (function() {
                    var t, e, r = (t = (0, o.useCacheState)("mediaState", {
                        isMobile: !1,
                        isTablet: !1,
                        isDesktop: !1
                    }), e = 1, function(t) {
                        if (Array.isArray(t)) return t
                    }(t) || function(t, e) {
                        var r = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                        if (null != r) {
                            var n, o, i, a, c = [],
                                u = !0,
                                l = !1;
                            try {
                                if (i = (r = r.call(t)).next, 0 === e) {
                                    if (Object(r) !== r) return;
                                    u = !1
                                } else
                                    for (; !(u = (n = i.call(r)).done) && (c.push(n.value), c.length !== e); u = !0);
                            } catch (t) {
                                l = !0, o = t
                            } finally {
                                try {
                                    if (!u && null != r.return && (a = r.return(), Object(a) !== a)) return
                                } finally {
                                    if (l) throw o
                                }
                            }
                            return c
                        }
                    }(t, e) || function(t, e) {
                        if (t) {
                            if ("string" == typeof t) return Ui(t, e);
                            var r = Object.prototype.toString.call(t).slice(8, -1);
                            return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? Ui(t, e) : void 0
                        }
                    }(t, e) || function() {
                        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                    }())[0];
                    return (0, i.useEffect)((function() {
                        Mi && (Mi(), Mi = null)
                    }), []), (0, i.useMemo)((function() {
                        return Fi(Fi({}, r), {}, {
                            isDesktop: void 0 === r.isDesktop ? !r.isMobile && !r.isTablet : r.isDesktop
                        })
                    }), [r.isMobile, r.isTablet])
                }));
                var Bi = function() {
                    var t = ve().value || {},
                        e = t.isAssetSubAccount,
                        r = t.isNoEmailSubUser,
                        n = t.subUser;
                    return !(e || r || !n)
                };

                function Yi(t) {
                    return Yi = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, Yi(t)
                }

                function qi() {
                    qi = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == Yi(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function Ki(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }
                var Vi = function() {
                        var t, e = (t = qi().mark((function t() {
                            var e, r;
                            return qi().wrap((function(t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        return t.next = 2, (0, b.get)("/bapi/apex/v2/friendly/apex/marketing/app/wallet/asset/unit");
                                    case 2:
                                        if (!(e = t.sent).success) {
                                            t.next = 5;
                                            break
                                        }
                                        return t.abrupt("return", null === (r = e.data) || void 0 === r ? void 0 : r.unitList);
                                    case 5:
                                    case "end":
                                        return t.stop()
                                }
                            }), t)
                        })), function() {
                            var e = this,
                                r = arguments;
                            return new Promise((function(n, o) {
                                var i = t.apply(e, r);

                                function a(t) {
                                    Ki(i, n, o, a, c, "next", t)
                                }

                                function c(t) {
                                    Ki(i, n, o, a, c, "throw", t)
                                }
                                a(void 0)
                            }))
                        });
                        return function() {
                            return e.apply(this, arguments)
                        }
                    }(),
                    zi = o.cachePromiseStore.checkCacheBeforeRequest("userQuoteAssetConfig", (function() {
                        return Vi()
                    }));
                const Wi = function() {
                    var t = (0, o.useAsync)(zi, []);
                    return {
                        value: t.value,
                        loading: t.loading
                    }
                };

                function Hi(t) {
                    return Hi = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, Hi(t)
                }

                function $i() {
                    $i = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == Hi(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function Zi(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }
                var Qi = function() {
                        var t, e = (t = $i().mark((function t() {
                            var e;
                            return $i().wrap((function(t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        return t.prev = 0, t.next = 3, (0, b.get)("/bapi/apex/v1/friendly/apex/marketing/investmentRecommend");
                                    case 3:
                                        return e = t.sent, t.abrupt("return", e.data);
                                    case 7:
                                        return t.prev = 7, t.t0 = t.catch(0), t.t0 instanceof Error && console.error("getInvestmentRecommend error = ", null === t.t0 || void 0 === t.t0 ? void 0 : t.t0.message), t.abrupt("return", {});
                                    case 11:
                                    case "end":
                                        return t.stop()
                                }
                            }), t, null, [
                                [0, 7]
                            ])
                        })), function() {
                            var e = this,
                                r = arguments;
                            return new Promise((function(n, o) {
                                var i = t.apply(e, r);

                                function a(t) {
                                    Zi(i, n, o, a, c, "next", t)
                                }

                                function c(t) {
                                    Zi(i, n, o, a, c, "throw", t)
                                }
                                a(void 0)
                            }))
                        });
                        return function() {
                            return e.apply(this, arguments)
                        }
                    }(),
                    Ji = (0, o.generateUseState)("investmentRecommend", Qi),
                    Xi = r(8823),
                    ta = r(5784);

                function ea(t) {
                    return ea = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, ea(t)
                }

                function ra() {
                    ra = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == ea(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function na(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }

                function oa(t) {
                    return function() {
                        var e = this,
                            r = arguments;
                        return new Promise((function(n, o) {
                            var i = t.apply(e, r);

                            function a(t) {
                                na(i, n, o, a, c, "next", t)
                            }

                            function c(t) {
                                na(i, n, o, a, c, "throw", t)
                            }
                            a(void 0)
                        }))
                    }
                }
                const ia = function() {
                    var t = Fr().currency,
                        e = (0, o.useAsync)(function(t) {
                            var e = t.currency;
                            return o.cachePromiseStore.checkCacheBeforeRequest("SearchExplore", oa(ra().mark((function t() {
                                var r;
                                return ra().wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            return t.next = 2, Promise.all([xt(), (0, Xi.I8)({
                                                page: 1,
                                                rows: 12,
                                                runningTimeMax: 604800,
                                                runningTimeMin: 172800,
                                                sort: "copyCount",
                                                strategyType: 1
                                            }), (0, ta.j5)({
                                                pageNumber: 1,
                                                pageSize: 12,
                                                timeRange: "7D",
                                                dataType: "ROI",
                                                favoriteOnly: !1,
                                                hideFull: !0,
                                                nickname: "",
                                                order: "DESC"
                                            }), Ot({
                                                currency: e
                                            })]);
                                        case 2:
                                            return r = t.sent, t.abrupt("return", r);
                                        case 4:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t)
                            }))))
                        }({
                            currency: t
                        }), []),
                        r = e.value,
                        n = e.loading;
                    return {
                        value: (0, i.useMemo)((function() {
                            var t, e;
                            return n ? {} : {
                                symbolRecommend: null == r ? void 0 : r[0],
                                tradingBots: null == r || null === (t = r[1]) || void 0 === t ? void 0 : t.data,
                                copyTrading: null == r || null === (e = r[2]) || void 0 === e ? void 0 : e.data,
                                earnRecommend: null == r ? void 0 : r[3]
                            } || {}
                        }), [n, r]),
                        loading: n
                    }
                };
                var aa = o.cachePromiseStore.checkCacheBeforeRequest("optionProducts", (function() {
                    return kt()
                }));
                const ca = function() {
                    var t = (0, o.useAsync)(aa, []),
                        e = t.value,
                        r = t.loading;
                    return {
                        productMap: (null == e ? void 0 : e.productMap) || {},
                        productList: (null == e ? void 0 : e.productList) || [],
                        loading: r
                    }
                };
                var ua = r(7668);

                function la(t) {
                    return la = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, la(t)
                }

                function sa() {
                    sa = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == la(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function fa(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }
                var ha = function(t) {
                        return !!isNaN(Number(t))
                    },
                    pa = function(t) {
                        return function() {
                            var e, r = (e = sa().mark((function e(r) {
                                var n, i, a, c;
                                return sa().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            if (n = (0, o.dayjs)().utcOffset(0).format("YYYYMMDD"), i = ha(r)) {
                                                e.next = 4;
                                                break
                                            }
                                            return e.abrupt("return", {});
                                        case 4:
                                            return a = {
                                                timezone: "".concat(3600 * Number(i)),
                                                business: t,
                                                datetime: n
                                            }, e.next = 7, (0, ua.C)(a);
                                        case 7:
                                            return c = e.sent, e.abrupt("return", (null == c ? void 0 : c.symbolKlines) || {});
                                        case 9:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e)
                            })), function() {
                                var t = this,
                                    r = arguments;
                                return new Promise((function(n, o) {
                                    var i = e.apply(t, r);

                                    function a(t) {
                                        fa(i, n, o, a, c, "next", t)
                                    }

                                    function c(t) {
                                        fa(i, n, o, a, c, "throw", t)
                                    }
                                    a(void 0)
                                }))
                            });
                            return function(t) {
                                return r.apply(this, arguments)
                            }
                        }()
                    },
                    va = (0, o.generateUseState)("futures_um", pa("futures_um"), ["changeBasisTimeZone"]),
                    ya = (0, o.generateUseState)("futures_cm", pa("futures_cm"), ["changeBasisTimeZone"]),
                    da = (0, o.generateUseState)("spot", pa("spot"), ["changeBasisTimeZone"]);

                function ma(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
                    return n
                }
                const ga = o.cachePromiseStore.listenerActiveFunction("isSeo", (function() {
                    return (t = (0, o.useCacheState)("isSeo", !1), e = 1, function(t) {
                        if (Array.isArray(t)) return t
                    }(t) || function(t, e) {
                        var r = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                        if (null != r) {
                            var n, o, i, a, c = [],
                                u = !0,
                                l = !1;
                            try {
                                if (i = (r = r.call(t)).next, 0 === e) {
                                    if (Object(r) !== r) return;
                                    u = !1
                                } else
                                    for (; !(u = (n = i.call(r)).done) && (c.push(n.value), c.length !== e); u = !0);
                            } catch (t) {
                                l = !0, o = t
                            } finally {
                                try {
                                    if (!u && null != r.return && (a = r.return(), Object(a) !== a)) return
                                } finally {
                                    if (l) throw o
                                }
                            }
                            return c
                        }
                    }(t, e) || function(t, e) {
                        if (t) {
                            if ("string" == typeof t) return ma(t, e);
                            var r = Object.prototype.toString.call(t).slice(8, -1);
                            return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? ma(t, e) : void 0
                        }
                    }(t, e) || function() {
                        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                    }())[0];
                    var t, e
                }));

                function wa(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
                    return n
                }
                const ba = function() {
                    var t, e, r = (t = (0, i.useState)("none"), e = 2, function(t) {
                            if (Array.isArray(t)) return t
                        }(t) || function(t, e) {
                            var r = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                            if (null != r) {
                                var n, o, i, a, c = [],
                                    u = !0,
                                    l = !1;
                                try {
                                    if (i = (r = r.call(t)).next, 0 === e) {
                                        if (Object(r) !== r) return;
                                        u = !1
                                    } else
                                        for (; !(u = (n = i.call(r)).done) && (c.push(n.value), c.length !== e); u = !0);
                                } catch (t) {
                                    l = !0, o = t
                                } finally {
                                    try {
                                        if (!u && null != r.return && (a = r.return(), Object(a) !== a)) return
                                    } finally {
                                        if (l) throw o
                                    }
                                }
                                return c
                            }
                        }(t, e) || function(t, e) {
                            if (t) {
                                if ("string" == typeof t) return wa(t, e);
                                var r = Object.prototype.toString.call(t).slice(8, -1);
                                return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? wa(t, e) : void 0
                            }
                        }(t, e) || function() {
                            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                        }()),
                        n = r[0],
                        o = r[1],
                        a = function() {
                            var t = window.innerWidth;
                            o(t < 768 ? "mobile" : t < 1440 ? "tablet" : "desktop")
                        };
                    return (0, i.useEffect)((function() {
                        return a(), window.addEventListener("resize", a),
                            function() {
                                window.removeEventListener("resize", a)
                            }
                    }), []), n
                };

                function xa(t) {
                    return xa = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, xa(t)
                }

                function La() {
                    La = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == xa(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function Ea(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }
                var Sa = [],
                    Oa = function() {
                        var t, e = (t = La().mark((function t() {
                            var e;
                            return La().wrap((function(t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        return t.next = 2, (0, b.get)("/bapi/defi/v1/public/wallet-direct/buw/wallet/cex/alpha/all/token/list");
                                    case 2:
                                        if (null == (e = t.sent) || !e.success || !Array.isArray(null == e ? void 0 : e.data)) {
                                            t.next = 5;
                                            break
                                        }
                                        return t.abrupt("return", null == e ? void 0 : e.data);
                                    case 5:
                                        return t.abrupt("return", Sa);
                                    case 6:
                                    case "end":
                                        return t.stop()
                                }
                            }), t)
                        })), function() {
                            var e = this,
                                r = arguments;
                            return new Promise((function(n, o) {
                                var i = t.apply(e, r);

                                function a(t) {
                                    Ea(i, n, o, a, c, "next", t)
                                }

                                function c(t) {
                                    Ea(i, n, o, a, c, "throw", t)
                                }
                                a(void 0)
                            }))
                        });
                        return function() {
                            return e.apply(this, arguments)
                        }
                    }(),
                    ja = o.cachePromiseStore.checkCacheBeforeRequest("common-widget-alpha-token-list", (function() {
                        return Oa()
                    }));
                const Pa = function() {
                    var t = (0, o.useAsync)(ja, []);
                    return {
                        value: t.value,
                        loading: t.loading
                    }
                };

                function _a(t) {
                    return _a = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, _a(t)
                }

                function ka() {
                    ka = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == _a(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function Na(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }

                function Aa(t) {
                    return function() {
                        var e = this,
                            r = arguments;
                        return new Promise((function(n, o) {
                            var i = t.apply(e, r);

                            function a(t) {
                                Na(i, n, o, a, c, "next", t)
                            }

                            function c(t) {
                                Na(i, n, o, a, c, "throw", t)
                            }
                            a(void 0)
                        }))
                    }
                }
                var Ta = function(t) {
                    return o.cachePromiseStore.checkCacheBeforeRequest("depositRecommend-".concat(t.position, "-").concat(t.bizScene, "-").concat(t.isNight, "-").concat(t.paymentCurrency), v(Aa(ka().mark((function e() {
                        var r, n, o;
                        return ka().wrap((function(e) {
                            for (;;) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, (0, sr.$Y)(t);
                                case 2:
                                    if (r = e.sent, n = r.success, o = r.data, !n) {
                                        e.next = 7;
                                        break
                                    }
                                    return e.abrupt("return", o);
                                case 7:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    })))))
                };
                const Ga = function(t) {
                    var e = t.bizScene,
                        r = t.position,
                        n = Fr().currency,
                        i = vo().theme;
                    return (0, o.useAsync)(Aa(ka().mark((function t() {
                        return ka().wrap((function(t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    return t.abrupt("return", Ta({
                                        bizScene: e,
                                        position: r,
                                        paymentCurrency: n,
                                        isNight: "dark" === i,
                                        coin: ""
                                    })());
                                case 1:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    }))), [e, r, n, i])
                };
                var Ia, Ca, Fa, Da = r(8101);

                function Ua(t) {
                    return Ua = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, Ua(t)
                }

                function Ma() {
                    Ma = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == Ua(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function Ra(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }

                function Ba(t) {
                    return function() {
                        var e = this,
                            r = arguments;
                        return new Promise((function(n, o) {
                            var i = t.apply(e, r);

                            function a(t) {
                                Ra(i, n, o, a, c, "next", t)
                            }

                            function c(t) {
                                Ra(i, n, o, a, c, "throw", t)
                            }
                            a(void 0)
                        }))
                    }
                }
                var Ya = "twitterConnectTrigger",
                    qa = "twitterConnectTriggerRefer",
                    Ka = function(t) {
                        return t.header = "Header", t.app = "App_Usercenter", t
                    }({}),
                    Va = function(t) {
                        return t.Header = "header", t.Page = "page", t.App = "app", t
                    }({}),
                    za = function(t) {
                        return t.Ready = "ready", t.Prepare = "prepare", t.Success = "success", t.Fail = "fail", t.Silence = "silence", t
                    }({}),
                    Wa = o.isClient ? null === (Ia = window) || void 0 === Ia || null === (Ca = Ia.sessionStorage) || void 0 === Ca || null === (Fa = Ca.getItem) || void 0 === Fa ? void 0 : Fa.call(Ca, Ya) : "",
                    Ha = function() {
                        var t = Ba(Ma().mark((function t() {
                            var e, r, n;
                            return Ma().wrap((function(t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        return t.next = 2, (0, Da.de)();
                                    case 2:
                                        return r = t.sent, n = null == r || null === (e = r.data) || void 0 === e ? void 0 : e.twitterAccountInfo, t.abrupt("return", {
                                            twitterAccount: n,
                                            bindResult: {
                                                status: n ? za.Ready : za.Silence,
                                                message: null
                                            }
                                        });
                                    case 5:
                                    case "end":
                                        return t.stop()
                                }
                            }), t)
                        })));
                        return function() {
                            return t.apply(this, arguments)
                        }
                    }(),
                    $a = function() {
                        var t = Ba(Ma().mark((function t(e) {
                            var r, n, i, a, c, u, l, s, f, h;
                            return Ma().wrap((function(t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        if (r = (0, o.getUrlParams)(), n = r.oauth_token, i = r.oauth_verifier, a = r.campaignId, c = r.source, !n || !i) {
                                            t.next = 11;
                                            break
                                        }
                                        return l = Ka[e], s = "".concat(n, ",").concat(i), t.next = 6, (0, Da.Lc)({
                                            code: s,
                                            socialAccountType: Da.by.Twitter,
                                            source: c || l,
                                            bizId: a
                                        });
                                    case 6:
                                        if (f = t.sent, !(h = null == f || null === (u = f.data) || void 0 === u ? void 0 : u.twitterAccountInfo)) {
                                            t.next = 10;
                                            break
                                        }
                                        return t.abrupt("return", {
                                            twitterAccount: h,
                                            bindResult: {
                                                status: za.Success,
                                                message: null
                                            }
                                        });
                                    case 10:
                                        return t.abrupt("return", {
                                            twitterAccount: null,
                                            bindResult: {
                                                status: za.Fail,
                                                message: null == f ? void 0 : f.message
                                            }
                                        });
                                    case 11:
                                    case "end":
                                        return t.stop()
                                }
                            }), t)
                        })));
                        return function(e) {
                            return t.apply(this, arguments)
                        }
                    }(),
                    Za = (0, o.generateUseState)("twitterCheckRequest", v(Ha)),
                    Qa = function() {
                        var t = Ba(Ma().mark((function t(e) {
                            var r, n, i, a, c, u, l, s, f, h, p;
                            return Ma().wrap((function(t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        if (e.triggerForm === Wa && (null === (r = window) || void 0 === r || null === (n = r.sessionStorage) || void 0 === n || null === (i = n.getItem) || void 0 === i ? void 0 : i.call(n, qa)) === window.location.pathname) {
                                            t.next = 2;
                                            break
                                        }
                                        return t.abrupt("return");
                                    case 2:
                                        if (a = o.cachePromiseStore.getCache("twitterCheckRequest"), c = (0, o.getUrlParams)(), u = c.oauth_token, l = c.oauth_verifier, s = c.callbackUrl, f = c.returnUrl, (null == a ? void 0 : a.bindResult.status) !== za.Ready || !s) {
                                            t.next = 8;
                                            break
                                        }
                                        return h = decodeURIComponent("".concat(s)), window.location.href = "/".concat(e.language).concat(h, "?bindStatus=1"), t.abrupt("return");
                                    case 8:
                                        if ((null == a ? void 0 : a.bindResult.status) !== za.Silence) {
                                            t.next = 14;
                                            break
                                        }
                                        if (!f || u || l) {
                                            t.next = 13;
                                            break
                                        }
                                        return p = decodeURIComponent("".concat(f)), window.location.href = "/".concat(e.language).concat(p, "?bindStatus=0"), t.abrupt("return");
                                    case 13:
                                        $a(e.triggerForm).then((function(t) {
                                            t && (o.cachePromiseStore.setState("twitterCheckRequest", t), o.cachePromiseStore.setState("twitterCheckValue", t))
                                        }));
                                    case 14:
                                    case "end":
                                        return t.stop()
                                }
                            }), t)
                        })));
                        return function(e) {
                            return t.apply(this, arguments)
                        }
                    }();
                const Ja = Za;

                function Xa(t) {
                    return Xa = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, Xa(t)
                }

                function tc() {
                    tc = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == Xa(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function ec(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }

                function rc(t) {
                    return function() {
                        var e = this,
                            r = arguments;
                        return new Promise((function(n, o) {
                            var i = t.apply(e, r);

                            function a(t) {
                                ec(i, n, o, a, c, "next", t)
                            }

                            function c(t) {
                                ec(i, n, o, a, c, "throw", t)
                            }
                            a(void 0)
                        }))
                    }
                }
                var nc = v(rc(tc().mark((function t() {
                    var e;
                    return tc().wrap((function(t) {
                        for (;;) switch (t.prev = t.next) {
                            case 0:
                                return t.next = 2, (0, b.post)("/bapi/kyc/v2/private/certificate/user-kyc/current-kyc-status");
                            case 2:
                                if (!(e = t.sent).success) {
                                    t.next = 5;
                                    break
                                }
                                return t.abrupt("return", e.data);
                            case 5:
                                return t.abrupt("return", null);
                            case 6:
                            case "end":
                                return t.stop()
                        }
                    }), t)
                }))));
                const oc = (0, o.generateUseState)("kycInfo", nc),
                    ic = function() {
                        var t = oc().value,
                            e = rn().value,
                            r = y().value;
                        return (0, i.useMemo)((function() {
                            var n;
                            if (null !== r) return r ? null == t || null === (n = t.fillInfo) || void 0 === n ? void 0 : n.country : null == e ? void 0 : e.country
                        }), [t, e, r])
                    };
                var ac = r(3969);

                function cc(t) {
                    return cc = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, cc(t)
                }
                var uc = ["enable", "isRetailUser"];

                function lc() {
                    lc = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == cc(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function sc(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(t);
                        e && (n = n.filter((function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable
                        }))), r.push.apply(r, n)
                    }
                    return r
                }

                function fc(t) {
                    for (var e = 1; e < arguments.length; e++) {
                        var r = null != arguments[e] ? arguments[e] : {};
                        e % 2 ? sc(Object(r), !0).forEach((function(e) {
                            hc(t, e, r[e])
                        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : sc(Object(r)).forEach((function(e) {
                            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e))
                        }))
                    }
                    return t
                }

                function hc(t, e, r) {
                    return (e = function(t) {
                        var e = function(t, e) {
                            if ("object" !== cc(t) || null === t) return t;
                            var r = t[Symbol.toPrimitive];
                            if (void 0 !== r) {
                                var n = r.call(t, "string");
                                if ("object" !== cc(n)) return n;
                                throw new TypeError("@@toPrimitive must return a primitive value.")
                            }
                            return String(t)
                        }(t);
                        return "symbol" === cc(e) ? e : String(e)
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t
                }

                function pc(t, e) {
                    if (null == t) return {};
                    var r, n, o = function(t, e) {
                        if (null == t) return {};
                        var r, n, o = {},
                            i = Object.keys(t);
                        for (n = 0; n < i.length; n++) r = i[n], e.indexOf(r) >= 0 || (o[r] = t[r]);
                        return o
                    }(t, e);
                    if (Object.getOwnPropertySymbols) {
                        var i = Object.getOwnPropertySymbols(t);
                        for (n = 0; n < i.length; n++) r = i[n], e.indexOf(r) >= 0 || Object.prototype.propertyIsEnumerable.call(t, r) && (o[r] = t[r])
                    }
                    return o
                }

                function vc(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }

                function yc(t) {
                    return function() {
                        var e = this,
                            r = arguments;
                        return new Promise((function(n, o) {
                            var i = t.apply(e, r);

                            function a(t) {
                                vc(i, n, o, a, c, "next", t)
                            }

                            function c(t) {
                                vc(i, n, o, a, c, "throw", t)
                            }
                            a(void 0)
                        }))
                    }
                }
                const dc = function() {
                    return (0, o.useAsync)(yc(lc().mark((function t() {
                        return lc().wrap((function(t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    return t.abrupt("return", o.cachePromiseStore.checkCacheBeforeRequest("usePmAccountInfo", v(yc(lc().mark((function t() {
                                        var e, r, n, o, i, a, c;
                                        return lc().wrap((function(t) {
                                            for (;;) switch (t.prev = t.next) {
                                                case 0:
                                                    return t.prev = 0, t.next = 3, (0, ac.mn)();
                                                case 3:
                                                    if (t.t0 = t.sent, t.t0) {
                                                        t.next = 6;
                                                        break
                                                    }
                                                    t.t0 = {};
                                                case 6:
                                                    return e = t.t0, r = e.data, o = (n = r || {}).enable, i = n.isRetailUser, a = pc(n, uc), c = fc({
                                                        isGeneralAccount: !o,
                                                        isOldPMAccount: o && !i,
                                                        isNewPMAccount: o && i
                                                    }, a), t.abrupt("return", c);
                                                case 13:
                                                    return t.prev = 13, t.t1 = t.catch(0), console.error(t.t1), t.abrupt("return", {});
                                                case 17:
                                                case "end":
                                                    return t.stop()
                                            }
                                        }), t, null, [
                                            [0, 13]
                                        ])
                                    })))))());
                                case 1:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    }))), [])
                };

                function mc(t) {
                    return mc = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, mc(t)
                }

                function gc() {
                    gc = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == mc(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function wc(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }
                var bc = function() {
                        var t, e = (t = gc().mark((function t() {
                            var e, r;
                            return gc().wrap((function(t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        return t.prev = 0, t.next = 3, (0, b.post)("/bapi/composite/v2/private/usertask/challenge/list", {
                                            listType: "Ongoing",
                                            size: 6,
                                            tasksLabel: "ONBOARDING_TASKS"
                                        });
                                    case 3:
                                        return e = t.sent, r = e.data, t.abrupt("return", r || {});
                                    case 8:
                                        return t.prev = 8, t.t0 = t.catch(0), console.error("[libs/api] getUserTaskChallengeList failed", t.t0 instanceof Error ? null === t.t0 || void 0 === t.t0 ? void 0 : t.t0.message : t.t0), t.abrupt("return", {});
                                    case 12:
                                    case "end":
                                        return t.stop()
                                }
                            }), t, null, [
                                [0, 8]
                            ])
                        })), function() {
                            var e = this,
                                r = arguments;
                            return new Promise((function(n, o) {
                                var i = t.apply(e, r);

                                function a(t) {
                                    wc(i, n, o, a, c, "next", t)
                                }

                                function c(t) {
                                    wc(i, n, o, a, c, "throw", t)
                                }
                                a(void 0)
                            }))
                        });
                        return function() {
                            return e.apply(this, arguments)
                        }
                    }(),
                    xc = o.cachePromiseStore.checkCacheBeforeRequest("userTaskChallengeList", v(bc));
                const Lc = function() {
                    var t = (0, o.useAsync)(xc, []),
                        e = t.value;
                    return {
                        loading: t.loading,
                        value: e
                    }
                };
                var Ec = r(2702);

                function Sc(t) {
                    return Sc = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, Sc(t)
                }

                function Oc() {
                    Oc = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == Sc(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function jc(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }

                function Pc(t) {
                    return function() {
                        var e = this,
                            r = arguments;
                        return new Promise((function(n, o) {
                            var i = t.apply(e, r);

                            function a(t) {
                                jc(i, n, o, a, c, "next", t)
                            }

                            function c(t) {
                                jc(i, n, o, a, c, "throw", t)
                            }
                            a(void 0)
                        }))
                    }
                }
                var _c = v(Pc(Oc().mark((function t() {
                    var e;
                    return Oc().wrap((function(t) {
                        for (;;) switch (t.prev = t.next) {
                            case 0:
                                return t.next = 2, (0, Ec.u)();
                            case 2:
                                if ("000000" !== (e = t.sent).code) {
                                    t.next = 5;
                                    break
                                }
                                return t.abrupt("return", e.data);
                            case 5:
                                return t.abrupt("return", {});
                            case 6:
                            case "end":
                                return t.stop()
                        }
                    }), t)
                }))));
                const kc = (0, o.generateUseState)("userTradeStatus", _c, []);
                var Nc = r(364);

                function Ac(t) {
                    return Ac = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, Ac(t)
                }

                function Tc() {
                    Tc = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == Ac(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function Gc(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }

                function Ic(t) {
                    return function() {
                        var e = this,
                            r = arguments;
                        return new Promise((function(n, o) {
                            var i = t.apply(e, r);

                            function a(t) {
                                Gc(i, n, o, a, c, "next", t)
                            }

                            function c(t) {
                                Gc(i, n, o, a, c, "throw", t)
                            }
                            a(void 0)
                        }))
                    }
                }
                var Cc = o.cachePromiseStore.checkCacheBeforeRequest("useUserDepositInfo", v(Ic(Tc().mark((function t() {
                    var e;
                    return Tc().wrap((function(t) {
                        for (;;) switch (t.prev = t.next) {
                            case 0:
                                return t.next = 2, (0, Nc.R)();
                            case 2:
                                if ("000000" !== (e = t.sent).code) {
                                    t.next = 5;
                                    break
                                }
                                return t.abrupt("return", e.data);
                            case 5:
                                return t.abrupt("return", {});
                            case 6:
                            case "end":
                                return t.stop()
                        }
                    }), t)
                })))));
                const Fc = function() {
                    return (0, o.useAsync)(Ic(Tc().mark((function t() {
                        return Tc().wrap((function(t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    return t.abrupt("return", Cc());
                                case 1:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    }))), [])
                };

                function Dc(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
                    return n
                }
                const Uc = function() {
                    return (t = (0, o.useCacheState)("userStatus", {
                        isLogin: !1,
                        isKyc: !1,
                        isDeposit: !1,
                        isTrade: !1
                    }), e = 1, function(t) {
                        if (Array.isArray(t)) return t
                    }(t) || function(t, e) {
                        var r = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                        if (null != r) {
                            var n, o, i, a, c = [],
                                u = !0,
                                l = !1;
                            try {
                                if (i = (r = r.call(t)).next, 0 === e) {
                                    if (Object(r) !== r) return;
                                    u = !1
                                } else
                                    for (; !(u = (n = i.call(r)).done) && (c.push(n.value), c.length !== e); u = !0);
                            } catch (t) {
                                l = !0, o = t
                            } finally {
                                try {
                                    if (!u && null != r.return && (a = r.return(), Object(a) !== a)) return
                                } finally {
                                    if (l) throw o
                                }
                            }
                            return c
                        }
                    }(t, e) || function(t, e) {
                        if (t) {
                            if ("string" == typeof t) return Dc(t, e);
                            var r = Object.prototype.toString.call(t).slice(8, -1);
                            return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? Dc(t, e) : void 0
                        }
                    }(t, e) || function() {
                        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                    }())[0];
                    var t, e
                };

                function Mc(t) {
                    return Mc = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, Mc(t)
                }

                function Rc() {
                    Rc = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == Mc(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function Bc(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }

                function Yc(t) {
                    return function() {
                        var e = this,
                            r = arguments;
                        return new Promise((function(n, o) {
                            var i = t.apply(e, r);

                            function a(t) {
                                Bc(i, n, o, a, c, "next", t)
                            }

                            function c(t) {
                                Bc(i, n, o, a, c, "throw", t)
                            }
                            a(void 0)
                        }))
                    }
                }
                var qc = function() {
                        var t = Yc(Rc().mark((function t() {
                            var e;
                            return Rc().wrap((function(t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        return t.next = 2, (0, Lr.hV)();
                                    case 2:
                                        return e = t.sent, t.abrupt("return", (null == e ? void 0 : e.configValue) || "BTC");
                                    case 4:
                                    case "end":
                                        return t.stop()
                                }
                            }), t)
                        })));
                        return function() {
                            return t.apply(this, arguments)
                        }
                    }(),
                    Kc = (0, o.generateUseState)("accountUserQuoteAssetGet", v(qc));
                const Vc = function() {
                    var t = Kc(),
                        e = t.value,
                        r = t.update,
                        n = (0, i.useCallback)(function() {
                            var t = Yc(Rc().mark((function t(e) {
                                return Rc().wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            return t.next = 2, (0, Lr.MF)({
                                                configValue: e
                                            });
                                        case 2:
                                            r();
                                        case 3:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t)
                            })));
                            return function(e) {
                                return t.apply(this, arguments)
                            }
                        }(), [r]);
                    return [e, n]
                };

                function zc(t, e) {
                    return function(t) {
                        if (Array.isArray(t)) return t
                    }(t) || function(t, e) {
                        var r = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                        if (null != r) {
                            var n, o, i, a, c = [],
                                u = !0,
                                l = !1;
                            try {
                                if (i = (r = r.call(t)).next, 0 === e) {
                                    if (Object(r) !== r) return;
                                    u = !1
                                } else
                                    for (; !(u = (n = i.call(r)).done) && (c.push(n.value), c.length !== e); u = !0);
                            } catch (t) {
                                l = !0, o = t
                            } finally {
                                try {
                                    if (!u && null != r.return && (a = r.return(), Object(a) !== a)) return
                                } finally {
                                    if (l) throw o
                                }
                            }
                            return c
                        }
                    }(t, e) || function(t, e) {
                        if (t) {
                            if ("string" == typeof t) return Wc(t, e);
                            var r = Object.prototype.toString.call(t).slice(8, -1);
                            return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? Wc(t, e) : void 0
                        }
                    }(t, e) || function() {
                        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                    }()
                }

                function Wc(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
                    return n
                }
                const Hc = function() {
                    var t = zc((0, i.useState)([sr.T7.BUY_CRYPTO, sr.T7.FIAT_DEPOSIT, sr.T7.P2P_TRADING]), 2),
                        e = t[0],
                        r = t[1];
                    (0, i.useEffect)((function() {
                        Promise.all([(0, b.get)("/bapi/fiat/v3/private/fiatpayment/buy/get-fiat-list?skipP2P=true"), (0, b.get)("/bapi/fiat/v1/private/fiatpayment/deposit/get-fiat-list?skipP2P=true"), (0, b.post)("/bapi/composite/v1/friendly/market/getDefaultFiatCurrency")]).then((function(t) {
                            var e, n = zc(t, 3),
                                i = n[0],
                                a = n[1],
                                c = n[2],
                                u = (o.isClient ? o.cookies.read(Qe) : null) || (null === (e = c.data) || void 0 === e ? void 0 : e.defaultFiatCurrency);
                            r((function(t) {
                                return t.filter((function(t) {
                                    var e, r, n, o;
                                    switch (t) {
                                        case sr.T7.BUY_CRYPTO:
                                            return !(null != i && null !== (e = i.data) && void 0 !== e && null !== (r = e.fiatList) && void 0 !== r && r.some((function(t) {
                                                return t.assetCode === u
                                            })));
                                        case sr.T7.FIAT_DEPOSIT:
                                            return !(null != a && null !== (n = a.data) && void 0 !== n && null !== (o = n.fiatList) && void 0 !== o && o.some((function(t) {
                                                return t.assetCode === u
                                            })));
                                        default:
                                            return !0
                                    }
                                }))
                            }))
                        }))
                    }), []);
                    var n = re().value;
                    return (0, i.useEffect)((function() {
                        null == n || null != n && n.includes("tradeC2C") || r((function(t) {
                            return t.filter((function(t) {
                                return t !== sr.T7.P2P_TRADING
                            }))
                        }))
                    }), [n]), e
                };

                function $c(t) {
                    return $c = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, $c(t)
                }

                function Zc() {
                    Zc = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == $c(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function Qc(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }
                var Jc = function() {
                    var t, e = (t = Zc().mark((function t() {
                        var e;
                        return Zc().wrap((function(t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    return t.prev = 0, t.next = 3, (0, b.post)("/bapi/compliance/v1/private/compliance/user/getEntityTag");
                                case 3:
                                    if (!(e = t.sent).success) {
                                        t.next = 6;
                                        break
                                    }
                                    return t.abrupt("return", e.data);
                                case 6:
                                    t.next = 11;
                                    break;
                                case 8:
                                    return t.prev = 8, t.t0 = t.catch(0), t.abrupt("return", null);
                                case 11:
                                case "end":
                                    return t.stop()
                            }
                        }), t, null, [
                            [0, 8]
                        ])
                    })), function() {
                        var e = this,
                            r = arguments;
                        return new Promise((function(n, o) {
                            var i = t.apply(e, r);

                            function a(t) {
                                Qc(i, n, o, a, c, "next", t)
                            }

                            function c(t) {
                                Qc(i, n, o, a, c, "throw", t)
                            }
                            a(void 0)
                        }))
                    });
                    return function() {
                        return e.apply(this, arguments)
                    }
                }();
                const Xc = (0, o.generateUseState)("userEntityTag", v(Jc), []);

                function tu(t) {
                    return tu = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, tu(t)
                }

                function eu(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
                    return n
                }

                function ru() {
                    ru = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == tu(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function nu(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }

                function ou(t) {
                    return function() {
                        var e = this,
                            r = arguments;
                        return new Promise((function(n, o) {
                            var i = t.apply(e, r);

                            function a(t) {
                                nu(i, n, o, a, c, "next", t)
                            }

                            function c(t) {
                                nu(i, n, o, a, c, "throw", t)
                            }
                            a(void 0)
                        }))
                    }
                }
                var iu = o.cachePromiseStore.checkCacheBeforeRequest("/bapi/fiat/v1/private/fiatpayment/payment-currency/get-fiat-list", v(ou(ru().mark((function t() {
                        var e, r, n;
                        return ru().wrap((function(t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    return t.prev = 0, t.next = 3, (0, b.get)("/bapi/fiat/v1/private/fiatpayment/payment-currency/get-fiat-list");
                                case 3:
                                    if (e = t.sent, r = e.success, n = e.data, !r) {
                                        t.next = 8;
                                        break
                                    }
                                    return t.abrupt("return", n.fiatList || []);
                                case 8:
                                    t.next = 12;
                                    break;
                                case 10:
                                    t.prev = 10, t.t0 = t.catch(0);
                                case 12:
                                    return t.abrupt("return", []);
                                case 13:
                                case "end":
                                    return t.stop()
                            }
                        }), t, null, [
                            [0, 10]
                        ])
                    }))))),
                    au = v(ou(ru().mark((function t() {
                        var e;
                        return ru().wrap((function(t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2, (0, b.post)("/bapi/apex/v1/friendly/apex/market/getDefaultFiatCurrency");
                                case 2:
                                    if (!(e = t.sent).success) {
                                        t.next = 5;
                                        break
                                    }
                                    return t.abrupt("return", e.data.defaultFiatCurrency);
                                case 5:
                                    return t.abrupt("return", "");
                                case 6:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    }))));
                (0, o.runAfterDocumentReady)((function() {
                    au().then((function(t) {
                        t && o.cachePromiseStore.setState("userFiatPayment", t)
                    }))
                })), (0, o.initStoreEmptyKeyValue)("userPayFiat", "");
                var cu = (0, o.generateUseState)("useUserPayFiatListCurrency", iu);
                const uu = function() {
                    var t, e, r = (t = (0, o.useCacheState)("userFiatPayment"), e = 2, function(t) {
                            if (Array.isArray(t)) return t
                        }(t) || function(t, e) {
                            var r = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                            if (null != r) {
                                var n, o, i, a, c = [],
                                    u = !0,
                                    l = !1;
                                try {
                                    if (i = (r = r.call(t)).next, 0 === e) {
                                        if (Object(r) !== r) return;
                                        u = !1
                                    } else
                                        for (; !(u = (n = i.call(r)).done) && (c.push(n.value), c.length !== e); u = !0);
                                } catch (t) {
                                    l = !0, o = t
                                } finally {
                                    try {
                                        if (!u && null != r.return && (a = r.return(), Object(a) !== a)) return
                                    } finally {
                                        if (l) throw o
                                    }
                                }
                                return c
                            }
                        }(t, e) || function(t, e) {
                            if (t) {
                                if ("string" == typeof t) return eu(t, e);
                                var r = Object.prototype.toString.call(t).slice(8, -1);
                                return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? eu(t, e) : void 0
                            }
                        }(t, e) || function() {
                            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                        }()),
                        n = r[0],
                        a = r[1],
                        c = cu(),
                        u = c.loading,
                        l = c.value,
                        s = (0, i.useCallback)(function() {
                            var t = ou(ru().mark((function t(e) {
                                return ru().wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            return t.prev = 0, t.next = 3, (0, b.post)("/bapi/apex/v1/private/apex/market/saveDefaultFiatCurrency", {
                                                currency: e
                                            });
                                        case 3:
                                            a(e), t.next = 8;
                                            break;
                                        case 6:
                                            t.prev = 6, t.t0 = t.catch(0);
                                        case 8:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, null, [
                                    [0, 6]
                                ])
                            })));
                            return function(e) {
                                return t.apply(this, arguments)
                            }
                        }(), [a]);
                    return {
                        userFiatPayment: n,
                        setUserFiatPayment: s,
                        fiatPaymentCurrencyList: l,
                        loadingCurrencyList: u
                    }
                };
                var lu = r(1255);

                function su(t) {
                    return su = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, su(t)
                }

                function fu(t) {
                    return function(t) {
                        if (Array.isArray(t)) return hu(t)
                    }(t) || function(t) {
                        if ("undefined" != typeof Symbol && null != t[Symbol.iterator] || null != t["@@iterator"]) return Array.from(t)
                    }(t) || function(t, e) {
                        if (t) {
                            if ("string" == typeof t) return hu(t, e);
                            var r = Object.prototype.toString.call(t).slice(8, -1);
                            return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? hu(t, e) : void 0
                        }
                    }(t) || function() {
                        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                    }()
                }

                function hu(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
                    return n
                }

                function pu() {
                    pu = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == su(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function vu(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(t);
                        e && (n = n.filter((function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable
                        }))), r.push.apply(r, n)
                    }
                    return r
                }

                function yu(t) {
                    for (var e = 1; e < arguments.length; e++) {
                        var r = null != arguments[e] ? arguments[e] : {};
                        e % 2 ? vu(Object(r), !0).forEach((function(e) {
                            du(t, e, r[e])
                        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : vu(Object(r)).forEach((function(e) {
                            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e))
                        }))
                    }
                    return t
                }

                function du(t, e, r) {
                    return (e = function(t) {
                        var e = function(t, e) {
                            if ("object" !== su(t) || null === t) return t;
                            var r = t[Symbol.toPrimitive];
                            if (void 0 !== r) {
                                var n = r.call(t, "string");
                                if ("object" !== su(n)) return n;
                                throw new TypeError("@@toPrimitive must return a primitive value.")
                            }
                            return String(t)
                        }(t);
                        return "symbol" === su(e) ? e : String(e)
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t
                }

                function mu(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }

                function gu(t) {
                    return function() {
                        var e = this,
                            r = arguments;
                        return new Promise((function(n, o) {
                            var i = t.apply(e, r);

                            function a(t) {
                                mu(i, n, o, a, c, "next", t)
                            }

                            function c(t) {
                                mu(i, n, o, a, c, "throw", t)
                            }
                            a(void 0)
                        }))
                    }
                }
                var wu = v(function() {
                        var t = gu(pu().mark((function t(e) {
                            var r, n, o, i;
                            return pu().wrap((function(t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        if (e) {
                                            t.next = 2;
                                            break
                                        }
                                        return t.abrupt("return", null);
                                    case 2:
                                        return t.next = 4, Yt({
                                            quoteAsset: e,
                                            needBalanceDetail: !0,
                                            needEuFuture: !0
                                        });
                                    case 4:
                                        return r = t.sent, n = 0, r.forEach((function(t) {
                                            var e = t.balance,
                                                r = Number(e);
                                            isNaN(r) && (r = 0), n = (0, lu.PD)(n, r).toNumber()
                                        })), (o = r.find((function(t) {
                                            return "MARGIN" === t.accountType
                                        }))) && r.push(yu(yu({}, o), {}, {
                                            accountType: "PORTFOLIO_MARGIN"
                                        })), i = r.filter((function(t) {
                                            return t.activate
                                        })), t.abrupt("return", {
                                            totalAssetBalance: n,
                                            walletBalanceData: r,
                                            walletBalanceDataActive: i,
                                            walletBalanceMap: i.reduce((function(t, e) {
                                                return t[e.accountType] = e, t
                                            }), {})
                                        });
                                    case 11:
                                    case "end":
                                        return t.stop()
                                }
                            }), t)
                        })));
                        return function(e) {
                            return t.apply(this, arguments)
                        }
                    }()),
                    bu = function(t, e) {
                        return e.subscribe((function(e) {
                            var r = o.cachePromiseStore.getCache("useUserBalance");
                            if (r) {
                                var n = yu({}, r.walletBalanceMap[t]);
                                n.assetBalances = fu(n.assetBalances), e.balances.forEach((function(t) {
                                    var e = n.assetBalances.find((function(e) {
                                        return e.asset === t.asset
                                    }));
                                    e ? Object.assign(e, t) : n.assetBalances.push({
                                        assetName: "",
                                        freeze: "",
                                        transferBtc: "",
                                        withdrawing: "",
                                        logoUrl: "",
                                        free: "".concat(t.free),
                                        locked: "".concat(t.locked),
                                        asset: t.asset
                                    })
                                }));
                                var i = r.totalAssetBalance,
                                    a = r.walletBalanceData,
                                    c = r.walletBalanceDataActive,
                                    u = r.walletBalanceMap,
                                    l = a.findIndex((function(e) {
                                        return e.accountType === t
                                    }));
                                a[l] = n;
                                var s = c.findIndex((function(e) {
                                    return e.accountType === t
                                }));
                                c[s] = n, u[t] = n, o.cachePromiseStore.setState("useUserBalance", {
                                    totalAssetBalance: i,
                                    walletBalanceData: fu(a),
                                    walletBalanceDataActive: fu(c),
                                    walletBalanceMap: yu({}, u)
                                })
                            }
                        }))
                    },
                    xu = (0, o.generateDataRegister)(gu(pu().mark((function t() {
                        var e;
                        return pu().wrap((function(t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2, (0, o.getCommonWidgetWs)({
                                        type: "sdk",
                                        name: "tradeSDK"
                                    });
                                case 2:
                                    return e = t.sent, t.abrupt("return", bu("MAIN", e.getUserAssetsStream("SPOT")));
                                case 4:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    })))),
                    Lu = (0, o.generateDataRegister)(gu(pu().mark((function t() {
                        var e, r, n;
                        return pu().wrap((function(t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2, (0, o.getCommonWidgetWs)({
                                        type: "withStream"
                                    });
                                case 2:
                                    return e = t.sent, r = function(t) {
                                        return {
                                            balances: t.b.map((function(t) {
                                                return {
                                                    asset: t.a,
                                                    free: t.f
                                                }
                                            }))
                                        }
                                    }, e({
                                        channel: "FUNDING_BALANCE",
                                        responseName: "fundingBalanceMsg",
                                        version: "v2"
                                    })((function(t) {
                                        if (t) {
                                            var e = r(t);
                                            n && n(e)
                                        }
                                    })), t.abrupt("return", bu("CARD", {
                                        subscribe: function(t) {
                                            return n = t,
                                                function() {
                                                    n = null
                                                }
                                        }
                                    }));
                                case 6:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    })))),
                    Eu = function() {
                        var t = gu(pu().mark((function t(e) {
                            return pu().wrap((function(t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        return t.next = 2, Promise.all(e.map(function() {
                                            var t = gu(pu().mark((function t(e) {
                                                return pu().wrap((function(t) {
                                                    for (;;) switch (t.prev = t.next) {
                                                        case 0:
                                                            if ("spot" !== e) {
                                                                t.next = 4;
                                                                break
                                                            }
                                                            return t.abrupt("return", xu());
                                                        case 4:
                                                            if ("funding" !== e) {
                                                                t.next = 6;
                                                                break
                                                            }
                                                            return t.abrupt("return", Lu());
                                                        case 6:
                                                            return t.abrupt("return", (function() {
                                                                console.log("unSubscribe ".concat(e, " failed, because of unknown wallet type"))
                                                            }));
                                                        case 7:
                                                        case "end":
                                                            return t.stop()
                                                    }
                                                }), t)
                                            })));
                                            return function(e) {
                                                return t.apply(this, arguments)
                                            }
                                        }()));
                                    case 2:
                                        return t.abrupt("return", t.sent);
                                    case 3:
                                    case "end":
                                        return t.stop()
                                }
                            }), t)
                        })));
                        return function(e) {
                            return t.apply(this, arguments)
                        }
                    }(),
                    Su = (0, o.generateUseState)("useUserBalance", wu, ["accountUserQuoteAssetGet"]),
                    Ou = function() {
                        return Vc(), Su()
                    };
                Ou.triggerUpdateState = Su.triggerUpdateState;
                const ju = Ou;

                function Pu(t) {
                    return Pu = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, Pu(t)
                }

                function _u() {
                    _u = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == Pu(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function ku(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }

                function Nu(t) {
                    return function() {
                        var e = this,
                            r = arguments;
                        return new Promise((function(n, o) {
                            var i = t.apply(e, r);

                            function a(t) {
                                ku(i, n, o, a, c, "next", t)
                            }

                            function c(t) {
                                ku(i, n, o, a, c, "throw", t)
                            }
                            a(void 0)
                        }))
                    }
                }
                var Au = v(Nu(_u().mark((function t() {
                    var e;
                    return _u().wrap((function(t) {
                        for (;;) switch (t.prev = t.next) {
                            case 0:
                                return t.next = 2, (0, b.post)("/bapi/kyc/v2/private/certificate/onlyAccount/baseDetail/kycStatus");
                            case 2:
                                return e = t.sent, t.abrupt("return", e.data);
                            case 4:
                            case "end":
                                return t.stop()
                        }
                    }), t)
                }))));
                const Tu = (0, o.generateUseState)("useUserKycStatusInfo", Au);
                var Gu = r(9527),
                    Iu = r.n(Gu),
                    Cu = r(1258);

                function Fu(t) {
                    return Fu = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, Fu(t)
                }

                function Du() {
                    Du = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == Fu(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function Uu(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }

                function Mu(t) {
                    return function() {
                        var e = this,
                            r = arguments;
                        return new Promise((function(n, o) {
                            var i = t.apply(e, r);

                            function a(t) {
                                Uu(i, n, o, a, c, "next", t)
                            }

                            function c(t) {
                                Uu(i, n, o, a, c, "throw", t)
                            }
                            a(void 0)
                        }))
                    }
                }

                function Ru(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(t);
                        e && (n = n.filter((function(e) {
                            return Object.getOwnPropertyDescriptor(t, e).enumerable
                        }))), r.push.apply(r, n)
                    }
                    return r
                }

                function Bu(t, e, r) {
                    return (e = function(t) {
                        var e = function(t, e) {
                            if ("object" !== Fu(t) || null === t) return t;
                            var r = t[Symbol.toPrimitive];
                            if (void 0 !== r) {
                                var n = r.call(t, "string");
                                if ("object" !== Fu(n)) return n;
                                throw new TypeError("@@toPrimitive must return a primitive value.")
                            }
                            return String(t)
                        }(t);
                        return "symbol" === Fu(e) ? e : String(e)
                    }(e)) in t ? Object.defineProperty(t, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : t[e] = r, t
                }

                function Yu(t, e) {
                    if (t) {
                        if ("string" == typeof t) return qu(t, e);
                        var r = Object.prototype.toString.call(t).slice(8, -1);
                        return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? qu(t, e) : void 0
                    }
                }

                function qu(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
                    return n
                }
                var Ku = function(t, e) {
                        return e.subscribe((function(e) {
                            var r = o.cachePromiseStore.matchStateByKey("useUserWalletAssetBalanceByCoin");
                            Object.entries(r).forEach((function(r) {
                                var n, i, a = (i = 2, function(t) {
                                        if (Array.isArray(t)) return t
                                    }(n = r) || function(t, e) {
                                        var r = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                                        if (null != r) {
                                            var n, o, i, a, c = [],
                                                u = !0,
                                                l = !1;
                                            try {
                                                if (i = (r = r.call(t)).next, 0 === e) {
                                                    if (Object(r) !== r) return;
                                                    u = !1
                                                } else
                                                    for (; !(u = (n = i.call(r)).done) && (c.push(n.value), c.length !== e); u = !0);
                                            } catch (t) {
                                                l = !0, o = t
                                            } finally {
                                                try {
                                                    if (!u && null != r.return && (a = r.return(), Object(a) !== a)) return
                                                } finally {
                                                    if (l) throw o
                                                }
                                            }
                                            return c
                                        }
                                    }(n, i) || Yu(n, i) || function() {
                                        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                                    }()),
                                    c = a[0],
                                    u = a[1];
                                u && (e.balances.forEach((function(e) {
                                    var r = u.findIndex((function(t) {
                                        return t.asset === e.asset
                                    }));
                                    if (-1 !== r) u[r] = function(t) {
                                        for (var e = 1; e < arguments.length; e++) {
                                            var r = null != arguments[e] ? arguments[e] : {};
                                            e % 2 ? Ru(Object(r), !0).forEach((function(e) {
                                                Bu(t, e, r[e])
                                            })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : Ru(Object(r)).forEach((function(e) {
                                                Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e))
                                            }))
                                        }
                                        return t
                                    }({}, u[r]), u[r][t] = Object.assign({}, u[r][t], e);
                                    else {
                                        var n = {
                                            asset: e.asset,
                                            earn: null,
                                            funding: null,
                                            spot: null
                                        };
                                        n[t] = e, u.push(n)
                                    }
                                })), o.cachePromiseStore.setState(c, function(t) {
                                    return function(t) {
                                        if (Array.isArray(t)) return qu(t)
                                    }(t) || function(t) {
                                        if ("undefined" != typeof Symbol && null != t[Symbol.iterator] || null != t["@@iterator"]) return Array.from(t)
                                    }(t) || Yu(t) || function() {
                                        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                                    }()
                                }(u)))
                            }))
                        }))
                    },
                    Vu = (0, o.generateDataRegister)(Mu(Du().mark((function t() {
                        var e;
                        return Du().wrap((function(t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2, (0, o.getCommonWidgetWs)({
                                        type: "sdk",
                                        name: "tradeSDK"
                                    });
                                case 2:
                                    return e = t.sent, t.abrupt("return", Ku("spot", e.getUserAssetsStream("SPOT")));
                                case 4:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    })))),
                    zu = (0, o.generateDataRegister)(Mu(Du().mark((function t() {
                        var e, r, n;
                        return Du().wrap((function(t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2, (0, o.getCommonWidgetWs)({
                                        type: "withStream"
                                    });
                                case 2:
                                    return e = t.sent, r = function(t) {
                                        return {
                                            balances: t.b.map((function(t) {
                                                return {
                                                    asset: t.a,
                                                    free: t.f
                                                }
                                            }))
                                        }
                                    }, e({
                                        channel: "FUNDING_BALANCE",
                                        responseName: "fundingBalanceMsg",
                                        version: "v2"
                                    })((function(t) {
                                        if (t) {
                                            var e = r(t);
                                            n && n(e)
                                        }
                                    })), t.abrupt("return", Ku("funding", {
                                        subscribe: function(t) {
                                            return n = t,
                                                function() {
                                                    n = null
                                                }
                                        }
                                    }));
                                case 6:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    })))),
                    Wu = function() {
                        var t = Mu(Du().mark((function t(e) {
                            return Du().wrap((function(t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        return t.next = 2, Promise.all(e.map(function() {
                                            var t = Mu(Du().mark((function t(e) {
                                                return Du().wrap((function(t) {
                                                    for (;;) switch (t.prev = t.next) {
                                                        case 0:
                                                            if ("spot" !== e) {
                                                                t.next = 4;
                                                                break
                                                            }
                                                            return t.abrupt("return", Vu());
                                                        case 4:
                                                            if ("funding" !== e) {
                                                                t.next = 6;
                                                                break
                                                            }
                                                            return t.abrupt("return", zu());
                                                        case 6:
                                                            return t.abrupt("return", (function() {
                                                                console.log("unSubscribe ".concat(e, " failed, because of unknown wallet type"))
                                                            }));
                                                        case 7:
                                                        case "end":
                                                            return t.stop()
                                                    }
                                                }), t)
                                            })));
                                            return function(e) {
                                                return t.apply(this, arguments)
                                            }
                                        }()));
                                    case 2:
                                        return t.abrupt("return", t.sent);
                                    case 3:
                                    case "end":
                                        return t.stop()
                                }
                            }), t)
                        })));
                        return function(e) {
                            return t.apply(this, arguments)
                        }
                    }(),
                    Hu = function() {
                        var t = Mu(Du().mark((function t(e, r) {
                            var n, o, i;
                            return Du().wrap((function(t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        if (0 !== e.length && r) {
                                            t.next = 2;
                                            break
                                        }
                                        return t.abrupt("return", null);
                                    case 2:
                                        return n = e.split(","), t.next = 5, (0, b.post)("/bapi/asset/v3/private/asset-service/asset/get-wallet-asset", {
                                            quoteAsset: r,
                                            includeWallets: n
                                        });
                                    case 5:
                                        return o = t.sent, i = o.data, t.abrupt("return", i);
                                    case 8:
                                    case "end":
                                        return t.stop()
                                }
                            }), t)
                        })));
                        return function(e, r) {
                            return t.apply(this, arguments)
                        }
                    }(),
                    $u = (0, o.generateUseStateByParams)("useUserWalletAssetBalanceByCoin", Hu, ["accountUserQuoteAssetGet"]),
                    Zu = function(t) {
                        return Vc(), $u(t)
                    };
                Zu.triggerUpdateState = $u.triggerUpdateState;
                const Qu = Zu;

                function Ju(t) {
                    return Ju = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, Ju(t)
                }

                function Xu(t, e) {
                    return function(t) {
                        if (Array.isArray(t)) return t
                    }(t) || function(t, e) {
                        var r = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                        if (null != r) {
                            var n, o, i, a, c = [],
                                u = !0,
                                l = !1;
                            try {
                                if (i = (r = r.call(t)).next, 0 === e) {
                                    if (Object(r) !== r) return;
                                    u = !1
                                } else
                                    for (; !(u = (n = i.call(r)).done) && (c.push(n.value), c.length !== e); u = !0);
                            } catch (t) {
                                l = !0, o = t
                            } finally {
                                try {
                                    if (!u && null != r.return && (a = r.return(), Object(a) !== a)) return
                                } finally {
                                    if (l) throw o
                                }
                            }
                            return c
                        }
                    }(t, e) || tl(t, e) || function() {
                        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                    }()
                }

                function tl(t, e) {
                    if (t) {
                        if ("string" == typeof t) return el(t, e);
                        var r = Object.prototype.toString.call(t).slice(8, -1);
                        return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? el(t, e) : void 0
                    }
                }

                function el(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
                    return n
                }

                function rl() {
                    rl = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == Ju(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function nl(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }

                function ol(t) {
                    return function() {
                        var e = this,
                            r = arguments;
                        return new Promise((function(n, o) {
                            var i = t.apply(e, r);

                            function a(t) {
                                nl(i, n, o, a, c, "next", t)
                            }

                            function c(t) {
                                nl(i, n, o, a, c, "throw", t)
                            }
                            a(void 0)
                        }))
                    }
                }
                var il = function() {
                        var t = ol(rl().mark((function t(e) {
                            var r;
                            return rl().wrap((function(t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        return t.next = 2, (0, b.post)("/bapi/asset/v1/private/asset-service/wallet/collect-transfer", e);
                                    case 2:
                                        return r = t.sent, t.abrupt("return", r);
                                    case 4:
                                    case "end":
                                        return t.stop()
                                }
                            }), t)
                        })));
                        return function(e) {
                            return t.apply(this, arguments)
                        }
                    }(),
                    al = {
                        spot: "MAIN",
                        funding: "CARD",
                        earn: "EARN_FLEXIBLE_SAVING"
                    },
                    cl = {
                        spot: "MAIN",
                        funding: "CARD",
                        earn: "SAVING"
                    },
                    ul = function(t, e, r) {
                        return Cu.C && localStorage.getItem("combine-trade-select-".concat(t, "-").concat(e)) ? "true" === localStorage.getItem("combine-trade-select-".concat(t, "-").concat(e)) : r
                    },
                    ll = function(t) {
                        return [{
                            type: "spot",
                            selected: !0,
                            required: !0,
                            priority: 0,
                            businessKeys: ["overview-wallet-name-MAIN"]
                        }, {
                            type: "funding",
                            selected: ul(t, "funding", !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1]),
                            required: !1,
                            businessKeys: ["overview-wallet-name-CARD"],
                            priority: 1
                        }]
                    },
                    sl = function() {
                        var t = ol(rl().mark((function t() {
                            return rl().wrap((function(t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        return t.abrupt("return", [{
                                            biz: "spotTrade",
                                            wallet: [].concat((e = ll("spotTrade", !0), function(t) {
                                                if (Array.isArray(t)) return el(t)
                                            }(e) || function(t) {
                                                if ("undefined" != typeof Symbol && null != t[Symbol.iterator] || null != t["@@iterator"]) return Array.from(t)
                                            }(e) || tl(e) || function() {
                                                throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                                            }()), [{
                                                type: "earn",
                                                selected: ul("spotTrade", "earn", !1),
                                                required: !1,
                                                businessKeys: ["fixedSupplyEarn"],
                                                priority: 2
                                            }])
                                        }, {
                                            biz: "copyTrading",
                                            wallet: ll("copyTrading")
                                        }, {
                                            biz: "withdraw",
                                            wallet: [{
                                                type: "spot",
                                                selected: ul("withdraw", "spot", !0),
                                                required: !1,
                                                priority: 0,
                                                businessKeys: ["overview-wallet-name-MAIN"]
                                            }, {
                                                type: "funding",
                                                selected: ul("withdraw", "funding", !0),
                                                required: !1,
                                                businessKeys: ["overview-wallet-name-CARD"],
                                                priority: 1
                                            }, {
                                                type: "earn",
                                                selected: ul("withdraw", "earn", !1),
                                                required: !1,
                                                businessKeys: ["fixedSupplyEarn"],
                                                priority: 2
                                            }]
                                        }, {
                                            biz: "withdraw-pay",
                                            wallet: [{
                                                type: "spot",
                                                selected: ul("withdraw-pay", "spot", !0),
                                                required: !1,
                                                priority: 0,
                                                businessKeys: ["overview-wallet-name-MAIN"]
                                            }, {
                                                type: "funding",
                                                selected: ul("withdraw-pay", "funding", !0),
                                                required: !1,
                                                businessKeys: ["overview-wallet-name-CARD"],
                                                priority: 1
                                            }]
                                        }, {
                                            biz: "tradingBots",
                                            wallet: ll("tradingBots")
                                        }, {
                                            biz: "convert",
                                            wallet: [{
                                                type: "spot",
                                                selected: ul("convert", "spot", !0),
                                                required: !0,
                                                priority: 0,
                                                businessKeys: ["overview-wallet-name-MAIN"]
                                            }, {
                                                type: "funding",
                                                selected: ul("convert", "funding", !0),
                                                required: !1,
                                                businessKeys: ["overview-wallet-name-CARD"],
                                                priority: 1
                                            }, {
                                                type: "earn",
                                                selected: ul("convert", "earn", !1),
                                                required: !1,
                                                businessKeys: ["fixedSupplyEarn"],
                                                priority: 2
                                            }]
                                        }, {
                                            biz: "convert-recurring-edit",
                                            wallet: [{
                                                type: "spot",
                                                selected: ul("convert-recurring-edit", "spot", !0),
                                                required: !0,
                                                priority: 0,
                                                businessKeys: ["overview-wallet-name-MAIN"]
                                            }, {
                                                type: "funding",
                                                selected: ul("convert-recurring-edit", "funding", !0),
                                                required: !1,
                                                businessKeys: ["overview-wallet-name-CARD"],
                                                priority: 1
                                            }, {
                                                type: "earn",
                                                selected: ul("convert-recurring-edit", "earn", !1),
                                                required: !1,
                                                businessKeys: ["fixedSupplyEarn"],
                                                priority: 2
                                            }]
                                        }, {
                                            biz: "Earn",
                                            wallet: ll("Earn", !0)
                                        }, {
                                            biz: "Earn-flexible",
                                            wallet: [{
                                                type: "spot",
                                                selected: ul("Earn-flexible", "spot", !1),
                                                required: !1,
                                                priority: 0,
                                                businessKeys: ["overview-wallet-name-MAIN"]
                                            }, {
                                                type: "funding",
                                                selected: ul("Earn-flexible", "funding", !1),
                                                required: !1,
                                                businessKeys: ["overview-wallet-name-CARD"],
                                                priority: 1
                                            }, {
                                                type: "earn",
                                                selected: !0,
                                                required: !0,
                                                businessKeys: ["fixedSupplyEarn"],
                                                priority: 2
                                            }]
                                        }, {
                                            biz: "alpha",
                                            wallet: [{
                                                type: "spot",
                                                selected: ul("alpha", "spot", !0),
                                                required: !1,
                                                priority: 0,
                                                businessKeys: ["overview-wallet-name-MAIN"]
                                            }, {
                                                type: "funding",
                                                selected: !0,
                                                required: !0,
                                                businessKeys: ["overview-wallet-name-CARD"],
                                                priority: 1
                                            }]
                                        }]);
                                    case 1:
                                    case "end":
                                        return t.stop()
                                }
                                var e
                            }), t)
                        })));
                        return function() {
                            return t.apply(this, arguments)
                        }
                    }(),
                    fl = (0, o.generateUseState)("useWalletConfig", (function() {
                        return sl()
                    })),
                    hl = function() {
                        var t = ol(rl().mark((function t(e, r, n) {
                            var o;
                            return rl().wrap((function(t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        return t.abrupt("return", null == r || null === (o = r.find((function(t) {
                                            return t.biz === e
                                        }))) || void 0 === o ? void 0 : o.wallet.filter((function(t) {
                                            return null == t || !t.businessKeys || te(n, null == t ? void 0 : t.businessKeys)
                                        })));
                                    case 1:
                                    case "end":
                                        return t.stop()
                                }
                            }), t)
                        })));
                        return function(e, r, n) {
                            return t.apply(this, arguments)
                        }
                    }(),
                    pl = (0, o.generateUseStateByParams)("useBizWalletConfig", hl, ["useWalletConfig", "businessKeys"]);
                Iu().config({
                    EXPONENTIAL_AT: 1e9
                });
                var vl = function(t, e, r, n) {
                        var o = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 8,
                            i = new(Iu())(t);
                        if (i.isNaN()) return {
                            success: !1,
                            message: "invalid value",
                            resource: "FE",
                            value: t,
                            maxAvaliable: r
                        };
                        if (i.isGreaterThan(r)) return {
                            success: !1,
                            message: "over available",
                            resource: "FE",
                            value: t,
                            maxAvaliable: r
                        };
                        var a = new(Iu())(isNaN(+n[0].balance) ? 0 : +n[0].balance);
                        if (a.isGreaterThanOrEqualTo(i)) return {
                            success: !0
                        };
                        for (var c, u, l = al[n[0].walletType], s = i.minus(a), f = [], h = 1; h < n.length;) {
                            var p = new(Iu())((c = n[h].balance, void 0, u = Number(c), isNaN(u) ? 0 : u));
                            if (p.isGreaterThan(s)) {
                                f.push({
                                    amount: s.decimalPlaces(o).toString(),
                                    fundSourceWalletType: al[n[h].walletType]
                                });
                                break
                            }
                            f.push({
                                amount: p.decimalPlaces(o).toString(),
                                fundSourceWalletType: al[n[h].walletType]
                            }), s = s.minus(p), h++
                        }
                        return il({
                            asset: e,
                            targetAccountType: l,
                            details: f
                        })
                    },
                    yl = function(t) {
                        var e = t.biz,
                            r = t.coin;
                        fl();
                        var n = Xu((0, i.useState)([]), 2),
                            a = n[0],
                            c = n[1],
                            u = pl(e).value,
                            l = (0, i.useMemo)((function() {
                                return null != u && u.length ? u.map((function(t) {
                                    return cl[t.type]
                                })).join(",") : ""
                            }), [u]),
                            s = Qu(l),
                            f = s.value,
                            h = s.update,
                            p = (0, i.useMemo)((function() {
                                return null == f ? void 0 : f.find((function(t) {
                                    return t.asset === r
                                }))
                            }), [f, r]),
                            v = uo().getAssetInfo,
                            y = Xu((0, o.useCacheState)("combine-trade-select-".concat(e, "-selected")), 2),
                            d = y[0],
                            m = y[1],
                            g = Ao("Asset-Integration-Component").getI18nText;
                        (0, i.useEffect)((function() {
                            var t;
                            return ol(rl().mark((function e() {
                                    var r;
                                    return rl().wrap((function(e) {
                                        for (;;) switch (e.prev = e.next) {
                                            case 0:
                                                if (!(r = null == u ? void 0 : u.map((function(t) {
                                                        return t.type
                                                    })))) {
                                                    e.next = 5;
                                                    break
                                                }
                                                return e.next = 4, Wu(r);
                                            case 4:
                                                t = e.sent;
                                            case 5:
                                            case "end":
                                                return e.stop()
                                        }
                                    }), e)
                                })))(),
                                function() {
                                    var e;
                                    null === (e = t) || void 0 === e || e.forEach((function(t) {
                                        t()
                                    }))
                                }
                        }), [u]);
                        var w = (0, i.useMemo)((function() {
                                var t = v(r);
                                return a.reduce((function(t, e) {
                                    return new(Iu())(e.balance).isNaN() ? t : t.plus(e.balance)
                                }), new(Iu())(0)).decimalPlaces((null == t ? void 0 : t.assetDigit) || 8).toString()
                            }), [r, v, a]),
                            b = (0, i.useMemo)((function() {
                                return null == u ? void 0 : u.map((function(t) {
                                    var e = null == p ? void 0 : p[t.type],
                                        n = v(r);
                                    return {
                                        walletType: t.type,
                                        walletName: g("combine-trade-wallet-".concat(t.type)),
                                        balance: null == e ? void 0 : e.free,
                                        digit: null == n ? void 0 : n.assetDigit,
                                        require: t.required
                                    }
                                }))
                            }), [r, v, g, p, u]);
                        (0, i.useEffect)((function() {
                            if (u && !o.cachePromiseStore.getCache("combine-trade-select-".concat(e, "-selected"))) {
                                var t = (null == u ? void 0 : u.reduce((function(t, e) {
                                    return e.selected && t.push(e.type), t
                                }), [])) || [];
                                m(t)
                            }
                        }), [e, m, u]), (0, i.useEffect)((function() {
                            if (b && d) {
                                var t = [];
                                null == d || d.find((function(e) {
                                    var r = null == b ? void 0 : b.find((function(t) {
                                        return t.walletType === e
                                    }));
                                    r && t.push({
                                        walletType: r.walletType,
                                        balance: r.balance
                                    })
                                })), c((function(e) {
                                    return JSON.stringify(e) === JSON.stringify(t) ? e : t
                                }))
                            }
                        }), [d, b]);
                        var x = function() {
                            var t = ol(rl().mark((function t(e) {
                                var n;
                                return rl().wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            return t.abrupt("return", vl(e, r, w, a, (null === (n = v(r)) || void 0 === n ? void 0 : n.assetDigit) || 8));
                                        case 1:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t)
                            })));
                            return function(e) {
                                return t.apply(this, arguments)
                            }
                        }();
                        return {
                            selectedWallet: a,
                            maxAvaliable: w,
                            preTransferHander: x,
                            walletConfig: b,
                            updateBalance: h
                        }
                    };

                function dl(t) {
                    return dl = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, dl(t)
                }

                function ml() {
                    ml = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == dl(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function gl(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }
                var wl = v(function() {
                        var t, e = (t = ml().mark((function t(e) {
                            var r, n, o;
                            return ml().wrap((function(t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        if (e) {
                                            t.next = 2;
                                            break
                                        }
                                        return t.abrupt("return", null);
                                    case 2:
                                        return t.next = 4, Dt({
                                            quoteAsset: e,
                                            needAlphaAsset: !0
                                        });
                                    case 4:
                                        return r = t.sent, n = (0, lu.PD)(0), o = [], r && r.length > 0 && r.forEach((function(t) {
                                            var e = t.totalBalance,
                                                r = Number(e);
                                            isNaN(r) && (r = 0), n = (0, lu.PD)(n, r), o = o.concat(t.walletList)
                                        })), t.abrupt("return", {
                                            totalAssetBalance: n.toNumber(),
                                            walletGroupData: r,
                                            walletBalanceData: o
                                        });
                                    case 9:
                                    case "end":
                                        return t.stop()
                                }
                            }), t)
                        })), function() {
                            var e = this,
                                r = arguments;
                            return new Promise((function(n, o) {
                                var i = t.apply(e, r);

                                function a(t) {
                                    gl(i, n, o, a, c, "next", t)
                                }

                                function c(t) {
                                    gl(i, n, o, a, c, "throw", t)
                                }
                                a(void 0)
                            }))
                        });
                        return function(t) {
                            return e.apply(this, arguments)
                        }
                    }()),
                    bl = (0, o.generateUseState)("useAssetWalletGroup", wl, ["accountUserQuoteAssetGet"]),
                    xl = function() {
                        return Vc(), bl()
                    };

                function Ll() {
                    Ll = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == El(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function El(t) {
                    return El = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, El(t)
                }

                function Sl(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }

                function Ol(t) {
                    return function() {
                        var e = this,
                            r = arguments;
                        return new Promise((function(n, o) {
                            var i = t.apply(e, r);

                            function a(t) {
                                Sl(i, n, o, a, c, "next", t)
                            }

                            function c(t) {
                                Sl(i, n, o, a, c, "throw", t)
                            }
                            a(void 0)
                        }))
                    }
                }
                xl.triggerUpdateState = bl.triggerUpdateState;
                var jl = v(Ol(Ll().mark((function t() {
                    var e, r;
                    return Ll().wrap((function(t) {
                        for (;;) switch (t.prev = t.next) {
                            case 0:
                                return e = {}, t.next = 3, (0, ne.Ri)();
                            case 3:
                                return "object" === El((r = t.sent).userComplianceStatus) && Object.assign(e, r.userComplianceStatus), t.abrupt("return", e);
                            case 6:
                            case "end":
                                return t.stop()
                        }
                    }), t)
                }))));
                const Pl = (0, o.generateUseState)("useUserComplianceStatus", jl);

                function _l(t) {
                    return _l = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    } : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, _l(t)
                }

                function kl() {
                    kl = function() {
                        return t
                    };
                    var t = {},
                        e = Object.prototype,
                        r = e.hasOwnProperty,
                        n = Object.defineProperty || function(t, e, r) {
                            t[e] = r.value
                        },
                        o = "function" == typeof Symbol ? Symbol : {},
                        i = o.iterator || "@@iterator",
                        a = o.asyncIterator || "@@asyncIterator",
                        c = o.toStringTag || "@@toStringTag";

                    function u(t, e, r) {
                        return Object.defineProperty(t, e, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), t[e]
                    }
                    try {
                        u({}, "")
                    } catch (t) {
                        u = function(t, e, r) {
                            return t[e] = r
                        }
                    }

                    function l(t, e, r, o) {
                        var i = e && e.prototype instanceof h ? e : h,
                            a = Object.create(i.prototype),
                            c = new O(o || []);
                        return n(a, "_invoke", {
                            value: x(t, r, c)
                        }), a
                    }

                    function s(t, e, r) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, r)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    t.wrap = l;
                    var f = {};

                    function h() {}

                    function p() {}

                    function v() {}
                    var y = {};
                    u(y, i, (function() {
                        return this
                    }));
                    var d = Object.getPrototypeOf,
                        m = d && d(d(j([])));
                    m && m !== e && r.call(m, i) && (y = m);
                    var g = v.prototype = h.prototype = Object.create(y);

                    function w(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                            u(t, e, (function(t) {
                                return this._invoke(e, t)
                            }))
                        }))
                    }

                    function b(t, e) {
                        function o(n, i, a, c) {
                            var u = s(t[n], t, i);
                            if ("throw" !== u.type) {
                                var l = u.arg,
                                    f = l.value;
                                return f && "object" == _l(f) && r.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                                    o("next", t, a, c)
                                }), (function(t) {
                                    o("throw", t, a, c)
                                })) : e.resolve(f).then((function(t) {
                                    l.value = t, a(l)
                                }), (function(t) {
                                    return o("throw", t, a, c)
                                }))
                            }
                            c(u.arg)
                        }
                        var i;
                        n(this, "_invoke", {
                            value: function(t, r) {
                                function n() {
                                    return new e((function(e, n) {
                                        o(t, r, e, n)
                                    }))
                                }
                                return i = i ? i.then(n, n) : n()
                            }
                        })
                    }

                    function x(t, e, r) {
                        var n = "suspendedStart";
                        return function(o, i) {
                            if ("executing" === n) throw new Error("Generator is already running");
                            if ("completed" === n) {
                                if ("throw" === o) throw i;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = o, r.arg = i;;) {
                                var a = r.delegate;
                                if (a) {
                                    var c = L(a, r);
                                    if (c) {
                                        if (c === f) continue;
                                        return c
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === n) throw n = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = "executing";
                                var u = s(t, e, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                            }
                        }
                    }

                    function L(t, e) {
                        var r = e.method,
                            n = t.iterator[r];
                        if (void 0 === n) return e.delegate = null, "throw" === r && t.iterator.return && (e.method = "return", e.arg = void 0, L(t, e), "throw" === e.method) || "return" !== r && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + r + "' method")), f;
                        var o = s(n, t.iterator, e.arg);
                        if ("throw" === o.type) return e.method = "throw", e.arg = o.arg, e.delegate = null, f;
                        var i = o.arg;
                        return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, f) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f)
                    }

                    function E(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                    }

                    function S(t) {
                        var e = t.completion || {};
                        e.type = "normal", delete e.arg, t.completion = e
                    }

                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], t.forEach(E, this), this.reset(!0)
                    }

                    function j(t) {
                        if (t) {
                            var e = t[i];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) {
                                var n = -1,
                                    o = function e() {
                                        for (; ++n < t.length;)
                                            if (r.call(t, n)) return e.value = t[n], e.done = !1, e;
                                        return e.value = void 0, e.done = !0, e
                                    };
                                return o.next = o
                            }
                        }
                        return {
                            next: P
                        }
                    }

                    function P() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return p.prototype = v, n(g, "constructor", {
                        value: v,
                        configurable: !0
                    }), n(v, "constructor", {
                        value: p,
                        configurable: !0
                    }), p.displayName = u(v, c, "GeneratorFunction"), t.isGeneratorFunction = function(t) {
                        var e = "function" == typeof t && t.constructor;
                        return !!e && (e === p || "GeneratorFunction" === (e.displayName || e.name))
                    }, t.mark = function(t) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, u(t, c, "GeneratorFunction")), t.prototype = Object.create(g), t
                    }, t.awrap = function(t) {
                        return {
                            __await: t
                        }
                    }, w(b.prototype), u(b.prototype, a, (function() {
                        return this
                    })), t.AsyncIterator = b, t.async = function(e, r, n, o, i) {
                        void 0 === i && (i = Promise);
                        var a = new b(l(e, r, n, o), i);
                        return t.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                            return t.done ? t.value : a.next()
                        }))
                    }, w(g), u(g, c, "Generator"), u(g, i, (function() {
                        return this
                    })), u(g, "toString", (function() {
                        return "[object Generator]"
                    })), t.keys = function(t) {
                        var e = Object(t),
                            r = [];
                        for (var n in e) r.push(n);
                        return r.reverse(),
                            function t() {
                                for (; r.length;) {
                                    var n = r.pop();
                                    if (n in e) return t.value = n, t.done = !1, t
                                }
                                return t.done = !0, t
                            }
                    }, t.values = j, O.prototype = {
                        constructor: O,
                        reset: function(t) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !t)
                                for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var t = this.tryEntries[0].completion;
                            if ("throw" === t.type) throw t.arg;
                            return this.rval
                        },
                        dispatchException: function(t) {
                            if (this.done) throw t;
                            var e = this;

                            function n(r, n) {
                                return a.type = "throw", a.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                            }
                            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                                var i = this.tryEntries[o],
                                    a = i.completion;
                                if ("root" === i.tryLoc) return n("end");
                                if (i.tryLoc <= this.prev) {
                                    var c = r.call(i, "catchLoc"),
                                        u = r.call(i, "finallyLoc");
                                    if (c && u) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    } else if (c) {
                                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(t, e) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var o = this.tryEntries[n];
                                if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var i = o;
                                    break
                                }
                            }
                            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
                            var a = i ? i.completion : {};
                            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(a)
                        },
                        complete: function(t, e) {
                            if ("throw" === t.type) throw t.arg;
                            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), f
                        },
                        finish: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), S(r), f
                            }
                        },
                        catch: function(t) {
                            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                                var r = this.tryEntries[e];
                                if (r.tryLoc === t) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var o = n.arg;
                                        S(r)
                                    }
                                    return o
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(t, e, r) {
                            return this.delegate = {
                                iterator: j(t),
                                resultName: e,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, t
                }

                function Nl(t, e, r, n, o, i, a) {
                    try {
                        var c = t[i](a),
                            u = c.value
                    } catch (t) {
                        return void r(t)
                    }
                    c.done ? e(u) : Promise.resolve(u).then(n, o)
                }
                var Al = function() {
                        var t, e = (t = kl().mark((function t() {
                            var e, r;
                            return kl().wrap((function(t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        return t.next = 2, (0, b.get)("/bapi/compliance/v1/private/compliance/task-center/query-all-tasks-for-home-page");
                                    case 2:
                                        return e = t.sent, r = e.data, t.abrupt("return", r);
                                    case 5:
                                    case "end":
                                        return t.stop()
                                }
                            }), t)
                        })), function() {
                            var e = this,
                                r = arguments;
                            return new Promise((function(n, o) {
                                var i = t.apply(e, r);

                                function a(t) {
                                    Nl(i, n, o, a, c, "next", t)
                                }

                                function c(t) {
                                    Nl(i, n, o, a, c, "throw", t)
                                }
                                a(void 0)
                            }))
                        });
                        return function() {
                            return e.apply(this, arguments)
                        }
                    }(),
                    Tl = (0, o.generateUseState)("useTodoList", Al)
            },
            1024: e => {
                e.exports = t
            },
            8935: t => {
                t.exports = e
            },
            3418: t => {
                t.exports = r
            },
            1458: t => {
                t.exports = n
            },
            8820: t => {
                t.exports = o
            },
            1996: t => {
                t.exports = i
            }
        },
        u = {};

    function l(t) {
        var e = u[t];
        if (void 0 !== e) return e.exports;
        var r = u[t] = {
            id: t,
            loaded: !1,
            exports: {}
        };
        return c[t].call(r.exports, r, r.exports, l), r.loaded = !0, r.exports
    }
    l.m = c, a = [], l.O = (t, e, r, n) => {
        if (!e) {
            var o = 1 / 0;
            for (s = 0; s < a.length; s++) {
                for (var [e, r, n] = a[s], i = !0, c = 0; c < e.length; c++)(!1 & n || o >= n) && Object.keys(l.O).every((t => l.O[t](e[c]))) ? e.splice(c--, 1) : (i = !1, n < o && (o = n));
                if (i) {
                    a.splice(s--, 1);
                    var u = r();
                    void 0 !== u && (t = u)
                }
            }
            return t
        }
        n = n || 0;
        for (var s = a.length; s > 0 && a[s - 1][2] > n; s--) a[s] = a[s - 1];
        a[s] = [e, r, n]
    }, l.n = t => {
        var e = t && t.__esModule ? () => t.default : () => t;
        return l.d(e, {
            a: e
        }), e
    }, l.d = (t, e) => {
        for (var r in e) l.o(e, r) && !l.o(t, r) && Object.defineProperty(t, r, {
            enumerable: !0,
            get: e[r]
        })
    }, l.g = function() {
        if ("object" == typeof globalThis) return globalThis;
        try {
            return this || new Function("return this")()
        } catch (t) {
            if ("object" == typeof window) return window
        }
    }(), l.o = (t, e) => Object.prototype.hasOwnProperty.call(t, e), l.r = t => {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
            value: "Module"
        }), Object.defineProperty(t, "__esModule", {
            value: !0
        })
    }, l.nmd = t => (t.paths = [], t.children || (t.children = []), t), l.j = 126, (() => {
        var t = {
            126: 0
        };
        l.O.j = e => 0 === t[e];
        var e = (e, r) => {
                var n, o, [i, a, c] = r,
                    u = 0;
                if (i.some((e => 0 !== t[e]))) {
                    for (n in a) l.o(a, n) && (l.m[n] = a[n]);
                    if (c) var s = c(l)
                }
                for (e && e(r); u < i.length; u++) o = i[u], l.o(t, o) && t[o] && t[o][0](), t[o] = 0;
                return l.O(s)
            },
            r = this.webpackChunkUMD = this.webpackChunkUMD || [];
        r.forEach(e.bind(null, 0)), r.push = e.bind(null, r.push.bind(r))
    })();
    var s = l.O(void 0, [736], (() => l(5932)));
    return l.O(s)
})()));